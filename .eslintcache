<<<<<<< HEAD
[{"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\index.js":"1","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\serviceWorker.js":"2","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\App.js":"3","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\context\\LayoutContext.js":"4","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\context\\UserContext.js":"5","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\themes\\index.js":"6","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\services\\urlAPI.js":"7","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\error\\Error.js":"8","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\themes\\default.js":"9","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Layout\\Layout.js":"10","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\login\\Login.js":"11","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\services\\index.js":"12","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\login\\styles.js":"13","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Drivers\\NewDriver.js":"14","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Drivers\\DriverDetail.js":"15","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Layout\\styles.js":"16","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\error\\styles.js":"17","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\charts\\Charts.js":"18","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\tables\\Tables.js":"19","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\maps\\Maps.js":"20","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\dashboard\\Dashboard.js":"21","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\typography\\Typography.js":"22","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\icons\\Icons.js":"23","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\notifications\\Notifications.js":"24","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Drivers\\index.js":"25","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Sidebar\\Sidebar.js":"26","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Header\\Header.js":"27","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Wrappers\\Wrappers.js":"28","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Widget\\Widget.js":"29","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\dashboard\\mock.js":"30","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\maps\\styles.js":"31","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\typography\\styles.js":"32","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\icons\\styles.js":"33","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\PageTitle\\PageTitle.js":"34","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\dashboard\\styles.js":"35","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Sidebar\\components\\Dot.js":"36","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\dashboard\\components\\Table\\Table.js":"37","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"38","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Sidebar\\styles.js":"39","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\notifications\\styles.js":"40","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"41","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Header\\styles.js":"42","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Notification\\Notification.js":"43","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\UserAvatar\\UserAvatar.js":"44","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\charts\\components\\ApexHeatmap.js":"45","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\charts\\components\\ApexLineChart.js":"46","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Widget\\styles.js":"47","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"48","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\PageTitle\\styles.js":"49","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"50","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Notification\\styles.js":"51","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\UserAvatar\\styles.js":"52","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Bus\\BusDetail.js":"53","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Bus\\NewBus.js":"54","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Bus\\index.js":"55","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\TripBus\\TripBusDetail.js":"56","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\TripBus\\index.js":"57","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\TripBus\\TripBus.js":"58"},{"size":896,"mtime":1636817473613,"results":"59","hashOfConfig":"60"},{"size":5083,"mtime":1636817473634,"results":"61","hashOfConfig":"60"},{"size":1787,"mtime":1636817473596,"results":"62","hashOfConfig":"60"},{"size":1984,"mtime":1636820318641,"results":"63","hashOfConfig":"60"},{"size":2933,"mtime":1638031813184,"results":"64","hashOfConfig":"60"},{"size":534,"mtime":1636817473635,"results":"65","hashOfConfig":"60"},{"size":973,"mtime":1638213783481,"results":"66","hashOfConfig":"60"},{"size":1626,"mtime":1636817473620,"results":"67","hashOfConfig":"60"},{"size":3127,"mtime":1636817473635,"results":"68","hashOfConfig":"60"},{"size":5457,"mtime":1638214772691,"results":"69","hashOfConfig":"60"},{"size":4935,"mtime":1636820318643,"results":"70","hashOfConfig":"60"},{"size":817,"mtime":1638201176838,"results":"71","hashOfConfig":"60"},{"size":3556,"mtime":1636820318644,"results":"72","hashOfConfig":"60"},{"size":5730,"mtime":1636862703321,"results":"73","hashOfConfig":"60"},{"size":8096,"mtime":1638186643215,"results":"74","hashOfConfig":"60"},{"size":710,"mtime":1636817473599,"results":"75","hashOfConfig":"60"},{"size":1395,"mtime":1636817473621,"results":"76","hashOfConfig":"60"},{"size":5790,"mtime":1636817473613,"results":"77","hashOfConfig":"60"},{"size":2146,"mtime":1636817473632,"results":"78","hashOfConfig":"60"},{"size":1010,"mtime":1636817473627,"results":"79","hashOfConfig":"60"},{"size":16126,"mtime":1636817473616,"results":"80","hashOfConfig":"60"},{"size":4632,"mtime":1636817473633,"results":"81","hashOfConfig":"60"},{"size":391433,"mtime":1636817473624,"results":"82","hashOfConfig":"60"},{"size":14494,"mtime":1636820318645,"results":"83","hashOfConfig":"60"},{"size":2727,"mtime":1636862434827,"results":"84","hashOfConfig":"60"},{"size":3981,"mtime":1638161232191,"results":"85","hashOfConfig":"60"},{"size":10270,"mtime":1636820318639,"results":"86","hashOfConfig":"60"},{"size":3971,"mtime":1636817473610,"results":"87","hashOfConfig":"60"},{"size":2581,"mtime":1636817473608,"results":"88","hashOfConfig":"60"},{"size":4288,"mtime":1636817473618,"results":"89","hashOfConfig":"60"},{"size":178,"mtime":1636817473628,"results":"90","hashOfConfig":"60"},{"size":389,"mtime":1636817473633,"results":"91","hashOfConfig":"60"},{"size":812,"mtime":1636817473625,"results":"92","hashOfConfig":"60"},{"size":590,"mtime":1636820318640,"results":"93","hashOfConfig":"60"},{"size":3000,"mtime":1636817473619,"results":"94","hashOfConfig":"60"},{"size":902,"mtime":1636817473604,"results":"95","hashOfConfig":"60"},{"size":1323,"mtime":1636817473618,"results":"96","hashOfConfig":"60"},{"size":4160,"mtime":1636817473616,"results":"97","hashOfConfig":"60"},{"size":1363,"mtime":1636817473605,"results":"98","hashOfConfig":"60"},{"size":1943,"mtime":1636817473631,"results":"99","hashOfConfig":"60"},{"size":4632,"mtime":1637398201311,"results":"100","hashOfConfig":"60"},{"size":4043,"mtime":1636817473598,"results":"101","hashOfConfig":"60"},{"size":3413,"mtime":1636817473600,"results":"102","hashOfConfig":"60"},{"size":620,"mtime":1636817473606,"results":"103","hashOfConfig":"60"},{"size":1909,"mtime":1636817473614,"results":"104","hashOfConfig":"60"},{"size":1396,"mtime":1636817473614,"results":"105","hashOfConfig":"60"},{"size":1015,"mtime":1636817473609,"results":"106","hashOfConfig":"60"},{"size":1075,"mtime":1636817473617,"results":"107","hashOfConfig":"60"},{"size":529,"mtime":1636820318640,"results":"108","hashOfConfig":"60"},{"size":1474,"mtime":1636817473605,"results":"109","hashOfConfig":"60"},{"size":1040,"mtime":1636817473601,"results":"110","hashOfConfig":"60"},{"size":291,"mtime":1636817473607,"results":"111","hashOfConfig":"60"},{"size":7277,"mtime":1637476646064,"results":"112","hashOfConfig":"60"},{"size":5721,"mtime":1638241541819,"results":"113","hashOfConfig":"60"},{"size":2770,"mtime":1637945040309,"results":"114","hashOfConfig":"60"},{"size":13928,"mtime":1638214947596,"results":"115","hashOfConfig":"60"},{"size":3538,"mtime":1638326098303,"results":"116","hashOfConfig":"60"},{"size":12359,"mtime":1638215033823,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"1a02jpf",{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"120"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"120"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"120"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"120"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"120"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"120"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"120"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"120"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"120"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"120"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"120"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"120"},"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\index.js",[],["247","248"],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\serviceWorker.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\App.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\context\\LayoutContext.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\context\\UserContext.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\themes\\index.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\services\\urlAPI.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\error\\Error.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\themes\\default.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Layout\\Layout.js",["249","250","251"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { Box, IconButton, Link } from '@material-ui/core';\r\nimport Icon from '@mdi/react';\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\n//icons\r\nimport {\r\n  mdiFacebook as FacebookIcon,\r\n  mdiTwitter as TwitterIcon,\r\n  mdiGithub as GithubIcon,\r\n} from '@mdi/js'\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Dashboard from \"../../pages/dashboard\";\r\nimport Typography from \"../../pages/typography\";\r\nimport Notifications from \"../../pages/notifications\";\r\nimport Maps from \"../../pages/maps\";\r\nimport Tables from \"../../pages/tables\";\r\nimport Icons from \"../../pages/icons\";\r\nimport Charts from \"../../pages/charts\";\r\nimport Drivers from \"../../pages/Drivers\";\r\n\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\nimport DriverDetail from \"../../pages/Drivers/DriverDetail\";\r\nimport NewDriver from \"../../pages/Drivers/NewDriver\";\r\nimport Bus from \"../../pages/Bus\";\r\nimport BusDetail from \"../../pages/Bus/BusDetail\";\r\nimport NewBus from \"../../pages/Bus/NewBus\";\r\nimport TripBus from \"../../pages/TripBus\";\r\nimport TripBusDetail from \"../../pages/TripBus/TripBusDetail\";\r\nimport TripBusNew from \"../../pages/TripBus/TripBus\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  const notifyError = (message) => toast.error(message);\r\n\r\n  const notifySuccess = (message) => toast.success(message);\r\n\r\n  useEffect(() => {\r\n    if (layoutState.showToastSuccess) {\r\n      notifySuccess(layoutState.message);\r\n    }\r\n  }, [layoutState.showToastSuccess]);\r\n\r\n  useEffect(() => {\r\n    if (layoutState.showToastFail) {\r\n      notifyError(layoutState.message);\r\n    }\r\n  }, [layoutState.showToastFail]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <>\r\n        <ToastContainer />\r\n        <Header history={props.history} />\r\n        <Sidebar />\r\n        <div\r\n          className={classnames(classes.content, {\r\n            [classes.contentShift]: layoutState.isSidebarOpened,\r\n          })}\r\n        >\r\n          <div className={classes.fakeToolbar} />\r\n          <Switch>\r\n            <Route path=\"/app/dashboard\" component={Dashboard} />\r\n            <Route path=\"/app/typography\" component={Typography} />\r\n            <Route path=\"/app/tables\" component={Tables} />\r\n            <Route path=\"/app/notifications\" component={Notifications} />\r\n            <Route\r\n              exact\r\n              path=\"/app/ui\"\r\n              render={() => <Redirect to=\"/app/ui/icons\" />}\r\n            />\r\n            <Route exact path=\"/app/drivers\" component={Drivers} />\r\n            <Route exact path=\"/app/drivers/create\" component={NewDriver} />\r\n            <Route exact path=\"/app/drivers/:id\" component={DriverDetail} />\r\n            <Route exact path=\"/app/bus\" component={Bus} />\r\n            <Route exact path=\"/app/bus/create\" component={NewBus} />\r\n            <Route exact path=\"/app/bus/:id\" component={BusDetail} />\r\n            <Route exact path=\"/app/tripbus\" component={TripBus} />\r\n            <Route exact path=\"/app/tripbus/create\" component={TripBusNew} />\r\n            <Route exact path=\"/app/tripbus/:id\" component={TripBusDetail} />\r\n            <Route path=\"/app/ui/maps\" component={Maps} />\r\n            <Route path=\"/app/ui/icons\" component={Icons} />\r\n            <Route path=\"/app/ui/charts\" component={Charts} />\r\n          </Switch>\r\n          <Box\r\n            mt={5}\r\n            width={\"100%\"}\r\n            display={\"flex\"}\r\n            alignItems={\"center\"}\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <div>\r\n              <Link\r\n                color={'primary'}\r\n                href={'https://github.com/AwesomeDracula/SbTickets_BE'}\r\n                target={'_blank'}\r\n                className={classes.link}\r\n              >\r\n                Project Backend\r\n              </Link>\r\n              <Link\r\n                color={'primary'}\r\n                href={'https://github.com/AwesomeDracula/SbTickets_FE'}\r\n                target={'_blank'}\r\n                className={classes.link}\r\n              >\r\n                Project Frontend\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              <Link\r\n                href={'https://www.facebook.com/groups/371157724565461'}\r\n                target={'_blank'}\r\n              >\r\n                <IconButton aria-label=\"facebook\">\r\n                  <Icon\r\n                    path={FacebookIcon}\r\n                    size={1}\r\n                    color=\"#6E6E6E99\"\r\n                  />\r\n                </IconButton>\r\n              </Link>\r\n              <Link\r\n                href={'https://github.com/AwesomeDracula/'}\r\n                target={'_blank'}\r\n              >\r\n                <IconButton\r\n                  aria-label=\"github\"\r\n                  style={{ marginRight: -12 }}\r\n                >\r\n                  <Icon\r\n                    path={GithubIcon}\r\n                    size={1}\r\n                    color=\"#6E6E6E99\"\r\n                  />\r\n                </IconButton>\r\n              </Link>\r\n            </div>\r\n          </Box>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\login\\Login.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\services\\index.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\login\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Drivers\\NewDriver.js",["252","253","254","255","256","257","258"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport instance from '../../services';\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    width: '80%',\r\n    fontSize: '14px !important',\r\n    marginBottom: '30px'\r\n  },\r\n}));\r\n\r\nconst data = {\r\n  nationalId: \"\",\r\n  name: \"\",\r\n  codeLicense: \"\",\r\n  typeLicense: \"\",\r\n  address: \"\",\r\n  dob: \"2000-01-01\",\r\n  seniority: 0,\r\n  image: \"body?.image\",\r\n};\r\n\r\nfunction NewDriver() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [formValues, setFormValues] = useState(data);\r\n\r\n  const handleSaveButton = () => {\r\n    instance.post(AppURL.createDriver, {\r\n      ...formValues,\r\n      seniority: parseInt(formValues.seniority),\r\n    })\r\n      .then(res => {\r\n        toast.success(res?.msg);\r\n        history.goBack();\r\n      })\r\n      .catch(error => {\r\n        toast.error(error?.msg);\r\n      })\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormValues({\r\n      ...formValues,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\r\n        formValues ? <>\r\n          <PageTitle\r\n            title=\"Driver Details\"\r\n            buttonBack={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"secondary\"\r\n              onClick={() => history.goBack()}\r\n            >\r\n              Back\r\n            </MUIButton>}\r\n            button={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              onClick={handleSaveButton}\r\n            >\r\n              Save\r\n            </MUIButton>} />\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n              <Widget disableWidgetMenu>\r\n                <Grid container item xs={12}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      id=\"nationalId\"\r\n                      name=\"nationalId\"\r\n                      label=\"National ID\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.nationalId}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      label=\"Name\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.name}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"codeLicense\"\r\n                      name=\"codeLicense\"\r\n                      label=\"Code License\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.codeLicense}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"typeLicense\"\r\n                      name=\"typeLicense\"\r\n                      label=\"Type License\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues.typeLicense}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      id=\"address\"\r\n                      name=\"address\"\r\n                      label=\"Address\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.address}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"dob\"\r\n                      label=\"Date of Birth\"\r\n                      type=\"date\"\r\n                      value={new Date(new Date(formValues?.dob).getTime() - new Date(formValues?.dob).getTimezoneOffset() * 60 * 1000)}\r\n                      sx={{ width: 220 }}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      name=\"dob\"\r\n                      className={classes.input}\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"seniority\"\r\n                      name=\"seniority\"\r\n                      label=\"Seniority\"\r\n                      type=\"number\"\r\n                      className={classes.input}\r\n                      value={formValues?.seniority}\r\n                      onChange={handleInputChange}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Widget>\r\n            </Grid>\r\n          </Grid>\r\n        </> : <CircularProgress />\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewDriver\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Drivers\\DriverDetail.js",["259","260","261","262","263","264","265","266","267","268","269"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport instance from '../../services';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    width: '80%',\r\n    fontSize: '14px !important',\r\n    marginBottom: '30px'\r\n  },\r\n}));\r\n\r\nfunction DriverDetail() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n  const [formValues, setFormValues] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let url = AppURL.getDriver + '/' + id;\r\n    instance.get(url)\r\n      .then(res => {\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          let data = {\r\n            nationalId: body?.nationalId,\r\n            name: body?.name,\r\n            codeLicense: body?.codeLicense,\r\n            typeLicense: body?.typeLicense,\r\n            address: body?.address,\r\n            dob: body?.dob,\r\n            seniority: body?.seniority,\r\n            image: body?.image,\r\n          };\r\n          setFormValues(data);\r\n          setImageDriver(data.image);\r\n        }\r\n\r\n      })\r\n  }, []);\r\n\r\n  const handleEditButton = () => {\r\n    if (isEditing) {\r\n      let url = AppURL.updateDriver + '/' + id;\r\n      instance.put(url, {\r\n        ...formValues,\r\n        seniority: parseInt(formValues.seniority),\r\n        salaryId: 1,\r\n        dob: '2000-01-01',\r\n        image: imageDrvier\r\n      }).then(res => {\r\n        toast.success(res?.msg);\r\n        history.goBack();\r\n      }).catch(error => {\r\n        toast.error(error?.msg);\r\n      })\r\n    }\r\n    setIsEditing(!isEditing);\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    // console.log(e.target.files[0].name);\r\n    if(e.target.name === 'image'){\r\n      setImageDriver(\"../\" + e.target.files[0].name);\r\n    }\r\n    const { name, value }  = e.target;\r\n    setFormValues({\r\n      ...formValues,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const [imageDrvier, setImageDriver] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      {\r\n        formValues ? <>\r\n          <PageTitle\r\n            title=\"Driver Details\"\r\n            buttonBack={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"secondary\"\r\n              onClick={() => history.goBack()}\r\n            >\r\n              Back\r\n            </MUIButton>}\r\n            button={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              onClick={handleEditButton}\r\n            >\r\n              {isEditing ? 'Save' : 'Edit'}\r\n            </MUIButton>} />\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n              <Widget disableWidgetMenu>\r\n                <Grid container item xs={12}>\r\n                  <Grid item xs={6}>\r\n                      <div className=\"MuiFormControl-root MuiTextField-root makeStyles-input-60\">\r\n                        <img src={imageDrvier}\r\n                            variant=\"outlined\"\r\n                            id=\"image\" \r\n                            width=\"200\" height=\"120\" />\r\n                        <input type=\"file\"  onChange={handleInputChange} disabled={!isEditing} name=\"image\"/>\r\n                      </div>\r\n                    <TextField\r\n                      id=\"nationalId\"\r\n                      name=\"nationalId\"\r\n                      label=\"National ID\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.nationalId}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      label=\"Name\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.name}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"codeLicense\"\r\n                      name=\"codeLicense\"\r\n                      label=\"Code License\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.codeLicense}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    {/* <TextField\r\n                      id=\"typeLicense\"\r\n                      name=\"typeLicense\"\r\n                      label=\"Type License\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues.typeLicense}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    /> */}\r\n                    \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                  <TextField\r\n                      id=\"typeLicense\"\r\n                      name=\"typeLicense\"\r\n                      label=\"Type License\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues.typeLicense}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"address\"\r\n                      name=\"address\"\r\n                      label=\"Address\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.address}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"dob\"\r\n                      label=\"Date of Birth\"\r\n                      type=\"date\"\r\n                      value={new Date(new Date(formValues?.dob).getTime() - new Date(formValues?.dob).getTimezoneOffset() * 60 * 1000)}\r\n                      sx={{ width: 220 }}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      name=\"dob\"\r\n                      className={classes.input}\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"seniority\"\r\n                      name=\"seniority\"\r\n                      label=\"Seniority\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.seniority}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Widget>\r\n            </Grid>\r\n          </Grid>\r\n        </> : <CircularProgress />\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DriverDetail\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Layout\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\error\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\charts\\Charts.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\tables\\Tables.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\maps\\Maps.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\dashboard\\Dashboard.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\typography\\Typography.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\icons\\Icons.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\notifications\\Notifications.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Drivers\\index.js",["270"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport instance from \"../../services\";\r\n\r\nexport default function Tables() {\r\n  let history = useHistory();\r\n  const [datatableData, setData] = useState(null);\r\n  const [rowsSelectedByUser, setRowsSelected] = useState([]);\r\n  useEffect(() => {\r\n    instance.get(AppURL.getAllDrivers)\r\n      .then(res => {\r\n        console.log(JSON.stringify(res));\r\n        const body = res?.body;\r\n        const data = body.map(driver => {\r\n          let driverData = [];\r\n          driverData.push(driver?.id, driver?.nationalId, driver?.name, driver?.typeLicense, driver?.seniority);\r\n          return driverData;\r\n        })\r\n        setData(data);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }, [])\r\n\r\n  const handleRowClick = (rowData, rowMeta) => {\r\n    console.log('hello', rowData, rowMeta);\r\n    history.push(`/app/drivers/${rowData[0]}`);\r\n  }\r\n\r\n  const handleRowDelete = () => {\r\n    let rowsToDelete = [];\r\n    datatableData.map((data, idx) => {\r\n      if (rowsSelectedByUser.includes(idx))\r\n        rowsToDelete.push(data[0]);\r\n    })\r\n    instance.post(AppURL.deleteDrivers, rowsToDelete)\r\n      .then(res => {\r\n        toast.success(res?.msg);\r\n      }).catch(error => {\r\n        toast.error(error?.msg);\r\n        return false;\r\n      });\r\n  }\r\n\r\n  const handleSelectRow = (currentRowsSelected, allRowsSelected, rowsSelected) => {\r\n    setRowsSelected(rowsSelected);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Tables\"\r\n        button={<MUIButton\r\n          variant=\"contained\"\r\n          size=\"medium\"\r\n          color=\"primary\"\r\n          onClick={() => { history.push(`/app/drivers/create`) }}\r\n        >\r\n          New\r\n        </MUIButton>} />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          {\r\n            datatableData ? <MUIDataTable\r\n              title=\"Driver List\"\r\n              data={datatableData}\r\n              columns={[\"Id\", \"National Id\", \"Name\", \"License\", \"Seniority\"]}\r\n              options={{\r\n                filterType: \"checkbox\",\r\n                draggableColumns: true,\r\n                onRowClick: handleRowClick,\r\n                onRowsDelete: handleRowDelete,\r\n                onRowSelectionChange: handleSelectRow\r\n              }}\r\n            /> : <CircularProgress />\r\n          }\r\n\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Sidebar\\Sidebar.js",["271","272","273","274"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  DriveEta as DriveEtaIcon,\r\n  Business as BusEtaIcon,\r\n  TripOrigin as TripOriginIcon\r\n} from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\r\n  {\r\n    id: 1,\r\n    label: \"Typography\",\r\n    link: \"/app/typography\",\r\n    icon: <TypographyIcon />,\r\n  },\r\n  { id: 2, label: \"Tables\", link: \"/app/tables\", icon: <TableIcon /> },\r\n  {\r\n    id: 3,\r\n    label: \"Notifications\",\r\n    link: \"/app/notifications\",\r\n    icon: <NotificationsIcon />,\r\n  },\r\n  {\r\n    id: 4,\r\n    label: \"UI Elements\",\r\n    link: \"/app/ui\",\r\n    icon: <UIElementsIcon />,\r\n    children: [\r\n      { label: \"Icons\", link: \"/app/ui/icons\" },\r\n      { label: \"Charts\", link: \"/app/ui/charts\" },\r\n      { label: \"Maps\", link: \"/app/ui/maps\" },\r\n    ],\r\n  },\r\n  { id: 5, type: \"divider\" },\r\n  { id: 6, label: \"Drivers\", link: \"/app/drivers\", icon: <BusEtaIcon/> },\r\n  \r\n  { id: 7, label: \"Bus\", link: \"/app/bus\", icon: <DriveEtaIcon/> },\r\n\r\n  { id: 8, label: \"TripBus\", link: \"/app/tripbus\", icon: <TripOriginIcon/> },\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function () {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map(link => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Header\\Header.js",["275","276"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n          SbTickets\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isNotificationsUnread ? notifications.length : null}\r\n            color=\"warning\"\r\n          >\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isMailsUnread ? messages.length : null}\r\n            color=\"secondary\"\r\n          >\r\n            <MailIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map(message => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map(notification => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              Trung Vu\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"https://github.com/AwesomeDracula\"\r\n              target=\"_blank\"\r\n            >\r\n              Github account\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem>\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Wrappers\\Wrappers.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Widget\\Widget.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\dashboard\\mock.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\maps\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\typography\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\icons\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\PageTitle\\PageTitle.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\dashboard\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Sidebar\\components\\Dot.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Sidebar\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\notifications\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",["277"],"import React, { useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Inbox as InboxIcon } from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Dot from \"../Dot\";\r\nimport Bus from \"../../../../pages/Bus\";\r\n\r\nexport default function SidebarLink({\r\n  link,\r\n  icon,\r\n  label,\r\n  children,\r\n  location,\r\n  isSidebarOpened,\r\n  nested,\r\n  type,\r\n}) {\r\n  var classes = useStyles();\r\n\r\n  // local\r\n  var [isOpen, setIsOpen] = useState(false);\r\n  var isLinkActive =\r\n    link &&\r\n    (location.pathname === link || location.pathname.indexOf(link) !== -1);\r\n\r\n  if (type === \"title\")\r\n    return (\r\n      <Typography\r\n        className={classnames(classes.linkText, classes.sectionTitle, {\r\n          [classes.linkTextHidden]: !isSidebarOpened,\r\n        })}\r\n      >\r\n        {label}\r\n      </Typography>\r\n    );\r\n\r\n  if (type === \"divider\") return  <Divider className={classes.divider} />;\r\n  if (link && link.includes('http')) {\r\n    return (\r\n      <ListItem\r\n        button\r\n        className={classes.link}\r\n        classes={{\r\n          root: classnames(classes.linkRoot, {\r\n            [classes.linkActive]: isLinkActive && !nested,\r\n            [classes.linkNested]: nested,\r\n          }),\r\n        }}\r\n        disableRipple\r\n      >\r\n        <a className={classes.externalLink} href={link}>\r\n        <ListItemIcon\r\n          className={classnames(classes.linkIcon, {\r\n            [classes.linkIconActive]: isLinkActive,\r\n          })}\r\n        >\r\n          {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          classes={{\r\n            primary: classnames(classes.linkText, {\r\n              [classes.linkTextActive]: isLinkActive,\r\n              [classes.linkTextHidden]: !isSidebarOpened,\r\n            }),\r\n          }}\r\n          primary={label}\r\n        />\r\n        </a>\r\n      </ListItem>\r\n    )\r\n  }\r\n  if (!children)\r\n    return (\r\n      <ListItem\r\n        button\r\n        component={link && Link}\r\n        to={link}\r\n        className={classes.link}\r\n        classes={{\r\n          root: classnames(classes.linkRoot, {\r\n            [classes.linkActive]: isLinkActive && !nested,\r\n            [classes.linkNested]: nested,\r\n          }),\r\n        }}\r\n        disableRipple\r\n      >\r\n        <ListItemIcon\r\n          className={classnames(classes.linkIcon, {\r\n            [classes.linkIconActive]: isLinkActive,\r\n          })}\r\n        >\r\n          {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          classes={{\r\n            primary: classnames(classes.linkText, {\r\n              [classes.linkTextActive]: isLinkActive,\r\n              [classes.linkTextHidden]: !isSidebarOpened,\r\n            }),\r\n          }}\r\n          primary={label}\r\n        />\r\n      </ListItem>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <ListItem\r\n        button\r\n        component={link && Link}\r\n        onClick={toggleCollapse}\r\n        className={classes.link}\r\n        to={link}\r\n        disableRipple\r\n      >\r\n        <ListItemIcon\r\n          className={classnames(classes.linkIcon, {\r\n            [classes.linkIconActive]: isLinkActive,\r\n          })}\r\n        >\r\n          {icon ? icon : <InboxIcon />}\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          classes={{\r\n            primary: classnames(classes.linkText, {\r\n              [classes.linkTextActive]: isLinkActive,\r\n              [classes.linkTextHidden]: !isSidebarOpened,\r\n            }),\r\n          }}\r\n          primary={label}\r\n        />\r\n      </ListItem>\r\n      {children && (\r\n        <Collapse\r\n          in={isOpen && isSidebarOpened}\r\n          timeout=\"auto\"\r\n          unmountOnExit\r\n          className={classes.nestedList}\r\n        >\r\n          <List component=\"div\" disablePadding>\r\n            {children.map(childrenLink => (\r\n              <SidebarLink\r\n                key={childrenLink && childrenLink.link}\r\n                location={location}\r\n                isSidebarOpened={isSidebarOpened}\r\n                classes={classes}\r\n                nested\r\n                {...childrenLink}\r\n              />\r\n            ))}\r\n          </List>\r\n        </Collapse>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  // ###########################################################\r\n\r\n  function toggleCollapse(e) {\r\n    if (isSidebarOpened) {\r\n      e.preventDefault();\r\n      setIsOpen(!isOpen);\r\n    }\r\n  }\r\n}\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Header\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Notification\\Notification.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\UserAvatar\\UserAvatar.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\charts\\components\\ApexLineChart.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Widget\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\PageTitle\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\Notification\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\components\\UserAvatar\\styles.js",[],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Bus\\BusDetail.js",["278","279","280","281","282","283","284","285","286","287","288"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport instance from '../../services';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    width: '80%',\r\n    fontSize: '14px !important',\r\n    marginBottom: '30px'\r\n  },\r\n}));\r\n\r\nfunction BusDetail() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n  const [formValues, setFormValues] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let url = AppURL.getBus + '/' + id;\r\n    instance.get(url)\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          let data = {\r\n            id: body?.id,\r\n            carNumber: body?.carNumber,\r\n            color: body?.color,\r\n            manufacturer: body?.manufacturer,\r\n            numberSeats: body?.numberSeats,\r\n            lifeCar: body?.lifeCar,\r\n            yearUse: body?.yearUse,\r\n            dateMantain: body?.dateMantain,\r\n          };\r\n          setFormValues(data);\r\n        }\r\n\r\n      })\r\n  }, []);\r\n\r\n  const handleEditButton = () => {\r\n    if (isEditing) {\r\n      let url = AppURL.updateBus + '/' + id;\r\n      instance.put(url, {\r\n        ...formValues,\r\n        dateMantain: '2000-01-01'\r\n      }).then(res => {\r\n        toast.success(res?.msg);\r\n        history.goBack();\r\n      }).catch(error => {\r\n        toast.error(error?.msg);\r\n      })\r\n    }\r\n    setIsEditing(!isEditing);\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormValues({\r\n      ...formValues,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\r\n        formValues ? <>\r\n          <PageTitle\r\n            title=\"Driver Details\"\r\n            buttonBack={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"secondary\"\r\n              onClick={() => history.goBack()}\r\n            >\r\n              Back\r\n            </MUIButton>}\r\n            button={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              onClick={handleEditButton}\r\n            >\r\n              {isEditing ? 'Save' : 'Edit'}\r\n            </MUIButton>} />\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n              <Widget disableWidgetMenu>\r\n                <Grid container item xs={12}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      id=\"id\"\r\n                      name=\"id\"\r\n                      label=\"ID\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.ID}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"carNumber\"\r\n                      name=\"carNumber\"\r\n                      label=\"CarNumber\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.carNumber}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"color\"\r\n                      name=\"color\"\r\n                      label=\"color\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.color}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"manufacturer\"\r\n                      name=\"manufacturer\"\r\n                      label=\"Manufacturer\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues.manufacturer}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      id=\"lifeCar\"\r\n                      name=\"lifeCar\"\r\n                      label=\"LifeCar\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.lifeCar}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"dob\"\r\n                      label=\"DateMantain\"\r\n                      type=\"date\"\r\n                      value={new Date(new Date(formValues?.dob).getTime() - new Date(formValues?.dob).getTimezoneOffset() * 60 * 1000)}\r\n                      sx={{ width: 220 }}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      name=\"dob\"\r\n                      className={classes.input}\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"numberSeats\"\r\n                      name=\"numberSeats\"\r\n                      label=\"NumberSeats\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.numberSeats}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"yearUse\"\r\n                      name=\"yearUse\"\r\n                      label=\"YearUse\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.yearUse}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Widget>\r\n            </Grid>\r\n          </Grid>\r\n        </> : <CircularProgress />\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BusDetail\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Bus\\NewBus.js",["289","290","291","292","293","294","295"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport instance from '../../services';\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    width: '80%',\r\n    fontSize: '14px !important',\r\n    marginBottom: '30px'\r\n  },\r\n}));\r\n\r\nconst data = {\r\n  nationalId: \"\",\r\n  name: \"\",\r\n  codeLicense: \"\",\r\n  typeLicense: \"\",\r\n  address: \"\",\r\n  dob: \"2000-01-01\",\r\n  seniority: 0,\r\n  image: \"body?.image\",\r\n};\r\n\r\nfunction NewBus() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [formValues, setFormValues] = useState(data);\r\n\r\n  const handleSaveButton = () => {\r\n    instance.post(AppURL.createDriver, {\r\n      ...formValues,\r\n      seniority: parseInt(formValues.seniority),\r\n    })\r\n      .then(res => {\r\n        toast.success(res?.msg);\r\n        history.goBack();\r\n      })\r\n      .catch(error => {\r\n        toast.error(error?.msg);\r\n      })\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormValues({\r\n      ...formValues,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\r\n        formValues ? <>\r\n          <PageTitle\r\n            title=\"Bus Details\"\r\n            buttonBack={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"secondary\"\r\n              onClick={() => history.goBack()}\r\n            >\r\n              Back\r\n            </MUIButton>}\r\n            button={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              onClick={handleSaveButton}\r\n            >\r\n              Save\r\n            </MUIButton>} />\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n              <Widget disableWidgetMenu>\r\n                <Grid container item xs={12}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      id=\"nationalId\"\r\n                      name=\"nationalId\"\r\n                      label=\"National ID\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.nationalId}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      label=\"Name\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.name}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"codeLicense\"\r\n                      name=\"codeLicense\"\r\n                      label=\"Code License\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.codeLicense}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"typeLicense\"\r\n                      name=\"typeLicense\"\r\n                      label=\"Type License\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues.typeLicense}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      id=\"address\"\r\n                      name=\"address\"\r\n                      label=\"Address\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.address}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"dob\"\r\n                      label=\"Date of Birth\"\r\n                      type=\"date\"\r\n                      value={new Date(new Date(formValues?.dob).getTime() - new Date(formValues?.dob).getTimezoneOffset() * 60 * 1000)}\r\n                      sx={{ width: 220 }}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      name=\"dob\"\r\n                      className={classes.input}\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"seniority\"\r\n                      name=\"seniority\"\r\n                      label=\"Seniority\"\r\n                      type=\"number\"\r\n                      className={classes.input}\r\n                      value={formValues?.seniority}\r\n                      onChange={handleInputChange}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Widget>\r\n            </Grid>\r\n          </Grid>\r\n        </> : <CircularProgress />\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewBus\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\Bus\\index.js",["296"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport instance from \"../../services\";\r\n\r\nexport default function Bus() {\r\n  let history = useHistory();\r\n  const [datatableData, setData] = useState(null);\r\n  const [rowsSelectedByUser, setRowsSelected] = useState([]);\r\n  useEffect(() => {\r\n    instance.get(AppURL.getAllBus)\r\n      .then(res => {\r\n        console.log(JSON.stringify(res));\r\n        const body = res?.body;\r\n        const data = body.map(bus => {\r\n          let busData = [];\r\n          busData.push(bus?.id, bus?.carNumber, bus?.color, bus?.manufacturer, bus?.lifeCar,  bus?.numberSeats, bus?.yearUse, bus?.dateMantain);\r\n          return busData;\r\n        })\r\n        setData(data);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }, [])\r\n\r\n  const handleRowClick = (rowData, rowMeta) => {\r\n    console.log('hello', rowData, rowMeta);\r\n    history.push(`/app/bus/${rowData[0]}`);\r\n  }\r\n\r\n  const handleRowDelete = () => {\r\n    let rowsToDelete = [];\r\n    datatableData.map((data, idx) => {\r\n      if (rowsSelectedByUser.includes(idx))\r\n        rowsToDelete.push(data[0]);\r\n    })\r\n    instance.post(AppURL.deleteBus, rowsToDelete)\r\n      .then(res => {\r\n        toast.success(res?.msg);\r\n      }).catch(error => {\r\n        toast.error(error?.msg);\r\n        return false;\r\n      });\r\n  }\r\n\r\n  const handleSelectRow = (currentRowsSelected, allRowsSelected, rowsSelected) => {\r\n    setRowsSelected(rowsSelected);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Tables\"\r\n        button={<MUIButton\r\n          variant=\"contained\"\r\n          size=\"medium\"\r\n          color=\"primary\"\r\n          onClick={() => { history.push(`/app/bus/create`) }}\r\n        >\r\n          New\r\n        </MUIButton>} />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          {\r\n            datatableData ? <MUIDataTable\r\n              title=\"Bus List\"\r\n              data={datatableData}\r\n              columns={[\"Id\", \"CarNumber\", \"Color\", \"Manufacturer\", \"LifeCar\",\"NumberSeats\", \"YearUse\", \"DateMantain\"]}\r\n              options={{\r\n                filterType: \"checkbox\",\r\n                draggableColumns: true,\r\n                onRowClick: handleRowClick,\r\n                onRowsDelete: handleRowDelete,\r\n                onRowSelectionChange: handleSelectRow\r\n              }}\r\n            /> : <CircularProgress />\r\n          }\r\n\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\TripBus\\TripBusDetail.js",["297","298","299","300","301","302","303","304","305","306","307","308"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, CircularProgress, Button as MUIButton, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport instance from '../../services';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    width: '80%',\r\n    fontSize: '14px !important',\r\n    marginBottom: '30px'\r\n  },\r\n}));\r\n\r\nfunction TripBusDetail({prop}) {\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n  //console.log(location.state);\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n  const { driverId } = useParams();\r\n  const { assitanceId } = useParams();\r\n  const [formValues, setFormValues] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [listTripBus, setListTripBus] = useState([]);\r\n  const [listLineBus, setListLineBus] = useState([]);\r\n  const [listDriver, setlistDriver] = useState([]);\r\n\r\n  const [selectedDriver, setselectedDriver] = useState(location.state?.driverId);\r\n  const [selectedassitDriver, setselectedassitDriver] = useState(location.state?.assitanceId);\r\n  useEffect(() => {\r\n    let url = AppURL.findTripBus + '/' + id;\r\n    //console.log(url);\r\n    instance.get(url)\r\n      .then(res => {\r\n        //console.log(res);\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          let data = {\r\n            tripBusId: body?.id,\r\n            carNumber: body?.bus.carNumber,\r\n            busId: body?.bus.id,\r\n            lineBusId: body?.lineBus.id,\r\n            numberGuest: body?.numberGuest,\r\n            priceTrip: body?.priceTrip,\r\n            timeTrip: body?.timeTrip,\r\n          };\r\n          //console.log(data);\r\n          setFormValues(data);\r\n        }\r\n      })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let url = AppURL.getAllBus;\r\n    instance.get(url)\r\n      .then(res => {\r\n        //console.log(res);\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          setListTripBus(body);\r\n        }\r\n\r\n      })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let url = AppURL.getAllDrivers;\r\n    instance.get(url)\r\n      .then(res => {\r\n        //console.log(res);\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          setlistDriver(body);\r\n          console.log(\"driver: \" + JSON.stringify(body));\r\n          console.log(selectedDriver);\r\n          console.log(selectedassitDriver);\r\n        }\r\n\r\n      })\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if(listAllDriver.length > 0){\r\n  //     let listDriverNew = listAllDriver.filter(e => {\r\n  //       return e.id != selectedDriver\r\n  //     })\r\n  //     console.log(\"listDriverNew\" + listDriverNew);\r\n  //     setListTripBusAssistant(listDriverNew);\r\n  //   }\r\n  // }, [selectedDriver]);\r\n\r\n  // useEffect(() => {\r\n  //   if(listAllDriver.length > 0){\r\n  //     let listDriverNew = listAllDriver.filter(e => {\r\n  //       return e.id != selectedassitDriver\r\n  //     })\r\n  //     console.log(\"listDriverNewAAÂ\" + listDriverNew);\r\n  //     setlistDriver(listDriverNew);\r\n  //   }\r\n  // }, [selectedassitDriver]);\r\n  \r\n  useEffect(() => {\r\n    let url = AppURL.getAllLineBus;\r\n    instance.get(url)\r\n      .then(res => {\r\n        ////console.log(res);\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          setListLineBus(body);\r\n        }\r\n\r\n      })\r\n  }, []);\r\n\r\n  const handleEditButton = () => {\r\n    if (isEditing) {\r\n      let url = AppURL.editTripBus;\r\n      instance.post(url, {\r\n        ...formValues,\r\n        driverId: selectedDriver,\r\n        assistantBusId: selectedassitDriver,\r\n      }).then(res => {\r\n        toast.success(res?.msg);\r\n        history.goBack();\r\n      }).catch(error => {\r\n        toast.error(error?.msg);\r\n      })\r\n    }\r\n    setIsEditing(!isEditing);\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    //console.log(e.target);\r\n    setFormValues({\r\n      ...formValues,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {\r\n        formValues ? <>\r\n          <PageTitle\r\n            title=\"TripBus Details\"\r\n            buttonBack={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"secondary\"\r\n              onClick={() => history.goBack()}\r\n            >\r\n              Back\r\n            </MUIButton>}\r\n            button={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              onClick={handleEditButton}\r\n            >\r\n              {isEditing ? 'Save' : 'Edit'}\r\n            </MUIButton>} />\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n              <Widget disableWidgetMenu>\r\n                <Grid container item xs={12}>\r\n                  <Grid item xs={6}>\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">List Bus</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={formValues.busId}\r\n                      label=\"Bus\"\r\n                      onChange={handleInputChange}\r\n                      name=\"busId\"\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                      disabled={!isEditing}\r\n                    >\r\n                      {\r\n                          listTripBus.length > 0 && listTripBus.map((e) => (\r\n                            <MenuItem value={e.id}>{e.carNumber} {e.color} {e.manufacturer} </MenuItem>\r\n                          ))\r\n                      }\r\n\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">List LineBus</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      label=\"LineBus\"\r\n                      name=\"lineBusId\"\r\n                      value={formValues.lineBusId}\r\n                      onChange={handleInputChange}\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                      disabled={!isEditing}\r\n                    >\r\n                      {\r\n                          listLineBus.length > 0 && listLineBus.map((e) => (\r\n                            <MenuItem value={e.id}>{e.firstPoint} {e.lastPoint}</MenuItem>\r\n                          ))\r\n                      }\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">List Driver</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      label=\"LineBus\"\r\n                      name=\"driverId\"\r\n                      value={selectedDriver}\r\n                      onChange={(e) => setselectedDriver(e.target.value)}\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                      disabled={!isEditing}\r\n                    >\r\n                      {\r\n                          listDriver.length > 0 && listDriver.map((e) => {\r\n                            if(selectedassitDriver === e.id) return;\r\n                            return <MenuItem value={e.id}>{e.name}</MenuItem>\r\n                          })\r\n                      }\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">List Assistant</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      label=\"LineBus\"\r\n                      name=\"driverId\"\r\n                      value={selectedassitDriver}\r\n                      onChange={(e) => setselectedassitDriver(e.target.value)}\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                      disabled={!isEditing}\r\n                    >\r\n                      {\r\n                          listDriver.length > 0 && listDriver.map((e) => {\r\n                            if(selectedDriver === e.id) return;\r\n                            return <MenuItem value={e.id}>{e.name}</MenuItem>\r\n                          }\r\n                          )\r\n                      }\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                  </FormControl>\r\n                  \r\n                   \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    \r\n                  {/* <TextField\r\n                      id=\"carNumber\"\r\n                      name=\"carNumber\"\r\n                      label=\"CarNumber\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.carNumber}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    /> */}\r\n                    <TextField\r\n                      id=\"numberGuest\"\r\n                      name=\"numberGuest\"\r\n                      label=\"numberGuest\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.numberGuest}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"priceTrip\"\r\n                      name=\"priceTrip\"\r\n                      label=\"priceTrip\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues.priceTrip}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"timeTrip\"\r\n                      name=\"timeTrip\"\r\n                      label=\"timeTrip\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues.timeTrip}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Widget>\r\n            </Grid>\r\n          </Grid>\r\n        </> : <CircularProgress />\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TripBusDetail\r\n","D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\TripBus\\index.js",["309","310","311","312","313"],"D:\\TailieuhoctapPtit\\ChuyenNganh\\WebProgramming\\SbTickets_FE\\src\\pages\\TripBus\\TripBus.js",["314","315","316","317","318","319","320"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, CircularProgress, Button as MUIButton, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport instance from '../../services';\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    width: '80%',\r\n    fontSize: '14px !important',\r\n    marginBottom: '30px'\r\n  },\r\n}));\r\n\r\nconst data = {\r\n  tripBusId: \"\",\r\n  busId: \"\",\r\n  lineBusId: \"\",\r\n  numberGuest: \"\",\r\n  priceTrip:\"\",\r\n  timeTrip: \"\",\r\n};\r\n\r\nfunction TripBusNew() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [formValues, setFormValues] = useState(data);\r\n  const [selectedDriver, setselectedDriver] = useState(\"\");\r\n  const [selectedassitDriver, setselectedassitDriver] = useState(\"\");\r\n  const [listTripBus, setListTripBus] = useState([]);\r\n  const [listLineBus, setListLineBus] = useState([]);\r\n  const [listDriver, setlistDriver] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let url = AppURL.getAllBus;\r\n    instance.get(url)\r\n      .then(res => {\r\n        //console.log(res);\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          setListTripBus(body);\r\n        }\r\n\r\n      })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let url = AppURL.getAllDrivers;\r\n    instance.get(url)\r\n      .then(res => {\r\n        //console.log(res);\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          setlistDriver(body);\r\n          console.log(\"driver: \" + JSON.stringify(body));\r\n          console.log(selectedDriver);\r\n          console.log(selectedassitDriver);\r\n        }\r\n\r\n      })\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if(listAllDriver.length > 0){\r\n  //     let listDriverNew = listAllDriver.filter(e => {\r\n  //       return e.id != selectedDriver\r\n  //     })\r\n  //     console.log(\"listDriverNew\" + listDriverNew);\r\n  //     setListTripBusAssistant(listDriverNew);\r\n  //   }\r\n  // }, [selectedDriver]);\r\n\r\n  // useEffect(() => {\r\n  //   if(listAllDriver.length > 0){\r\n  //     let listDriverNew = listAllDriver.filter(e => {\r\n  //       return e.id != selectedassitDriver\r\n  //     })\r\n  //     console.log(\"listDriverNewAAÂ\" + listDriverNew);\r\n  //     setlistDriver(listDriverNew);\r\n  //   }\r\n  // }, [selectedassitDriver]);\r\n  \r\n  useEffect(() => {\r\n    let url = AppURL.getAllLineBus;\r\n    instance.get(url)\r\n      .then(res => {\r\n        ////console.log(res);\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          setListLineBus(body);\r\n        }\r\n\r\n      })\r\n  }, []);\r\n\r\n  const handleSaveButton = () => {\r\n    instance.post(AppURL.createTripBus, {\r\n      ...formValues,\r\n      driverId: selectedDriver,\r\n      assistantBusId: selectedassitDriver,\r\n    })\r\n      .then(res => {\r\n        toast.success(res?.msg);\r\n        history.goBack();\r\n      })\r\n      .catch(error => {\r\n        toast.error(error?.msg);\r\n      })\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormValues({\r\n      ...formValues,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {\r\n        formValues ? <>\r\n          <PageTitle\r\n            title=\"TripBus\"\r\n            buttonBack={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"secondary\"\r\n              onClick={() => history.goBack()}\r\n            >\r\n              Back\r\n            </MUIButton>}\r\n            button={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              onClick={handleSaveButton}\r\n            >\r\n              Save\r\n            </MUIButton>} />\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n              <Widget disableWidgetMenu>\r\n                <Grid container item xs={12}>\r\n                <Grid item xs={6}>\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">List Bus</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={formValues.busId}\r\n                      label=\"Bus\"\r\n                      onChange={handleInputChange}\r\n                      name=\"busId\"\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                      //disabled={!isEditing}\r\n                    >\r\n                      {\r\n                          listTripBus.length > 0 && listTripBus.map((e) => (\r\n                            <MenuItem value={e.id}>{e.carNumber} {e.color} {e.manufacturer} </MenuItem>\r\n                          ))\r\n                      }\r\n\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">List LineBus</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      label=\"LineBus\"\r\n                      name=\"lineBusId\"\r\n                      value={formValues.lineBusId}\r\n                      onChange={handleInputChange}\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                      //disabled={!isEditing}\r\n                    >\r\n                      {\r\n                          listLineBus.length > 0 && listLineBus.map((e) => (\r\n                            <MenuItem value={e.id}>{e.firstPoint} {e.lastPoint}</MenuItem>\r\n                          ))\r\n                      }\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">List Driver</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      label=\"LineBus\"\r\n                      name=\"driverId\"\r\n                      value={selectedDriver}\r\n                      onChange={(e) => setselectedDriver(e.target.value)}\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                      //disabled={!isEditing}\r\n                    >\r\n                      {\r\n                          listDriver.length > 0 && listDriver.map((e) => {\r\n                            if(selectedassitDriver === e.id) return;\r\n                            return <MenuItem value={e.id}>{e.name}</MenuItem>\r\n                          })\r\n                      }\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">List Assistant</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      label=\"LineBus\"\r\n                      name=\"driverId\"\r\n                      value={selectedassitDriver}\r\n                      onChange={(e) => setselectedassitDriver(e.target.value)}\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                      //disabled={!isEditing}\r\n                    >\r\n                      {\r\n                          listDriver.length > 0 && listDriver.map((e) => {\r\n                            if(selectedDriver === e.id) return;\r\n                            return <MenuItem value={e.id}>{e.name}</MenuItem>\r\n                          }\r\n                          )\r\n                      }\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                  </FormControl>\r\n                  \r\n                   \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    \r\n                    <TextField\r\n                      id=\"numberGuest\"\r\n                      name=\"numberGuest\"\r\n                      label=\"numberGuest\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.numberGuest}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      //disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"priceTrip\"\r\n                      name=\"priceTrip\"\r\n                      label=\"priceTrip\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues.priceTrip}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      //disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"timeTrip\"\r\n                      name=\"timeTrip\"\r\n                      label=\"timeTrip\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues.timeTrip}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      //disabled={!isEditing}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Widget>\r\n            </Grid>\r\n          </Grid>\r\n        </> : <CircularProgress />\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TripBusNew\r\n",{"ruleId":"321","replacedBy":"322"},{"ruleId":"323","replacedBy":"324"},{"ruleId":"325","severity":1,"message":"326","line":16,"column":17,"nodeType":"327","messageId":"328","endLine":16,"endColumn":28},{"ruleId":"329","severity":1,"message":"330","line":62,"column":6,"nodeType":"331","endLine":62,"endColumn":36,"suggestions":"332"},{"ruleId":"329","severity":1,"message":"330","line":68,"column":6,"nodeType":"331","endLine":68,"endColumn":33,"suggestions":"333"},{"ruleId":"325","severity":1,"message":"334","line":1,"column":27,"nodeType":"327","messageId":"328","endLine":1,"endColumn":36},{"ruleId":"325","severity":1,"message":"335","line":5,"column":22,"nodeType":"327","messageId":"328","endLine":5,"endColumn":32},{"ruleId":"336","severity":1,"message":"337","line":92,"column":23,"nodeType":"338","messageId":"339","endLine":92,"endColumn":37},{"ruleId":"336","severity":1,"message":"337","line":103,"column":23,"nodeType":"338","messageId":"339","endLine":103,"endColumn":37},{"ruleId":"336","severity":1,"message":"337","line":114,"column":23,"nodeType":"338","messageId":"339","endLine":114,"endColumn":37},{"ruleId":"336","severity":1,"message":"337","line":125,"column":23,"nodeType":"338","messageId":"339","endLine":125,"endColumn":37},{"ruleId":"336","severity":1,"message":"337","line":138,"column":23,"nodeType":"338","messageId":"339","endLine":138,"endColumn":37},{"ruleId":"325","severity":1,"message":"340","line":5,"column":10,"nodeType":"327","messageId":"328","endLine":5,"endColumn":20},{"ruleId":"325","severity":1,"message":"341","line":5,"column":22,"nodeType":"327","messageId":"328","endLine":5,"endColumn":28},{"ruleId":"325","severity":1,"message":"335","line":6,"column":22,"nodeType":"327","messageId":"328","endLine":6,"endColumn":32},{"ruleId":"329","severity":1,"message":"342","line":49,"column":6,"nodeType":"331","endLine":49,"endColumn":8,"suggestions":"343"},{"ruleId":"344","severity":1,"message":"345","line":112,"column":25,"nodeType":"346","endLine":115,"endColumn":56},{"ruleId":"336","severity":1,"message":"337","line":126,"column":23,"nodeType":"338","messageId":"339","endLine":126,"endColumn":37},{"ruleId":"336","severity":1,"message":"337","line":138,"column":23,"nodeType":"338","messageId":"339","endLine":138,"endColumn":37},{"ruleId":"336","severity":1,"message":"337","line":150,"column":23,"nodeType":"338","messageId":"339","endLine":150,"endColumn":37},{"ruleId":"336","severity":1,"message":"337","line":177,"column":23,"nodeType":"338","messageId":"339","endLine":177,"endColumn":37},{"ruleId":"336","severity":1,"message":"337","line":189,"column":23,"nodeType":"338","messageId":"339","endLine":189,"endColumn":37},{"ruleId":"336","severity":1,"message":"337","line":215,"column":23,"nodeType":"338","messageId":"339","endLine":215,"endColumn":37},{"ruleId":"347","severity":1,"message":"348","line":39,"column":35,"nodeType":"349","messageId":"350","endLine":39,"endColumn":37},{"ruleId":"325","severity":1,"message":"351","line":9,"column":21,"nodeType":"327","messageId":"328","endLine":9,"endColumn":32},{"ruleId":"325","severity":1,"message":"352","line":10,"column":19,"nodeType":"327","messageId":"328","endLine":10,"endColumn":30},{"ruleId":"325","severity":1,"message":"353","line":11,"column":18,"nodeType":"327","messageId":"328","endLine":11,"endColumn":25},{"ruleId":"325","severity":1,"message":"354","line":26,"column":8,"nodeType":"327","messageId":"328","endLine":26,"endColumn":11},{"ruleId":"325","severity":1,"message":"355","line":10,"column":3,"nodeType":"327","messageId":"328","endLine":10,"endColumn":7},{"ruleId":"325","severity":1,"message":"341","line":27,"column":29,"nodeType":"327","messageId":"328","endLine":27,"endColumn":35},{"ruleId":"325","severity":1,"message":"356","line":20,"column":8,"nodeType":"327","messageId":"328","endLine":20,"endColumn":11},{"ruleId":"325","severity":1,"message":"340","line":5,"column":10,"nodeType":"327","messageId":"328","endLine":5,"endColumn":20},{"ruleId":"325","severity":1,"message":"341","line":5,"column":22,"nodeType":"327","messageId":"328","endLine":5,"endColumn":28},{"ruleId":"325","severity":1,"message":"335","line":6,"column":22,"nodeType":"327","messageId":"328","endLine":6,"endColumn":32},{"ruleId":"329","severity":1,"message":"342","line":49,"column":6,"nodeType":"331","endLine":49,"endColumn":8,"suggestions":"357"},{"ruleId":"336","severity":1,"message":"337","line":110,"column":23,"nodeType":"338","messageId":"339","endLine":110,"endColumn":37},{"ruleId":"336","severity":1,"message":"337","line":122,"column":23,"nodeType":"338","messageId":"339","endLine":122,"endColumn":37},{"ruleId":"336","severity":1,"message":"337","line":134,"column":23,"nodeType":"338","messageId":"339","endLine":134,"endColumn":37},{"ruleId":"336","severity":1,"message":"337","line":146,"column":23,"nodeType":"338","messageId":"339","endLine":146,"endColumn":37},{"ruleId":"336","severity":1,"message":"337","line":160,"column":23,"nodeType":"338","messageId":"339","endLine":160,"endColumn":37},{"ruleId":"336","severity":1,"message":"337","line":186,"column":23,"nodeType":"338","messageId":"339","endLine":186,"endColumn":37},{"ruleId":"336","severity":1,"message":"337","line":198,"column":23,"nodeType":"338","messageId":"339","endLine":198,"endColumn":37},{"ruleId":"325","severity":1,"message":"334","line":1,"column":27,"nodeType":"327","messageId":"328","endLine":1,"endColumn":36},{"ruleId":"325","severity":1,"message":"335","line":5,"column":22,"nodeType":"327","messageId":"328","endLine":5,"endColumn":32},{"ruleId":"336","severity":1,"message":"337","line":92,"column":23,"nodeType":"338","messageId":"339","endLine":92,"endColumn":37},{"ruleId":"336","severity":1,"message":"337","line":103,"column":23,"nodeType":"338","messageId":"339","endLine":103,"endColumn":37},{"ruleId":"336","severity":1,"message":"337","line":114,"column":23,"nodeType":"338","messageId":"339","endLine":114,"endColumn":37},{"ruleId":"336","severity":1,"message":"337","line":125,"column":23,"nodeType":"338","messageId":"339","endLine":125,"endColumn":37},{"ruleId":"336","severity":1,"message":"337","line":138,"column":23,"nodeType":"338","messageId":"339","endLine":138,"endColumn":37},{"ruleId":"347","severity":1,"message":"348","line":39,"column":35,"nodeType":"349","messageId":"350","endLine":39,"endColumn":37},{"ruleId":"325","severity":1,"message":"340","line":5,"column":10,"nodeType":"327","messageId":"328","endLine":5,"endColumn":20},{"ruleId":"325","severity":1,"message":"341","line":5,"column":22,"nodeType":"327","messageId":"328","endLine":5,"endColumn":28},{"ruleId":"325","severity":1,"message":"335","line":6,"column":22,"nodeType":"327","messageId":"328","endLine":6,"endColumn":32},{"ruleId":"325","severity":1,"message":"358","line":27,"column":11,"nodeType":"327","messageId":"328","endLine":27,"endColumn":19},{"ruleId":"325","severity":1,"message":"359","line":28,"column":11,"nodeType":"327","messageId":"328","endLine":28,"endColumn":22},{"ruleId":"329","severity":1,"message":"342","line":58,"column":6,"nodeType":"331","endLine":58,"endColumn":8,"suggestions":"360"},{"ruleId":"329","severity":1,"message":"361","line":87,"column":6,"nodeType":"331","endLine":87,"endColumn":8,"suggestions":"362"},{"ruleId":"347","severity":1,"message":"348","line":271,"column":62,"nodeType":"363","messageId":"364","endLine":271,"endColumn":69},{"ruleId":"347","severity":1,"message":"348","line":306,"column":57,"nodeType":"363","messageId":"364","endLine":306,"endColumn":64},{"ruleId":"336","severity":1,"message":"337","line":341,"column":23,"nodeType":"338","messageId":"339","endLine":341,"endColumn":37},{"ruleId":"336","severity":1,"message":"337","line":353,"column":23,"nodeType":"338","messageId":"339","endLine":353,"endColumn":37},{"ruleId":"336","severity":1,"message":"337","line":365,"column":23,"nodeType":"338","messageId":"339","endLine":365,"endColumn":37},{"ruleId":"365","severity":1,"message":"366","line":22,"column":72,"nodeType":"367","messageId":"368","endLine":22,"endColumn":74},{"ruleId":"365","severity":1,"message":"366","line":22,"column":103,"nodeType":"367","messageId":"368","endLine":22,"endColumn":105},{"ruleId":"365","severity":1,"message":"366","line":23,"column":77,"nodeType":"367","messageId":"368","endLine":23,"endColumn":79},{"ruleId":"365","severity":1,"message":"366","line":23,"column":108,"nodeType":"367","messageId":"368","endLine":23,"endColumn":110},{"ruleId":"347","severity":1,"message":"348","line":52,"column":35,"nodeType":"349","messageId":"350","endLine":52,"endColumn":37},{"ruleId":"325","severity":1,"message":"335","line":5,"column":22,"nodeType":"327","messageId":"328","endLine":5,"endColumn":32},{"ruleId":"329","severity":1,"message":"361","line":65,"column":6,"nodeType":"331","endLine":65,"endColumn":8,"suggestions":"369"},{"ruleId":"347","severity":1,"message":"348","line":246,"column":62,"nodeType":"363","messageId":"364","endLine":246,"endColumn":69},{"ruleId":"347","severity":1,"message":"348","line":281,"column":57,"nodeType":"363","messageId":"364","endLine":281,"endColumn":64},{"ruleId":"336","severity":1,"message":"337","line":304,"column":23,"nodeType":"338","messageId":"339","endLine":304,"endColumn":37},{"ruleId":"336","severity":1,"message":"337","line":316,"column":23,"nodeType":"338","messageId":"339","endLine":316,"endColumn":37},{"ruleId":"336","severity":1,"message":"337","line":328,"column":23,"nodeType":"338","messageId":"339","endLine":328,"endColumn":37},"no-native-reassign",["370"],"no-negated-in-lhs",["371"],"no-unused-vars","'TwitterIcon' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'layoutState.message'. Either include it or remove the dependency array.","ArrayExpression",["372"],["373"],"'useEffect' is defined but never used.","'withStyles' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Typography' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["374"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'Dot' is defined but never used.","'Link' is defined but never used.","'Bus' is defined but never used.",["375"],"'driverId' is assigned a value but never used.","'assitanceId' is assigned a value but never used.",["376"],"React Hook useEffect has missing dependencies: 'selectedDriver' and 'selectedassitDriver'. Either include them or remove the dependency array.",["377"],"ReturnStatement","expectedReturnValue","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["378"],"no-global-assign","no-unsafe-negation",{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"383","fix":"385"},{"desc":"383","fix":"386"},{"desc":"387","fix":"388"},{"desc":"387","fix":"389"},"Update the dependencies array to be: [layoutState.message, layoutState.showToastSuccess]",{"range":"390","text":"391"},"Update the dependencies array to be: [layoutState.message, layoutState.showToastFail]",{"range":"392","text":"393"},"Update the dependencies array to be: [id]",{"range":"394","text":"395"},{"range":"396","text":"395"},{"range":"397","text":"395"},"Update the dependencies array to be: [selectedDriver, selectedassitDriver]",{"range":"398","text":"399"},{"range":"400","text":"399"},[1798,1828],"[layoutState.message, layoutState.showToastSuccess]",[1946,1973],"[layoutState.message, layoutState.showToastFail]",[1636,1638],"[id]",[1626,1628],[2208,2210],[2891,2893],"[selectedDriver, selectedassitDriver]",[1945,1947]]
=======
[{"G:\\Learning\\ltm\\SbTickets_FE\\src\\index.js":"1","G:\\Learning\\ltm\\SbTickets_FE\\src\\serviceWorker.js":"2","G:\\Learning\\ltm\\SbTickets_FE\\src\\context\\LayoutContext.js":"3","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\App.js":"4","G:\\Learning\\ltm\\SbTickets_FE\\src\\context\\UserContext.js":"5","G:\\Learning\\ltm\\SbTickets_FE\\src\\themes\\index.js":"6","G:\\Learning\\ltm\\SbTickets_FE\\src\\services\\urlAPI.js":"7","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Layout\\Layout.js":"8","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\error\\Error.js":"9","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\login\\Login.js":"10","G:\\Learning\\ltm\\SbTickets_FE\\src\\services\\index.js":"11","G:\\Learning\\ltm\\SbTickets_FE\\src\\themes\\default.js":"12","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\login\\styles.js":"13","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\error\\styles.js":"14","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Layout\\styles.js":"15","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Drivers\\DriverDetail.js":"16","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Drivers\\NewDriver.js":"17","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\charts\\Charts.js":"18","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\tables\\Tables.js":"19","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\icons\\Icons.js":"20","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Header\\Header.js":"21","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\typography\\Typography.js":"22","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\maps\\Maps.js":"23","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\notifications\\Notifications.js":"24","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Sidebar\\Sidebar.js":"25","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\dashboard\\Dashboard.js":"26","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Drivers\\index.js":"27","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\PageTitle\\PageTitle.js":"28","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Widget\\Widget.js":"29","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Wrappers\\Wrappers.js":"30","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\dashboard\\styles.js":"31","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\dashboard\\mock.js":"32","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Sidebar\\styles.js":"33","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\notifications\\styles.js":"34","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\charts\\components\\ApexHeatmap.js":"35","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\charts\\components\\ApexLineChart.js":"36","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Sidebar\\components\\Dot.js":"37","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\maps\\styles.js":"38","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"39","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\dashboard\\components\\Table\\Table.js":"40","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"41","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\typography\\styles.js":"42","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Header\\styles.js":"43","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Notification\\Notification.js":"44","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\UserAvatar\\UserAvatar.js":"45","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\icons\\styles.js":"46","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\PageTitle\\styles.js":"47","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Widget\\styles.js":"48","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"49","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"50","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Notification\\styles.js":"51","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\UserAvatar\\styles.js":"52","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Bus\\BusDetail.js":"53","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Bus\\NewBus.js":"54","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Bus\\index.js":"55"},{"size":896,"mtime":1637639175780,"results":"56","hashOfConfig":"57"},{"size":5083,"mtime":1637639175795,"results":"58","hashOfConfig":"57"},{"size":1984,"mtime":1637639175780,"results":"59","hashOfConfig":"57"},{"size":1787,"mtime":1637639175780,"results":"60","hashOfConfig":"57"},{"size":2901,"mtime":1637639175780,"results":"61","hashOfConfig":"57"},{"size":534,"mtime":1637639175795,"results":"62","hashOfConfig":"57"},{"size":612,"mtime":1637935564149,"results":"63","hashOfConfig":"57"},{"size":5073,"mtime":1637656223727,"results":"64","hashOfConfig":"57"},{"size":1626,"mtime":1637639175780,"results":"65","hashOfConfig":"57"},{"size":4935,"mtime":1637639175795,"results":"66","hashOfConfig":"57"},{"size":792,"mtime":1637639175795,"results":"67","hashOfConfig":"57"},{"size":3127,"mtime":1637639175795,"results":"68","hashOfConfig":"57"},{"size":3556,"mtime":1637639175795,"results":"69","hashOfConfig":"57"},{"size":1395,"mtime":1637639175780,"results":"70","hashOfConfig":"57"},{"size":710,"mtime":1637639175780,"results":"71","hashOfConfig":"57"},{"size":6868,"mtime":1637639175780,"results":"72","hashOfConfig":"57"},{"size":5749,"mtime":1637639175780,"results":"73","hashOfConfig":"57"},{"size":5790,"mtime":1637639175780,"results":"74","hashOfConfig":"57"},{"size":2146,"mtime":1637639175795,"results":"75","hashOfConfig":"57"},{"size":391433,"mtime":1637639175780,"results":"76","hashOfConfig":"57"},{"size":10270,"mtime":1637639175780,"results":"77","hashOfConfig":"57"},{"size":4632,"mtime":1637639175795,"results":"78","hashOfConfig":"57"},{"size":1010,"mtime":1637639175795,"results":"79","hashOfConfig":"57"},{"size":14494,"mtime":1637639175795,"results":"80","hashOfConfig":"57"},{"size":3841,"mtime":1637656229561,"results":"81","hashOfConfig":"57"},{"size":16126,"mtime":1637639175780,"results":"82","hashOfConfig":"57"},{"size":2684,"mtime":1637639175780,"results":"83","hashOfConfig":"57"},{"size":590,"mtime":1637639175780,"results":"84","hashOfConfig":"57"},{"size":2581,"mtime":1637639175780,"results":"85","hashOfConfig":"57"},{"size":3971,"mtime":1637639175780,"results":"86","hashOfConfig":"57"},{"size":3000,"mtime":1637639175780,"results":"87","hashOfConfig":"57"},{"size":4288,"mtime":1637639175780,"results":"88","hashOfConfig":"57"},{"size":1363,"mtime":1637639175780,"results":"89","hashOfConfig":"57"},{"size":1943,"mtime":1637639175795,"results":"90","hashOfConfig":"57"},{"size":1909,"mtime":1637639175780,"results":"91","hashOfConfig":"57"},{"size":1396,"mtime":1637639175780,"results":"92","hashOfConfig":"57"},{"size":902,"mtime":1637639175780,"results":"93","hashOfConfig":"57"},{"size":178,"mtime":1637639175795,"results":"94","hashOfConfig":"57"},{"size":4589,"mtime":1637639175780,"results":"95","hashOfConfig":"57"},{"size":1323,"mtime":1637639175780,"results":"96","hashOfConfig":"57"},{"size":4160,"mtime":1637639175780,"results":"97","hashOfConfig":"57"},{"size":389,"mtime":1637639175795,"results":"98","hashOfConfig":"57"},{"size":4043,"mtime":1637639175780,"results":"99","hashOfConfig":"57"},{"size":3413,"mtime":1637639175780,"results":"100","hashOfConfig":"57"},{"size":620,"mtime":1637639175780,"results":"101","hashOfConfig":"57"},{"size":812,"mtime":1637639175795,"results":"102","hashOfConfig":"57"},{"size":529,"mtime":1637639175780,"results":"103","hashOfConfig":"57"},{"size":1015,"mtime":1637639175780,"results":"104","hashOfConfig":"57"},{"size":1474,"mtime":1637639175780,"results":"105","hashOfConfig":"57"},{"size":1075,"mtime":1637639175780,"results":"106","hashOfConfig":"57"},{"size":1040,"mtime":1637639175780,"results":"107","hashOfConfig":"57"},{"size":291,"mtime":1637639175780,"results":"108","hashOfConfig":"57"},{"size":9598,"mtime":1637655181995,"results":"109","hashOfConfig":"57"},{"size":8242,"mtime":1637656674670,"results":"110","hashOfConfig":"57"},{"size":2699,"mtime":1637656220444,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"6jkqrq",{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"114"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"114"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"114"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"114"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"114"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"114"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"114"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"114"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"114"},"G:\\Learning\\ltm\\SbTickets_FE\\src\\index.js",[],["232","233"],"G:\\Learning\\ltm\\SbTickets_FE\\src\\serviceWorker.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\context\\LayoutContext.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\App.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\context\\UserContext.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\themes\\index.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\services\\urlAPI.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Layout\\Layout.js",["234","235","236"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { Box, IconButton, Link } from '@material-ui/core';\r\nimport Icon from '@mdi/react';\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\n//icons\r\nimport {\r\n  mdiFacebook as FacebookIcon,\r\n  mdiTwitter as TwitterIcon,\r\n  mdiGithub as GithubIcon,\r\n} from '@mdi/js'\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Dashboard from \"../../pages/dashboard\";\r\nimport Typography from \"../../pages/typography\";\r\nimport Notifications from \"../../pages/notifications\";\r\nimport Maps from \"../../pages/maps\";\r\nimport Tables from \"../../pages/tables\";\r\nimport Icons from \"../../pages/icons\";\r\nimport Charts from \"../../pages/charts\";\r\nimport Drivers from \"../../pages/Drivers\";\r\nimport Bus from \"../../pages/Bus\";\r\n\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\nimport DriverDetail from \"../../pages/Drivers/DriverDetail\";\r\nimport NewDriver from \"../../pages/Drivers/NewDriver\";\r\nimport BusDetail from \"../../pages/Bus/BusDetail\";\r\nimport NewBus from \"../../pages/Bus/NewBus\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  const notifyError = (message) => toast.error(message);\r\n\r\n  const notifySuccess = (message) => toast.success(message);\r\n\r\n  useEffect(() => {\r\n    if (layoutState.showToastSuccess) {\r\n      notifySuccess(layoutState.message);\r\n    }\r\n  }, [layoutState.showToastSuccess]);\r\n\r\n  useEffect(() => {\r\n    if (layoutState.showToastFail) {\r\n      notifyError(layoutState.message);\r\n    }\r\n  }, [layoutState.showToastFail]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <>\r\n        <ToastContainer />\r\n        <Header history={props.history} />\r\n        <Sidebar />\r\n        <div\r\n          className={classnames(classes.content, {\r\n            [classes.contentShift]: layoutState.isSidebarOpened,\r\n          })}\r\n        >\r\n          <div className={classes.fakeToolbar} />\r\n          <Switch>\r\n            <Route path=\"/app/dashboard\" component={Dashboard} />\r\n            <Route path=\"/app/typography\" component={Typography} />\r\n            <Route path=\"/app/tables\" component={Tables} />\r\n            <Route path=\"/app/notifications\" component={Notifications} />\r\n            <Route\r\n              exact\r\n              path=\"/app/ui\"\r\n              render={() => <Redirect to=\"/app/ui/icons\" />}\r\n            />\r\n            <Route exact path=\"/app/drivers\" component={Drivers} />\r\n            <Route exact path=\"/app/drivers/create\" component={NewDriver} />\r\n            <Route exact path=\"/app/drivers/:id\" component={DriverDetail} />\r\n            <Route exact path=\"/app/buses\" component={Bus} />\r\n            <Route exact path=\"/app/buses/create\" component={NewBus} />\r\n            <Route exact path=\"/app/buses/:id\" component={BusDetail} />\r\n            <Route path=\"/app/ui/maps\" component={Maps} />\r\n            <Route path=\"/app/ui/icons\" component={Icons} />\r\n            <Route path=\"/app/ui/charts\" component={Charts} />\r\n          </Switch>\r\n          <Box\r\n            mt={5}\r\n            width={\"100%\"}\r\n            display={\"flex\"}\r\n            alignItems={\"center\"}\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <div>\r\n              <Link\r\n                color={'primary'}\r\n                href={'https://github.com/AwesomeDracula/SbTickets_BE'}\r\n                target={'_blank'}\r\n                className={classes.link}\r\n              >\r\n                Project Backend\r\n              </Link>\r\n              <Link\r\n                color={'primary'}\r\n                href={'https://github.com/AwesomeDracula/SbTickets_FE'}\r\n                target={'_blank'}\r\n                className={classes.link}\r\n              >\r\n                Project Frontend\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              <Link\r\n                href={'https://www.facebook.com/groups/371157724565461'}\r\n                target={'_blank'}\r\n              >\r\n                <IconButton aria-label=\"facebook\">\r\n                  <Icon\r\n                    path={FacebookIcon}\r\n                    size={1}\r\n                    color=\"#6E6E6E99\"\r\n                  />\r\n                </IconButton>\r\n              </Link>\r\n              <Link\r\n                href={'https://github.com/AwesomeDracula/'}\r\n                target={'_blank'}\r\n              >\r\n                <IconButton\r\n                  aria-label=\"github\"\r\n                  style={{ marginRight: -12 }}\r\n                >\r\n                  <Icon\r\n                    path={GithubIcon}\r\n                    size={1}\r\n                    color=\"#6E6E6E99\"\r\n                  />\r\n                </IconButton>\r\n              </Link>\r\n            </div>\r\n          </Box>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\error\\Error.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\login\\Login.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\services\\index.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\themes\\default.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\login\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\error\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Layout\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Drivers\\DriverDetail.js",["237","238","239","240","241","242","243","244","245","246"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport instance from '../../services';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    width: '80%',\r\n    fontSize: '14px !important',\r\n    marginBottom: '30px'\r\n  },\r\n}));\r\n\r\nfunction DriverDetail() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n  const [formValues, setFormValues] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let url = AppURL.getDriver + '/' + id;\r\n    instance.get(url)\r\n      .then(res => {\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          let data = {\r\n            nationalId: body?.nationalId,\r\n            name: body?.name,\r\n            codeLicense: body?.codeLicense,\r\n            typeLicense: body?.typeLicense,\r\n            address: body?.address,\r\n            dob: body?.dob,\r\n            seniority: body?.seniority,\r\n            image: body?.image,\r\n          };\r\n          setFormValues(data);\r\n        }\r\n\r\n      })\r\n  }, []);\r\n\r\n  const handleEditButton = () => {\r\n    if (isEditing) {\r\n      let url = AppURL.updateDriver + '/' + id;\r\n      instance.put(url, {\r\n        ...formValues,\r\n        seniority: parseInt(formValues.seniority),\r\n        salaryId: 1,\r\n        dob: '2000-01-01'\r\n      }).then(res => {\r\n        toast.success(res?.msg);\r\n        history.goBack();\r\n      }).catch(error => {\r\n        toast.error(error?.msg);\r\n      })\r\n    }\r\n    setIsEditing(!isEditing);\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormValues({\r\n      ...formValues,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\r\n        formValues ? <>\r\n          <PageTitle\r\n            title=\"Driver Details\"\r\n            buttonBack={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"secondary\"\r\n              onClick={() => history.goBack()}\r\n            >\r\n              Back\r\n            </MUIButton>}\r\n            button={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              onClick={handleEditButton}\r\n            >\r\n              {isEditing ? 'Save' : 'Edit'}\r\n            </MUIButton>} />\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n              <Widget disableWidgetMenu>\r\n                <Grid container item xs={12}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      id=\"nationalId\"\r\n                      name=\"nationalId\"\r\n                      label=\"National ID\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.nationalId}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      label=\"Name\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.name}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"codeLicense\"\r\n                      name=\"codeLicense\"\r\n                      label=\"Code License\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.codeLicense}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"typeLicense\"\r\n                      name=\"typeLicense\"\r\n                      label=\"Type License\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues.typeLicense}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      id=\"address\"\r\n                      name=\"address\"\r\n                      label=\"Address\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.address}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"dob\"\r\n                      label=\"Date of Birth\"\r\n                      type=\"date\"\r\n                      value={new Date(new Date(formValues?.dob).getTime() - new Date(formValues?.dob).getTimezoneOffset() * 60 * 1000)}\r\n                      sx={{ width: 220 }}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      name=\"dob\"\r\n                      className={classes.input}\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"seniority\"\r\n                      name=\"seniority\"\r\n                      label=\"Seniority\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.seniority}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Widget>\r\n            </Grid>\r\n          </Grid>\r\n        </> : <CircularProgress />\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DriverDetail\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Drivers\\NewDriver.js",["247","248","249","250","251","252","253"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport instance from '../../services';\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    width: '80%',\r\n    fontSize: '14px !important',\r\n    marginBottom: '30px'\r\n  },\r\n}));\r\n\r\nconst data = {\r\n  nationalId: \"\",\r\n  name: \"\",\r\n  codeLicense: \"\",\r\n  typeLicense: \"\",\r\n  address: \"\",\r\n  dob: \"2000-01-01\",\r\n  seniority: 0,\r\n  image: \"body?.image\",\r\n};\r\n\r\nfunction NewDriver() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [formValues, setFormValues] = useState(data);\r\n\r\n  const handleSaveButton = () => {\r\n    instance.post(AppURL.createDriver, {\r\n      ...formValues,\r\n      seniority: parseInt(formValues.seniority),\r\n      salaryId: 1\r\n    })\r\n      .then(res => {\r\n        toast.success(res?.msg);\r\n        history.goBack();\r\n      })\r\n      .catch(error => {\r\n        toast.error(error?.msg);\r\n      })\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormValues({\r\n      ...formValues,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\r\n        formValues ? <>\r\n          <PageTitle\r\n            title=\"Driver Details\"\r\n            buttonBack={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"secondary\"\r\n              onClick={() => history.goBack()}\r\n            >\r\n              Back\r\n            </MUIButton>}\r\n            button={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              onClick={handleSaveButton}\r\n            >\r\n              Save\r\n            </MUIButton>} />\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n              <Widget disableWidgetMenu>\r\n                <Grid container item xs={12}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      id=\"nationalId\"\r\n                      name=\"nationalId\"\r\n                      label=\"National ID\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.nationalId}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      label=\"Name\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.name}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"codeLicense\"\r\n                      name=\"codeLicense\"\r\n                      label=\"Code License\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.codeLicense}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"typeLicense\"\r\n                      name=\"typeLicense\"\r\n                      label=\"Type License\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues.typeLicense}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      id=\"address\"\r\n                      name=\"address\"\r\n                      label=\"Address\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.address}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"dob\"\r\n                      label=\"Date of Birth\"\r\n                      type=\"date\"\r\n                      value={new Date(new Date(formValues?.dob).getTime() - new Date(formValues?.dob).getTimezoneOffset() * 60 * 1000)}\r\n                      sx={{ width: 220 }}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      name=\"dob\"\r\n                      className={classes.input}\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"seniority\"\r\n                      name=\"seniority\"\r\n                      label=\"Seniority\"\r\n                      type=\"number\"\r\n                      className={classes.input}\r\n                      value={formValues?.seniority}\r\n                      onChange={handleInputChange}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Widget>\r\n            </Grid>\r\n          </Grid>\r\n        </> : <CircularProgress />\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewDriver\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\charts\\Charts.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\tables\\Tables.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\icons\\Icons.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Header\\Header.js",["254","255"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n          SbTickets\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isNotificationsUnread ? notifications.length : null}\r\n            color=\"warning\"\r\n          >\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isMailsUnread ? messages.length : null}\r\n            color=\"secondary\"\r\n          >\r\n            <MailIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map(message => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map(notification => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              Trung Vu\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"https://github.com/AwesomeDracula\"\r\n              target=\"_blank\"\r\n            >\r\n              Github account\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem>\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\typography\\Typography.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\maps\\Maps.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\notifications\\Notifications.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Sidebar\\Sidebar.js",["256","257","258","259"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  DriveEta as DriveEtaIcon\r\n} from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\r\n  {\r\n    id: 1,\r\n    label: \"Typography\",\r\n    link: \"/app/typography\",\r\n    icon: <TypographyIcon />,\r\n  },\r\n  { id: 2, label: \"Tables\", link: \"/app/tables\", icon: <TableIcon /> },\r\n  {\r\n    id: 3,\r\n    label: \"Notifications\",\r\n    link: \"/app/notifications\",\r\n    icon: <NotificationsIcon />,\r\n  },\r\n  {\r\n    id: 4,\r\n    label: \"UI Elements\",\r\n    link: \"/app/ui\",\r\n    icon: <UIElementsIcon />,\r\n    children: [\r\n      { label: \"Icons\", link: \"/app/ui/icons\" },\r\n      { label: \"Charts\", link: \"/app/ui/charts\" },\r\n      { label: \"Maps\", link: \"/app/ui/maps\" },\r\n    ],\r\n  },\r\n  { id: 5, type: \"divider\" },\r\n  { id: 6, label: \"Drivers\", link: \"/app/drivers\", icon: <DriveEtaIcon /> },\r\n  { id: 7, label: \"Bus\", link: \"/app/buses\", icon: <DriveEtaIcon /> }\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function () {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map(link => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\dashboard\\Dashboard.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Drivers\\index.js",["260"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport instance from \"../../services\";\r\n\r\nexport default function Tables() {\r\n  let history = useHistory();\r\n  const [datatableData, setData] = useState(null);\r\n  const [rowsSelectedByUser, setRowsSelected] = useState([]);\r\n  useEffect(() => {\r\n    instance.get(AppURL.getAllDrivers)\r\n      .then(res => {\r\n        const body = res?.body;\r\n        const data = body.map(driver => {\r\n          let driverData = [];\r\n          driverData.push(driver?.id, driver?.nationalId, driver?.name, driver?.typeLicense, driver?.seniority);\r\n          return driverData;\r\n        })\r\n        setData(data);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }, [])\r\n\r\n  const handleRowClick = (rowData, rowMeta) => {\r\n    console.log('hello', rowData, rowMeta);\r\n    history.push(`/app/drivers/${rowData[0]}`);\r\n  }\r\n\r\n  const handleRowDelete = () => {\r\n    let rowsToDelete = [];\r\n    datatableData.map((data, idx) => {\r\n      if (rowsSelectedByUser.includes(idx))\r\n        rowsToDelete.push(data[0]);\r\n    })\r\n    instance.post(AppURL.deleteDrivers, rowsToDelete)\r\n      .then(res => {\r\n        toast.success(res?.msg);\r\n      }).catch(error => {\r\n        toast.error(error?.msg);\r\n        return false;\r\n      });\r\n  }\r\n\r\n  const handleSelectRow = (currentRowsSelected, allRowsSelected, rowsSelected) => {\r\n    setRowsSelected(rowsSelected);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Tables\"\r\n        button={<MUIButton\r\n          variant=\"contained\"\r\n          size=\"medium\"\r\n          color=\"primary\"\r\n          onClick={() => { history.push(`/app/drivers/create`) }}\r\n        >\r\n          New\r\n        </MUIButton>} />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          {\r\n            datatableData ? <MUIDataTable\r\n              title=\"Driver List\"\r\n              data={datatableData}\r\n              columns={[\"Id\", \"National Id\", \"Name\", \"License\", \"Seniority\"]}\r\n              options={{\r\n                filterType: \"checkbox\",\r\n                draggableColumns: true,\r\n                onRowClick: handleRowClick,\r\n                onRowsDelete: handleRowDelete,\r\n                onRowSelectionChange: handleSelectRow\r\n              }}\r\n            /> : <CircularProgress />\r\n          }\r\n\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\PageTitle\\PageTitle.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Widget\\Widget.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Wrappers\\Wrappers.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\dashboard\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\dashboard\\mock.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Sidebar\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\notifications\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\charts\\components\\ApexLineChart.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Sidebar\\components\\Dot.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\maps\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\typography\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Header\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Notification\\Notification.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\UserAvatar\\UserAvatar.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\icons\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\PageTitle\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Widget\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Notification\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\UserAvatar\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Bus\\BusDetail.js",["261","262","263","264","265","266","267","268","269","270"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport instance from '../../services';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n        width: '80%',\r\n        fontSize: '14px !important',\r\n        marginBottom: '30px'\r\n    },\r\n}));\r\n\r\nfunction BusDetail() {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const { id } = useParams();\r\n    const [formValues, setFormValues] = useState(null);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let url = AppURL.getBus + '/' + id;\r\n        instance.get(url)\r\n            .then(res => {\r\n                if (res?.status === 200) {\r\n                    const body = res?.body;\r\n                    let data = {\r\n                        carNumber: body?.carNumber,\r\n                        color: body?.color,\r\n                        manufacturer: body?.manufacturer,\r\n                        lifeCar: body?.lifeCar,\r\n                        numberSeats: body?.numberSeats,\r\n                        yearUse: body?.yearUse,\r\n                        dateMantain: body?.dateMantain,\r\n                    };\r\n                    setFormValues(data);\r\n                }\r\n\r\n            })\r\n    }, []);\r\n\r\n    const handleEditButton = () => {\r\n        if (isEditing) {\r\n            let url = AppURL.updateBus + '/' + id;\r\n            instance.put(url, {\r\n                ...formValues,\r\n                carNumber: parseInt(formValues.carNumber),\r\n                numberSeats: parseInt(formValues.numberSeats),\r\n                yearUse: parseInt(formValues.yearUse),\r\n                dateMantain: '2022-01-01'\r\n            }).then(res => {\r\n                toast.success(res?.msg);\r\n                history.goBack();\r\n            }).catch(error => {\r\n                toast.error(error?.msg);\r\n            })\r\n        }\r\n        setIsEditing(!isEditing);\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormValues({\r\n            ...formValues,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                formValues ? <>\r\n                    <PageTitle\r\n                        title=\"Bus Details\"\r\n                        buttonBack={<MUIButton\r\n                            variant=\"contained\"\r\n                            size=\"medium\"\r\n                            color=\"secondary\"\r\n                            onClick={() => history.goBack()}\r\n                        >\r\n                            Back\r\n                        </MUIButton>}\r\n                        button={<MUIButton\r\n                            variant=\"contained\"\r\n                            size=\"medium\"\r\n                            color=\"primary\"\r\n                            onClick={handleEditButton}\r\n                        >\r\n                            {isEditing ? 'Save' : 'Edit'}\r\n                        </MUIButton>} />\r\n                    <Grid container spacing={4}>\r\n                        <Grid item xs={12}>\r\n                            <Widget disableWidgetMenu>\r\n                                <Grid container item xs={12}>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n                                            id=\"carNumber\"\r\n                                            name=\"carNumber\"\r\n                                            label=\"Car Number\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.carNumber}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                            disabled={!isEditing}\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"color\"\r\n                                            name=\"color\"\r\n                                            label=\"Color\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.color}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                            disabled={!isEditing}\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"manufacturer\"\r\n                                            name=\"manufacturer\"\r\n                                            label=\"Manufacturer\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.manufacturer}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                            disabled={!isEditing}\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"lifeCar\"\r\n                                            name=\"lifeCar\"\r\n                                            label=\"Life Car\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.lifeCar}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                            disabled={!isEditing}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n                                            id=\"numberSeats\"\r\n                                            name=\"numberSeats\"\r\n                                            label=\"Number Seats\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.numberSeats}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                            disabled={!isEditing}\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"yearUse\"\r\n                                            name=\"yearUse\"\r\n                                            label=\"Year Use\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.yearUse}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                            disabled={!isEditing}\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"dateMantain\"\r\n                                            label=\"Date Maintain\"\r\n                                            type=\"date\"\r\n                                            value={new Date(new Date(formValues?.dateMantain).getTime() - new Date(formValues?.dateMantain).getTimezoneOffset() * 60 * 1000)}\r\n                                            sx={{ width: 220 }}\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                            name=\"dateMantain\"\r\n                                            className={classes.input}\r\n                                            variant=\"outlined\"\r\n                                            disabled={!isEditing}\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Widget>\r\n                        </Grid>\r\n                    </Grid>\r\n                </> : <CircularProgress />\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BusDetail\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Bus\\NewBus.js",["271","272","273","274","275","276","277","278"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport instance from '../../services';\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n        width: '80%',\r\n        fontSize: '14px !important',\r\n        marginBottom: '30px'\r\n    },\r\n}));\r\n\r\nconst data = {\r\n    carNumber: \"\",\r\n    color: \"\",\r\n    manufacturer: \"\",\r\n    lifeCar: \"\",\r\n    numberSeats: \"\",\r\n    dateMantain: \"2022-01-01\",\r\n    yearUse: 3,\r\n    image: \"body?.image\",\r\n};\r\n\r\nfunction NewBus() {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const [formValues, setFormValues] = useState(data);\r\n\r\n    const handleSaveButton = () => {\r\n        instance.post(AppURL.createBus, {\r\n            ...formValues,\r\n            carNumber: parseInt(formValues.carNumber),\r\n            numberSeats: parseInt(formValues.numberSeats),\r\n            yearUse: parseInt(formValues.yearUse),\r\n            dateMantain: '2022-01-01'\r\n        })\r\n            .then(res => {\r\n                toast.success(res?.msg);\r\n                history.goBack();\r\n            })\r\n            .catch(error => {\r\n                toast.error(error?.msg);\r\n            })\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormValues({\r\n            ...formValues,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                formValues ? <>\r\n                    <PageTitle\r\n                        title=\"Bus Details\"\r\n                        buttonBack={<MUIButton\r\n                            variant=\"contained\"\r\n                            size=\"medium\"\r\n                            color=\"secondary\"\r\n                            onClick={() => history.goBack()}\r\n                        >\r\n                            Back\r\n                        </MUIButton>}\r\n                        button={<MUIButton\r\n                            variant=\"contained\"\r\n                            size=\"medium\"\r\n                            color=\"primary\"\r\n                            onClick={handleSaveButton}\r\n                        >\r\n                            Save\r\n                        </MUIButton>} />\r\n                    <Grid container spacing={4}>\r\n                        <Grid item xs={12}>\r\n                            <Widget disableWidgetMenu>\r\n                                <Grid container item xs={12}>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n                                            id=\"carNumber\"\r\n                                            name=\"carNumber\"\r\n                                            label=\"Car Number\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.carNumber}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"color\"\r\n                                            name=\"color\"\r\n                                            label=\"Color\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.color}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"manufacturer\"\r\n                                            name=\"manufacturer\"\r\n                                            label=\"Manufacturer\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.manufacturer}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"lifeCar\"\r\n                                            name=\"lifeCar\"\r\n                                            label=\"Life Car\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.lifeCar}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n                                            id=\"numberSeats\"\r\n                                            name=\"numberSeats\"\r\n                                            label=\"Number Seats\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.numberSeats}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"yearUse\"\r\n                                            name=\"yearUse\"\r\n                                            label=\"Year Use\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.yearUse}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"dateMantain\"\r\n                                            label=\"Date Maintain\"\r\n                                            type=\"date\"\r\n                                            value={new Date(new Date(formValues?.dateMantain).getTime() - new Date(formValues?.dateMantain).getTimezoneOffset() * 60 * 1000)}\r\n                                            sx={{ width: 220 }}\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                            name=\"dateMantain\"\r\n                                            className={classes.input}\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Widget>\r\n                        </Grid>\r\n                    </Grid>\r\n                </> : <CircularProgress />\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewBus\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Bus\\index.js",["279"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport instance from \"../../services\";\r\n\r\nexport default function Tables() {\r\n  let history = useHistory();\r\n  const [datatableData, setData] = useState(null);\r\n  const [rowsSelectedByUser, setRowsSelected] = useState([]);\r\n  useEffect(() => {\r\n    instance.get(AppURL.getAllBuses)\r\n      .then(res => {\r\n        const body = res?.body;\r\n        const data = body.map(bus => {\r\n          let busData = [];\r\n          busData.push(bus?.id, bus?.carNumber, bus?.color, bus?.manufacturer, bus?.lifeCar, bus?.numberSeats, bus?.yearUse, bus?.dateMantain);\r\n          return busData;\r\n        })\r\n        setData(data);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }, [])\r\n\r\n  const handleRowClick = (rowData, rowMeta) => {\r\n    console.log('hello', rowData, rowMeta);\r\n    history.push(`/app/buses/${rowData[0]}`);\r\n  }\r\n\r\n  const handleRowDelete = () => {\r\n    let rowsToDelete = [];\r\n    datatableData.map((data, idx) => {\r\n      if (rowsSelectedByUser.includes(idx))\r\n        rowsToDelete.push(data[0]);\r\n    })\r\n    instance.post(AppURL.deleteBuses, rowsToDelete)\r\n      .then(res => {\r\n        toast.success(res?.msg);\r\n      }).catch(error => {\r\n        toast.error(error?.msg);\r\n        return false;\r\n      });\r\n  }\r\n\r\n  const handleSelectRow = (currentRowsSelected, allRowsSelected, rowsSelected) => {\r\n    setRowsSelected(rowsSelected);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Tables\"\r\n        button={<MUIButton\r\n          variant=\"contained\"\r\n          size=\"medium\"\r\n          color=\"primary\"\r\n          onClick={() => { history.push(`/app/buses/create`) }}\r\n        >\r\n          New\r\n        </MUIButton>} />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          {\r\n            datatableData ? <MUIDataTable\r\n              title=\"Bus List\"\r\n              data={datatableData}\r\n              columns={[\"Id\", \"Car Number\", \"Color\", \"Manufacturer\", \"Life Car\"]}\r\n              options={{\r\n                filterType: \"checkbox\",\r\n                draggableColumns: true,\r\n                onRowClick: handleRowClick,\r\n                onRowsDelete: handleRowDelete,\r\n                onRowSelectionChange: handleSelectRow\r\n              }}\r\n            /> : <CircularProgress />\r\n          }\r\n\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n",{"ruleId":"280","replacedBy":"281"},{"ruleId":"282","replacedBy":"283"},{"ruleId":"284","severity":1,"message":"285","line":16,"column":17,"nodeType":"286","messageId":"287","endLine":16,"endColumn":28},{"ruleId":"288","severity":1,"message":"289","line":59,"column":6,"nodeType":"290","endLine":59,"endColumn":36,"suggestions":"291"},{"ruleId":"288","severity":1,"message":"289","line":65,"column":6,"nodeType":"290","endLine":65,"endColumn":33,"suggestions":"292"},{"ruleId":"284","severity":1,"message":"293","line":5,"column":10,"nodeType":"286","messageId":"287","endLine":5,"endColumn":20},{"ruleId":"284","severity":1,"message":"294","line":5,"column":22,"nodeType":"286","messageId":"287","endLine":5,"endColumn":28},{"ruleId":"284","severity":1,"message":"295","line":6,"column":22,"nodeType":"286","messageId":"287","endLine":6,"endColumn":32},{"ruleId":"288","severity":1,"message":"296","line":48,"column":6,"nodeType":"290","endLine":48,"endColumn":8,"suggestions":"297"},{"ruleId":"298","severity":1,"message":"299","line":111,"column":23,"nodeType":"300","messageId":"301","endLine":111,"endColumn":37},{"ruleId":"298","severity":1,"message":"299","line":123,"column":23,"nodeType":"300","messageId":"301","endLine":123,"endColumn":37},{"ruleId":"298","severity":1,"message":"299","line":135,"column":23,"nodeType":"300","messageId":"301","endLine":135,"endColumn":37},{"ruleId":"298","severity":1,"message":"299","line":147,"column":23,"nodeType":"300","messageId":"301","endLine":147,"endColumn":37},{"ruleId":"298","severity":1,"message":"299","line":161,"column":23,"nodeType":"300","messageId":"301","endLine":161,"endColumn":37},{"ruleId":"298","severity":1,"message":"299","line":187,"column":23,"nodeType":"300","messageId":"301","endLine":187,"endColumn":37},{"ruleId":"284","severity":1,"message":"302","line":1,"column":27,"nodeType":"286","messageId":"287","endLine":1,"endColumn":36},{"ruleId":"284","severity":1,"message":"295","line":5,"column":22,"nodeType":"286","messageId":"287","endLine":5,"endColumn":32},{"ruleId":"298","severity":1,"message":"299","line":93,"column":23,"nodeType":"300","messageId":"301","endLine":93,"endColumn":37},{"ruleId":"298","severity":1,"message":"299","line":104,"column":23,"nodeType":"300","messageId":"301","endLine":104,"endColumn":37},{"ruleId":"298","severity":1,"message":"299","line":115,"column":23,"nodeType":"300","messageId":"301","endLine":115,"endColumn":37},{"ruleId":"298","severity":1,"message":"299","line":126,"column":23,"nodeType":"300","messageId":"301","endLine":126,"endColumn":37},{"ruleId":"298","severity":1,"message":"299","line":139,"column":23,"nodeType":"300","messageId":"301","endLine":139,"endColumn":37},{"ruleId":"284","severity":1,"message":"303","line":10,"column":3,"nodeType":"286","messageId":"287","endLine":10,"endColumn":7},{"ruleId":"284","severity":1,"message":"294","line":27,"column":29,"nodeType":"286","messageId":"287","endLine":27,"endColumn":35},{"ruleId":"284","severity":1,"message":"304","line":9,"column":21,"nodeType":"286","messageId":"287","endLine":9,"endColumn":32},{"ruleId":"284","severity":1,"message":"305","line":10,"column":19,"nodeType":"286","messageId":"287","endLine":10,"endColumn":30},{"ruleId":"284","severity":1,"message":"306","line":11,"column":18,"nodeType":"286","messageId":"287","endLine":11,"endColumn":25},{"ruleId":"284","severity":1,"message":"307","line":24,"column":8,"nodeType":"286","messageId":"287","endLine":24,"endColumn":11},{"ruleId":"308","severity":1,"message":"309","line":38,"column":35,"nodeType":"310","messageId":"311","endLine":38,"endColumn":37},{"ruleId":"284","severity":1,"message":"293","line":5,"column":10,"nodeType":"286","messageId":"287","endLine":5,"endColumn":20},{"ruleId":"284","severity":1,"message":"294","line":5,"column":22,"nodeType":"286","messageId":"287","endLine":5,"endColumn":28},{"ruleId":"284","severity":1,"message":"295","line":6,"column":22,"nodeType":"286","messageId":"287","endLine":6,"endColumn":32},{"ruleId":"288","severity":1,"message":"296","line":47,"column":8,"nodeType":"290","endLine":47,"endColumn":10,"suggestions":"312"},{"ruleId":"298","severity":1,"message":"299","line":111,"column":45,"nodeType":"300","messageId":"301","endLine":111,"endColumn":59},{"ruleId":"298","severity":1,"message":"299","line":123,"column":45,"nodeType":"300","messageId":"301","endLine":123,"endColumn":59},{"ruleId":"298","severity":1,"message":"299","line":135,"column":45,"nodeType":"300","messageId":"301","endLine":135,"endColumn":59},{"ruleId":"298","severity":1,"message":"299","line":147,"column":45,"nodeType":"300","messageId":"301","endLine":147,"endColumn":59},{"ruleId":"298","severity":1,"message":"299","line":161,"column":45,"nodeType":"300","messageId":"301","endLine":161,"endColumn":59},{"ruleId":"298","severity":1,"message":"299","line":173,"column":45,"nodeType":"300","messageId":"301","endLine":173,"endColumn":59},{"ruleId":"284","severity":1,"message":"302","line":1,"column":27,"nodeType":"286","messageId":"287","endLine":1,"endColumn":36},{"ruleId":"284","severity":1,"message":"295","line":5,"column":22,"nodeType":"286","messageId":"287","endLine":5,"endColumn":32},{"ruleId":"298","severity":1,"message":"299","line":95,"column":45,"nodeType":"300","messageId":"301","endLine":95,"endColumn":59},{"ruleId":"298","severity":1,"message":"299","line":106,"column":45,"nodeType":"300","messageId":"301","endLine":106,"endColumn":59},{"ruleId":"298","severity":1,"message":"299","line":117,"column":45,"nodeType":"300","messageId":"301","endLine":117,"endColumn":59},{"ruleId":"298","severity":1,"message":"299","line":128,"column":45,"nodeType":"300","messageId":"301","endLine":128,"endColumn":59},{"ruleId":"298","severity":1,"message":"299","line":141,"column":45,"nodeType":"300","messageId":"301","endLine":141,"endColumn":59},{"ruleId":"298","severity":1,"message":"299","line":152,"column":45,"nodeType":"300","messageId":"301","endLine":152,"endColumn":59},{"ruleId":"308","severity":1,"message":"309","line":38,"column":35,"nodeType":"310","messageId":"311","endLine":38,"endColumn":37},"no-native-reassign",["313"],"no-negated-in-lhs",["314"],"no-unused-vars","'TwitterIcon' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'layoutState.message'. Either include it or remove the dependency array.","ArrayExpression",["315"],["316"],"'Typography' is defined but never used.","'Button' is defined but never used.","'withStyles' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["317"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useEffect' is defined but never used.","'Link' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'Dot' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["318"],"no-global-assign","no-unsafe-negation",{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"323","fix":"325"},"Update the dependencies array to be: [layoutState.message, layoutState.showToastSuccess]",{"range":"326","text":"327"},"Update the dependencies array to be: [layoutState.message, layoutState.showToastFail]",{"range":"328","text":"329"},"Update the dependencies array to be: [id]",{"range":"330","text":"331"},{"range":"332","text":"331"},[1635,1665],"[layoutState.message, layoutState.showToastSuccess]",[1783,1810],"[layoutState.message, layoutState.showToastFail]",[1597,1599],"[id]",[1762,1764]]
>>>>>>> son
