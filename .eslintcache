[{"G:\\Learning\\ltm\\SbTickets_FE\\src\\index.js":"1","G:\\Learning\\ltm\\SbTickets_FE\\src\\serviceWorker.js":"2","G:\\Learning\\ltm\\SbTickets_FE\\src\\context\\UserContext.js":"3","G:\\Learning\\ltm\\SbTickets_FE\\src\\context\\LayoutContext.js":"4","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\App.js":"5","G:\\Learning\\ltm\\SbTickets_FE\\src\\themes\\index.js":"6","G:\\Learning\\ltm\\SbTickets_FE\\src\\services\\urlAPI.js":"7","G:\\Learning\\ltm\\SbTickets_FE\\src\\themes\\default.js":"8","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Layout\\Layout.js":"9","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\error\\Error.js":"10","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\login\\Login.js":"11","G:\\Learning\\ltm\\SbTickets_FE\\src\\services\\index.js":"12","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\error\\styles.js":"13","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\login\\styles.js":"14","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\TripBus\\TripBusDetail.js":"15","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\TripBus\\TripBus.js":"16","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\StatisticalCustomerBook\\StatisticalCustomerBook.js":"17","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Bus\\NewBus.js":"18","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Bus\\BusDetail.js":"19","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Statistical\\Statistical.js":"20","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Drivers\\DriverDetail.js":"21","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\LineBuses\\LineBusDetail.js":"22","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Layout\\styles.js":"23","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Drivers\\NewDriver.js":"24","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\LineBuses\\NewLineBus.js":"25","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\maps\\Maps.js":"26","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\tables\\Tables.js":"27","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\typography\\Typography.js":"28","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\charts\\Charts.js":"29","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\dashboard\\Dashboard.js":"30","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\notifications\\Notifications.js":"31","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Sidebar\\Sidebar.js":"32","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Bus\\index.js":"33","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Header\\Header.js":"34","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\TripBus\\index.js":"35","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\LineBuses\\index.js":"36","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Drivers\\index.js":"37","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\icons\\Icons.js":"38","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\PageTitle\\PageTitle.js":"39","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Widget\\Widget.js":"40","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Wrappers\\Wrappers.js":"41","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\dashboard\\mock.js":"42","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\dashboard\\components\\Table\\Table.js":"43","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Header\\styles.js":"44","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Sidebar\\components\\Dot.js":"45","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"46","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\icons\\styles.js":"47","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Sidebar\\styles.js":"48","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\notifications\\styles.js":"49","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Notification\\Notification.js":"50","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\dashboard\\styles.js":"51","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\UserAvatar\\UserAvatar.js":"52","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"53","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\charts\\components\\ApexHeatmap.js":"54","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\charts\\components\\ApexLineChart.js":"55","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\typography\\styles.js":"56","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\maps\\styles.js":"57","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Widget\\styles.js":"58","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\PageTitle\\styles.js":"59","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"60","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Notification\\styles.js":"61","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\UserAvatar\\styles.js":"62","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"63","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\StatisticalRevenueBus\\RevenueBusDetail.js":"64","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\StatisticalRevenueBus\\RevenueBus.js":"65"},{"size":896,"mtime":1637639175780,"results":"66","hashOfConfig":"67"},{"size":5083,"mtime":1637639175795,"results":"68","hashOfConfig":"67"},{"size":2933,"mtime":1638639015201,"results":"69","hashOfConfig":"67"},{"size":1984,"mtime":1637639175780,"results":"70","hashOfConfig":"67"},{"size":1787,"mtime":1637639175780,"results":"71","hashOfConfig":"67"},{"size":534,"mtime":1637639175795,"results":"72","hashOfConfig":"67"},{"size":1565,"mtime":1638704324550,"results":"73","hashOfConfig":"67"},{"size":3127,"mtime":1637639175795,"results":"74","hashOfConfig":"67"},{"size":6606,"mtime":1638792683454,"results":"75","hashOfConfig":"67"},{"size":1626,"mtime":1637639175780,"results":"76","hashOfConfig":"67"},{"size":4935,"mtime":1637639175795,"results":"77","hashOfConfig":"67"},{"size":817,"mtime":1638639015215,"results":"78","hashOfConfig":"67"},{"size":1395,"mtime":1637639175780,"results":"79","hashOfConfig":"67"},{"size":3556,"mtime":1637639175795,"results":"80","hashOfConfig":"67"},{"size":13946,"mtime":1638639015213,"results":"81","hashOfConfig":"67"},{"size":12377,"mtime":1638639015213,"results":"82","hashOfConfig":"67"},{"size":8642,"mtime":1638639015211,"results":"83","hashOfConfig":"67"},{"size":8141,"mtime":1638639015204,"results":"84","hashOfConfig":"67"},{"size":9825,"mtime":1638639015203,"results":"85","hashOfConfig":"67"},{"size":8310,"mtime":1638639015209,"results":"86","hashOfConfig":"67"},{"size":8112,"mtime":1638639015205,"results":"87","hashOfConfig":"67"},{"size":8097,"mtime":1638639015207,"results":"88","hashOfConfig":"67"},{"size":710,"mtime":1637639175780,"results":"89","hashOfConfig":"67"},{"size":5848,"mtime":1638639015205,"results":"90","hashOfConfig":"67"},{"size":6898,"mtime":1638639015208,"results":"91","hashOfConfig":"67"},{"size":1010,"mtime":1637639175795,"results":"92","hashOfConfig":"67"},{"size":2146,"mtime":1637639175795,"results":"93","hashOfConfig":"67"},{"size":4632,"mtime":1637639175795,"results":"94","hashOfConfig":"67"},{"size":6589,"mtime":1638639015214,"results":"95","hashOfConfig":"67"},{"size":16126,"mtime":1637639175780,"results":"96","hashOfConfig":"67"},{"size":14494,"mtime":1637639175795,"results":"97","hashOfConfig":"67"},{"size":4404,"mtime":1638788607516,"results":"98","hashOfConfig":"67"},{"size":2699,"mtime":1638637518110,"results":"99","hashOfConfig":"67"},{"size":10270,"mtime":1637639175780,"results":"100","hashOfConfig":"67"},{"size":3552,"mtime":1638639015214,"results":"101","hashOfConfig":"67"},{"size":2727,"mtime":1638639015208,"results":"102","hashOfConfig":"67"},{"size":2727,"mtime":1638639015206,"results":"103","hashOfConfig":"67"},{"size":391433,"mtime":1637639175780,"results":"104","hashOfConfig":"67"},{"size":590,"mtime":1637639175780,"results":"105","hashOfConfig":"67"},{"size":2581,"mtime":1637639175780,"results":"106","hashOfConfig":"67"},{"size":3971,"mtime":1637639175780,"results":"107","hashOfConfig":"67"},{"size":4288,"mtime":1637639175780,"results":"108","hashOfConfig":"67"},{"size":1323,"mtime":1637639175780,"results":"109","hashOfConfig":"67"},{"size":4043,"mtime":1637639175780,"results":"110","hashOfConfig":"67"},{"size":902,"mtime":1637639175780,"results":"111","hashOfConfig":"67"},{"size":4160,"mtime":1637639175780,"results":"112","hashOfConfig":"67"},{"size":812,"mtime":1637639175795,"results":"113","hashOfConfig":"67"},{"size":1363,"mtime":1637639175780,"results":"114","hashOfConfig":"67"},{"size":1943,"mtime":1637639175795,"results":"115","hashOfConfig":"67"},{"size":3413,"mtime":1637639175780,"results":"116","hashOfConfig":"67"},{"size":3000,"mtime":1637639175780,"results":"117","hashOfConfig":"67"},{"size":620,"mtime":1637639175780,"results":"118","hashOfConfig":"67"},{"size":4632,"mtime":1638639015200,"results":"119","hashOfConfig":"67"},{"size":1909,"mtime":1637639175780,"results":"120","hashOfConfig":"67"},{"size":1396,"mtime":1637639175780,"results":"121","hashOfConfig":"67"},{"size":389,"mtime":1637639175795,"results":"122","hashOfConfig":"67"},{"size":178,"mtime":1637639175795,"results":"123","hashOfConfig":"67"},{"size":1015,"mtime":1637639175780,"results":"124","hashOfConfig":"67"},{"size":529,"mtime":1637639175780,"results":"125","hashOfConfig":"67"},{"size":1075,"mtime":1637639175780,"results":"126","hashOfConfig":"67"},{"size":1040,"mtime":1637639175780,"results":"127","hashOfConfig":"67"},{"size":291,"mtime":1637639175780,"results":"128","hashOfConfig":"67"},{"size":1474,"mtime":1637639175780,"results":"129","hashOfConfig":"67"},{"size":3329,"mtime":1638804037924,"results":"130","hashOfConfig":"67"},{"size":3027,"mtime":1638803577888,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"6jkqrq",{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"134"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"134"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"134"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"134"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"134"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"134"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"134"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"134"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"134"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"134"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"134"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"134"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"134"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"134"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"134"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"134"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"134"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"134"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"134"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"G:\\Learning\\ltm\\SbTickets_FE\\src\\index.js",[],["282","283"],"G:\\Learning\\ltm\\SbTickets_FE\\src\\serviceWorker.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\context\\UserContext.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\context\\LayoutContext.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\App.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\themes\\index.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\services\\urlAPI.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\themes\\default.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Layout\\Layout.js",["284","285","286","287"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { Box, IconButton, Link } from '@material-ui/core';\r\nimport Icon from '@mdi/react';\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\n//icons\r\nimport {\r\n  mdiFacebook as FacebookIcon,\r\n  mdiTwitter as TwitterIcon,\r\n  mdiGithub as GithubIcon,\r\n} from '@mdi/js'\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Dashboard from \"../../pages/dashboard\";\r\nimport Typography from \"../../pages/typography\";\r\nimport Notifications from \"../../pages/notifications\";\r\nimport Maps from \"../../pages/maps\";\r\nimport Tables from \"../../pages/tables\";\r\nimport Icons from \"../../pages/icons\";\r\nimport Charts from \"../../pages/charts\";\r\nimport Drivers from \"../../pages/Drivers\";\r\nimport Bus from \"../../pages/Bus\";\r\n\r\nimport LineBuses from \"../../pages/LineBuses\";\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\nimport DriverDetail from \"../../pages/Drivers/DriverDetail\";\r\nimport NewDriver from \"../../pages/Drivers/NewDriver\";\r\nimport BusDetail from \"../../pages/Bus/BusDetail\";\r\nimport NewBus from \"../../pages/Bus/NewBus\";\r\nimport TripBus from \"../../pages/TripBus\";\r\nimport TripBusDetail from \"../../pages/TripBus/TripBusDetail\";\r\nimport TripBusNew from \"../../pages/TripBus/TripBus\";\r\n\r\nimport LineBusDetail from \"../../pages/LineBuses/LineBusDetail\";\r\nimport NewLineBus from \"../../pages/LineBuses/NewLineBus\";\r\nimport Statistical from \"../../pages/Statistical/Statistical\";\r\nimport StatisticalCustomerBook from \"../../pages/StatisticalCustomerBook/StatisticalCustomerBook\";\r\nimport index from \"../../pages/StatisticalRevenueBus/RevenueBus\";\r\nimport RevenueBus from \"../../pages/StatisticalRevenueBus/RevenueBus\";\r\nimport RevenueBusDetail from \"../../pages/StatisticalRevenueBus/RevenueBusDetail\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  const notifyError = (message) => toast.error(message);\r\n\r\n  const notifySuccess = (message) => toast.success(message);\r\n\r\n  useEffect(() => {\r\n    if (layoutState.showToastSuccess) {\r\n      notifySuccess(layoutState.message);\r\n    }\r\n  }, [layoutState.showToastSuccess]);\r\n\r\n  useEffect(() => {\r\n    if (layoutState.showToastFail) {\r\n      notifyError(layoutState.message);\r\n    }\r\n  }, [layoutState.showToastFail]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <>\r\n        <ToastContainer />\r\n        <Header history={props.history} />\r\n        <Sidebar />\r\n        <div\r\n          className={classnames(classes.content, {\r\n            [classes.contentShift]: layoutState.isSidebarOpened,\r\n          })}\r\n        >\r\n          <div className={classes.fakeToolbar} />\r\n          <Switch>\r\n            <Route path=\"/app/dashboard\" component={Dashboard} />\r\n            <Route path=\"/app/typography\" component={Typography} />\r\n            <Route path=\"/app/tables\" component={Tables} />\r\n            <Route path=\"/app/notifications\" component={Notifications} />\r\n            <Route\r\n              exact\r\n              path=\"/app/ui\"\r\n              render={() => <Redirect to=\"/app/ui/icons\" />}\r\n            />\r\n            <Route exact path=\"/app/drivers\" component={Drivers} />\r\n            <Route exact path=\"/app/drivers/create\" component={NewDriver} />\r\n            <Route exact path=\"/app/drivers/:id\" component={DriverDetail} />\r\n            <Route exact path=\"/app/buses\" component={Bus} />\r\n            <Route exact path=\"/app/buses/create\" component={NewBus} />\r\n            <Route exact path=\"/app/buses/:id\" component={BusDetail} />\r\n            <Route exact path=\"/app/tripbus\" component={TripBus} />\r\n            <Route exact path=\"/app/tripbus/create\" component={TripBusNew} />\r\n            <Route exact path=\"/app/tripbus/:id\" component={TripBusDetail} />\r\n            <Route exact path=\"/app/lineBuses\" component={LineBuses} />\r\n            <Route exact path=\"/app/lineBuses/create\" component={NewLineBus} />\r\n            <Route exact path=\"/app/lineBuses/:id\" component={LineBusDetail} />\r\n            <Route exact path=\"/app/statistical\" component={Statistical} />\r\n            <Route exact path=\"/app/statisticalBookBus\" component={StatisticalCustomerBook} />\r\n            <Route exact path=\"/app/revenueBus\" component={RevenueBus} />\r\n            <Route exact path=\"/app/revenueBus/:id\" component={RevenueBusDetail} />\r\n            <Route path=\"/app/ui/maps\" component={Maps} />\r\n            <Route path=\"/app/ui/icons\" component={Icons} />\r\n            <Route path=\"/app/ui/charts\" component={Charts} />\r\n          \r\n          </Switch>\r\n          <Box\r\n            mt={5}\r\n            width={\"100%\"}\r\n            display={\"flex\"}\r\n            alignItems={\"center\"}\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <div>\r\n              <Link\r\n                color={'primary'}\r\n                href={'https://github.com/AwesomeDracula/SbTickets_BE'}\r\n                target={'_blank'}\r\n                className={classes.link}\r\n              >\r\n                Project Backend\r\n              </Link>\r\n              <Link\r\n                color={'primary'}\r\n                href={'https://github.com/AwesomeDracula/SbTickets_FE'}\r\n                target={'_blank'}\r\n                className={classes.link}\r\n              >\r\n                Project Frontend\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              <Link\r\n                href={'https://www.facebook.com/groups/371157724565461'}\r\n                target={'_blank'}\r\n              >\r\n                <IconButton aria-label=\"facebook\">\r\n                  <Icon\r\n                    path={FacebookIcon}\r\n                    size={1}\r\n                    color=\"#6E6E6E99\"\r\n                  />\r\n                </IconButton>\r\n              </Link>\r\n              <Link\r\n                href={'https://github.com/AwesomeDracula/'}\r\n                target={'_blank'}\r\n              >\r\n                <IconButton\r\n                  aria-label=\"github\"\r\n                  style={{ marginRight: -12 }}\r\n                >\r\n                  <Icon\r\n                    path={GithubIcon}\r\n                    size={1}\r\n                    color=\"#6E6E6E99\"\r\n                  />\r\n                </IconButton>\r\n              </Link>\r\n            </div>\r\n          </Box>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\error\\Error.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\login\\Login.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\services\\index.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\error\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\login\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\TripBus\\TripBusDetail.js",["288","289","290","291","292","293","294","295","296","297","298","299"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, CircularProgress, Button as MUIButton, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport instance from '../../services';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    width: '80%',\r\n    fontSize: '14px !important',\r\n    marginBottom: '30px'\r\n  },\r\n}));\r\n\r\nfunction TripBusDetail({prop}) {\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n  //console.log(location.state);\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n  const { driverId } = useParams();\r\n  const { assitanceId } = useParams();\r\n  const [formValues, setFormValues] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [listTripBus, setListTripBus] = useState([]);\r\n  const [listLineBus, setListLineBus] = useState([]);\r\n  const [listDriver, setlistDriver] = useState([]);\r\n\r\n  const [selectedDriver, setselectedDriver] = useState(location.state?.driverId);\r\n  const [selectedassitDriver, setselectedassitDriver] = useState(location.state?.assitanceId);\r\n  useEffect(() => {\r\n    let url = AppURL.findTripBus + '/' + id;\r\n    //console.log(url);\r\n    instance.get(url)\r\n      .then(res => {\r\n        //console.log(res);\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          let data = {\r\n            tripBusId: body?.id,\r\n            carNumber: body?.bus.carNumber,\r\n            busId: body?.bus.id,\r\n            lineBusId: body?.lineBus.id,\r\n            numberGuest: body?.numberGuest,\r\n            priceTrip: body?.priceTrip,\r\n            timeTrip: body?.timeTrip,\r\n          };\r\n          //console.log(data);\r\n          setFormValues(data);\r\n        }\r\n      })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let url = AppURL.getAllBuses;\r\n    instance.get(url)\r\n      .then(res => {\r\n        //console.log(res);\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          setListTripBus(body);\r\n        }\r\n\r\n      })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let url = AppURL.getAllDrivers;\r\n    instance.get(url)\r\n      .then(res => {\r\n        //console.log(res);\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          setlistDriver(body);\r\n          console.log(\"driver: \" + JSON.stringify(body));\r\n          console.log(selectedDriver);\r\n          console.log(selectedassitDriver);\r\n        }\r\n\r\n      })\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if(listAllDriver.length > 0){\r\n  //     let listDriverNew = listAllDriver.filter(e => {\r\n  //       return e.id != selectedDriver\r\n  //     })\r\n  //     console.log(\"listDriverNew\" + listDriverNew);\r\n  //     setListTripBusAssistant(listDriverNew);\r\n  //   }\r\n  // }, [selectedDriver]);\r\n\r\n  // useEffect(() => {\r\n  //   if(listAllDriver.length > 0){\r\n  //     let listDriverNew = listAllDriver.filter(e => {\r\n  //       return e.id != selectedassitDriver\r\n  //     })\r\n  //     console.log(\"listDriverNewAAÂ\" + listDriverNew);\r\n  //     setlistDriver(listDriverNew);\r\n  //   }\r\n  // }, [selectedassitDriver]);\r\n  \r\n  useEffect(() => {\r\n    let url = AppURL.getAllLineBus;\r\n    instance.get(url)\r\n      .then(res => {\r\n        ////console.log(res);\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          setListLineBus(body);\r\n        }\r\n\r\n      })\r\n  }, []);\r\n\r\n  const handleEditButton = () => {\r\n    if (isEditing) {\r\n      let url = AppURL.editTripBus;\r\n      instance.post(url, {\r\n        ...formValues,\r\n        driverId: selectedDriver,\r\n        assistantBusId: selectedassitDriver,\r\n      }).then(res => {\r\n        toast.success(res?.msg);\r\n        history.goBack();\r\n      }).catch(error => {\r\n        toast.error(error?.msg);\r\n      })\r\n    }\r\n    setIsEditing(!isEditing);\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    //console.log(e.target);\r\n    setFormValues({\r\n      ...formValues,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {\r\n        formValues ? <>\r\n          <PageTitle\r\n            title=\"TripBus Details\"\r\n            buttonBack={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"secondary\"\r\n              onClick={() => history.goBack()}\r\n            >\r\n              Back\r\n            </MUIButton>}\r\n            button={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              onClick={handleEditButton}\r\n            >\r\n              {isEditing ? 'Save' : 'Edit'}\r\n            </MUIButton>} />\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n              <Widget disableWidgetMenu>\r\n                <Grid container item xs={12}>\r\n                  <Grid item xs={6}>\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">List Bus</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={formValues.busId}\r\n                      label=\"Bus\"\r\n                      onChange={handleInputChange}\r\n                      name=\"busId\"\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                      disabled={!isEditing}\r\n                    >\r\n                      {\r\n                          listTripBus.length > 0 && listTripBus.map((e) => (\r\n                            <MenuItem value={e.id}>{e.carNumber} {e.color} {e.manufacturer} </MenuItem>\r\n                          ))\r\n                      }\r\n\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">List LineBus</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      label=\"LineBus\"\r\n                      name=\"lineBusId\"\r\n                      value={formValues.lineBusId}\r\n                      onChange={handleInputChange}\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                      disabled={!isEditing}\r\n                    >\r\n                      {\r\n                          listLineBus.length > 0 && listLineBus.map((e) => (\r\n                            <MenuItem value={e.id}>{e.firstPoint.address} {e.lastPoint.address}</MenuItem>\r\n                          ))\r\n                      }\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">List Driver</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      label=\"LineBus\"\r\n                      name=\"driverId\"\r\n                      value={selectedDriver}\r\n                      onChange={(e) => setselectedDriver(e.target.value)}\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                      disabled={!isEditing}\r\n                    >\r\n                      {\r\n                          listDriver.length > 0 && listDriver.map((e) => {\r\n                            if(selectedassitDriver === e.id) return;\r\n                            return <MenuItem value={e.id}>{e.name}</MenuItem>\r\n                          })\r\n                      }\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">List Assistant</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      label=\"LineBus\"\r\n                      name=\"driverId\"\r\n                      value={selectedassitDriver}\r\n                      onChange={(e) => setselectedassitDriver(e.target.value)}\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                      disabled={!isEditing}\r\n                    >\r\n                      {\r\n                          listDriver.length > 0 && listDriver.map((e) => {\r\n                            if(selectedDriver === e.id) return;\r\n                            return <MenuItem value={e.id}>{e.name}</MenuItem>\r\n                          }\r\n                          )\r\n                      }\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                  </FormControl>\r\n                  \r\n                   \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    \r\n                  {/* <TextField\r\n                      id=\"carNumber\"\r\n                      name=\"carNumber\"\r\n                      label=\"CarNumber\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.carNumber}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    /> */}\r\n                    <TextField\r\n                      id=\"numberGuest\"\r\n                      name=\"numberGuest\"\r\n                      label=\"numberGuest\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.numberGuest}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"priceTrip\"\r\n                      name=\"priceTrip\"\r\n                      label=\"priceTrip\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues.priceTrip}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"timeTrip\"\r\n                      name=\"timeTrip\"\r\n                      label=\"timeTrip\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues.timeTrip}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Widget>\r\n            </Grid>\r\n          </Grid>\r\n        </> : <CircularProgress />\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TripBusDetail\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\TripBus\\TripBus.js",["300","301","302","303","304","305","306"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, CircularProgress, Button as MUIButton, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport instance from '../../services';\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    width: '80%',\r\n    fontSize: '14px !important',\r\n    marginBottom: '30px'\r\n  },\r\n}));\r\n\r\nconst data = {\r\n  tripBusId: \"\",\r\n  busId: \"\",\r\n  lineBusId: \"\",\r\n  numberGuest: \"\",\r\n  priceTrip:\"\",\r\n  timeTrip: \"\",\r\n};\r\n\r\nfunction TripBusNew() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [formValues, setFormValues] = useState(data);\r\n  const [selectedDriver, setselectedDriver] = useState(\"\");\r\n  const [selectedassitDriver, setselectedassitDriver] = useState(\"\");\r\n  const [listTripBus, setListTripBus] = useState([]);\r\n  const [listLineBus, setListLineBus] = useState([]);\r\n  const [listDriver, setlistDriver] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let url = AppURL.getAllBuses;\r\n    instance.get(url)\r\n      .then(res => {\r\n        //console.log(res);\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          setListTripBus(body);\r\n        }\r\n\r\n      })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let url = AppURL.getAllDrivers;\r\n    instance.get(url)\r\n      .then(res => {\r\n        //console.log(res);\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          setlistDriver(body);\r\n          console.log(\"driver: \" + JSON.stringify(body));\r\n          console.log(selectedDriver);\r\n          console.log(selectedassitDriver);\r\n        }\r\n\r\n      })\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if(listAllDriver.length > 0){\r\n  //     let listDriverNew = listAllDriver.filter(e => {\r\n  //       return e.id != selectedDriver\r\n  //     })\r\n  //     console.log(\"listDriverNew\" + listDriverNew);\r\n  //     setListTripBusAssistant(listDriverNew);\r\n  //   }\r\n  // }, [selectedDriver]);\r\n\r\n  // useEffect(() => {\r\n  //   if(listAllDriver.length > 0){\r\n  //     let listDriverNew = listAllDriver.filter(e => {\r\n  //       return e.id != selectedassitDriver\r\n  //     })\r\n  //     console.log(\"listDriverNewAAÂ\" + listDriverNew);\r\n  //     setlistDriver(listDriverNew);\r\n  //   }\r\n  // }, [selectedassitDriver]);\r\n  \r\n  useEffect(() => {\r\n    let url = AppURL.getAllLineBus;\r\n    instance.get(url)\r\n      .then(res => {\r\n        ////console.log(res);\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          setListLineBus(body);\r\n        }\r\n\r\n      })\r\n  }, []);\r\n\r\n  const handleSaveButton = () => {\r\n    instance.post(AppURL.createTripBus, {\r\n      ...formValues,\r\n      driverId: selectedDriver,\r\n      assistantBusId: selectedassitDriver,\r\n    })\r\n      .then(res => {\r\n        toast.success(res?.msg);\r\n        history.goBack();\r\n      })\r\n      .catch(error => {\r\n        toast.error(error?.msg);\r\n      })\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormValues({\r\n      ...formValues,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {\r\n        formValues ? <>\r\n          <PageTitle\r\n            title=\"TripBus\"\r\n            buttonBack={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"secondary\"\r\n              onClick={() => history.goBack()}\r\n            >\r\n              Back\r\n            </MUIButton>}\r\n            button={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              onClick={handleSaveButton}\r\n            >\r\n              Save\r\n            </MUIButton>} />\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n              <Widget disableWidgetMenu>\r\n                <Grid container item xs={12}>\r\n                <Grid item xs={6}>\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">List Bus</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={formValues.busId}\r\n                      label=\"Bus\"\r\n                      onChange={handleInputChange}\r\n                      name=\"busId\"\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                      //disabled={!isEditing}\r\n                    >\r\n                      {\r\n                          listTripBus.length > 0 && listTripBus.map((e) => (\r\n                            <MenuItem value={e.id}>{e.carNumber} {e.color} {e.manufacturer} </MenuItem>\r\n                          ))\r\n                      }\r\n\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">List LineBus</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      label=\"LineBus\"\r\n                      name=\"lineBusId\"\r\n                      value={formValues.lineBusId}\r\n                      onChange={handleInputChange}\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                      //disabled={!isEditing}\r\n                    >\r\n                      {\r\n                          listLineBus.length > 0 && listLineBus.map((e) => (\r\n                            <MenuItem value={e.id}>{e.firstPoint.address} {e.lastPoint.address}</MenuItem>\r\n                          ))\r\n                      }\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">List Driver</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      label=\"LineBus\"\r\n                      name=\"driverId\"\r\n                      value={selectedDriver}\r\n                      onChange={(e) => setselectedDriver(e.target.value)}\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                      //disabled={!isEditing}\r\n                    >\r\n                      {\r\n                          listDriver.length > 0 && listDriver.map((e) => {\r\n                            if(selectedassitDriver === e.id) return;\r\n                            return <MenuItem value={e.id}>{e.name}</MenuItem>\r\n                          })\r\n                      }\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">List Assistant</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      label=\"LineBus\"\r\n                      name=\"driverId\"\r\n                      value={selectedassitDriver}\r\n                      onChange={(e) => setselectedassitDriver(e.target.value)}\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                      //disabled={!isEditing}\r\n                    >\r\n                      {\r\n                          listDriver.length > 0 && listDriver.map((e) => {\r\n                            if(selectedDriver === e.id) return;\r\n                            return <MenuItem value={e.id}>{e.name}</MenuItem>\r\n                          }\r\n                          )\r\n                      }\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                  </FormControl>\r\n                  \r\n                   \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    \r\n                    <TextField\r\n                      id=\"numberGuest\"\r\n                      name=\"numberGuest\"\r\n                      label=\"numberGuest\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.numberGuest}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      //disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"priceTrip\"\r\n                      name=\"priceTrip\"\r\n                      label=\"priceTrip\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues.priceTrip}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      //disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"timeTrip\"\r\n                      name=\"timeTrip\"\r\n                      label=\"timeTrip\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues.timeTrip}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      //disabled={!isEditing}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Widget>\r\n            </Grid>\r\n          </Grid>\r\n        </> : <CircularProgress />\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TripBusNew\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\StatisticalCustomerBook\\StatisticalCustomerBook.js",["307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Chip,\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  Button,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport * as AppURL from '../../services/urlAPI'\r\nimport instance from \"../../services\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { toast } from \"react-toastify\";\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { Image } from \"@material-ui/icons\";\r\nconst states = {\r\n  sent: \"success\",\r\n  pending: \"warning\",\r\n  declined: \"secondary\",\r\n};\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    width: '80%',\r\n    fontSize: '14px !important',\r\n    marginBottom: '30px'\r\n  },\r\n}));\r\n\r\n\r\nexport default function StatisticalCustomerBook() {\r\n  //var keys = Object.keys(data[0]).map(i => i.toUpperCase());\r\n  //keys.shift(); // delete \"id\" key\r\n  const classes = useStyles();\r\n  const [listTripBus, setTripBus] = useState([]);\r\n  const [listData, setlistData] = useState([]);\r\n  const [timePicker, settimePicker] = useState(\"\");\r\n  const [selecteTripBus, setSelecteTripBus] = useState(\"\");\r\n  const [sumwages, setSumWages] = useState(0);\r\n  console.log(\"timePicker: \" + timePicker);\r\n  useEffect(() => {\r\n    let url = AppURL.getAllTripBus;\r\n    instance.get(url)\r\n      .then(res => {\r\n        //console.log(res);\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          setTripBus(body.listTripBus);\r\n          console.log(JSON.stringify(listTripBus));\r\n        }\r\n      })\r\n  }, []);\r\n\r\n  const data = {\r\n    driverName: \"\",\r\n    tripBusId: \"\",\r\n    scrapDateTime: \"\",\r\n    roleCar: \"\",\r\n    wages:\"\",\r\n    fixedSalary: \"\",\r\n  };\r\n\r\n  \r\n  \r\n  const searchData = () => {\r\n        if(selecteTripBus.length == 0){\r\n          toast.error(\"Please selectTripBus\");\r\n        }\r\n        else{\r\n          let url = AppURL.getTripBusCustomer + '/' + selecteTripBus;\r\n    //console.log(url);\r\n        instance.get(url)\r\n          .then(res => {\r\n\r\n            const data = res?.body.map(item => {\r\n              let labelitem = [];\r\n              labelitem.push(item?.fullName, item?.address,item?.birthday, item?.cmt,  item?.bookseat);\r\n              return labelitem;\r\n            })\r\n\r\n            if(data){\r\n              let sum = 0;\r\n              res?.body.forEach(element => {\r\n                console.log(\"element?.wages\" + element);\r\n                sum = sum + parseInt(element?.wages);\r\n                console.log(sum);\r\n              });\r\n              setSumWages(sum);\r\n            }\r\n\r\n\r\n            setlistData(data);\r\n          })\r\n          .catch(error => {\r\n            toast.error(\"Not Found\");\r\n          })\r\n        }\r\n  }\r\n\r\n  console.log(\"listData: \" + JSON.stringify(listData));\r\n\r\n\r\n  \r\n  return (\r\n    \r\n    \r\n    <Grid item xs={12}>\r\n    <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n            <PageTitle\r\n                  title=\"Booked ByCustomer\"\r\n                 />\r\n              <Widget disableWidgetMenu>\r\n                <Grid container item xs={12}>\r\n                  <Grid item xs={3}>\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">LineTripBus</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      label=\"LineTripBus\"\r\n                      name=\"driverId\"\r\n                      //value={selectedDriver}\r\n                      onChange={(e) => setSelecteTripBus(e.target.value)}\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                      //disabled={!isEditing}\r\n                    >\r\n                      {\r\n                          listTripBus.length > 0 && listTripBus.map((e) => {\r\n                            return <MenuItem value={e.id}>TripBus {e.id} {e.lineBus.firstPoint.address} {e.lineBus.firstPoint.address}</MenuItem>\r\n                          })\r\n                      }\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                    \r\n                   \r\n\r\n                  </FormControl>\r\n                  \r\n                  <div className=\"MuiFormControl-root MuiTextField-root makeStyles-input-60\">\r\n                        <img src={'../laixe.jpg'}\r\n                            variant=\"outlined\"\r\n                            id=\"image\" \r\n                            width=\"200\" height=\"120\" />\r\n                      </div>\r\n\r\n                  {/* <MuiPickersUtilsProvider utils={DateFnsUtils} style={{ marginBottom: `30px`,width: `80%`}}>\r\n                      <Grid container justify=\"flex-start\">\r\n                          <DatePicker\r\n                            variant=\"inline\"\r\n                            openTo=\"year\"\r\n                            views={[\"year\", \"month\"]}\r\n                            label=\"Year and Month\"\r\n                            helperText=\"Start from year selection\"\r\n                            value={timePicker}\r\n                            onChange={(e) => {\r\n                              //console.log(e.target.value);\r\n                              settimePicker(e.getFullYear() + \"-\" +e.getMonth());\r\n                            }}\r\n                          />\r\n                      </Grid>\r\n                    </MuiPickersUtilsProvider> */}\r\n                  {/* <TextField\r\n                      id=\"dob\"\r\n                      //label=\"Date of Birth\"\r\n                      type=\"date\"\r\n                      //value={new Date(new Date(formValues?.dob).getTime() - new Date(formValues?.dob).getTimezoneOffset() * 60 * 1000)}\r\n                      sx={{ width: 220 }}\r\n                      \r\n                      //type=\"variant\"\r\n                      variant=\"filled\"\r\n                      className={classes.input}\r\n                      onChange={(e) => {\r\n                        console.log(e.target.value);\r\n                        settimePicker(e.target.value)\r\n                      }}\r\n                      variant=\"outlined\"\r\n                    /> */}\r\n\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    size=\"medium\"\r\n                    color=\"primary\"\r\n                    onClick={searchData}\r\n                    style={{ marginTop: `30px`,width: `80%`}}\r\n                  >\r\n                     Search BookedSeat\r\n                    </Button>\r\n                \r\n                  </Grid>\r\n                  <Grid item xs={9}>\r\n\r\n                            {\r\n                      listData ? <MUIDataTable\r\n                        title=\"List Booked TripBus\"\r\n                        data={listData}\r\n                        columns={[ \"CustomerName\", \"Address\" , \"BirthDay\", \"NationId\", \"Bookseat\"]}\r\n                      /> : <CircularProgress />\r\n                    }\r\n\r\n                    {/* <Grid container item xs={12} style={{ marginTop: `30px`,}}>\r\n                    <Grid item xs={9}></Grid>\r\n                    <Grid item xs={3}>\r\n                      <TextField\r\n                        id=\"dob\"\r\n                        label=\"SumWages\"\r\n                        type=\"text\"\r\n                        value={sumwages}\r\n                        sx={{ width: 200 }}\r\n                        \r\n                        //type=\"variant\"\r\n                        className={classes.input}\r\n                        variant=\"outlined\"\r\n                        disabled={true}\r\n                      />\r\n                    </Grid>\r\n                    </Grid> */}\r\n\r\n                  </Grid>\r\n                </Grid>\r\n                </Widget>\r\n            </Grid>\r\n     </Grid>\r\n     </Grid>\r\n  );\r\n}\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Bus\\NewBus.js",["327","328","329","330","331","332","333","334"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport instance from '../../services';\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n        width: '80%',\r\n        fontSize: '14px !important',\r\n        marginBottom: '30px'\r\n    },\r\n}));\r\n\r\nconst data = {\r\n    carNumber: \"\",\r\n    color: \"\",\r\n    manufacturer: \"\",\r\n    lifeCar: \"\",\r\n    numberSeats: \"\",\r\n    dateMantain: \"2022-01-01\",\r\n    yearUse: 3,\r\n    image: \"body?.image\",\r\n};\r\n\r\nfunction NewBus() {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const [formValues, setFormValues] = useState(data);\r\n\r\n    const handleSaveButton = () => {\r\n        instance.post(AppURL.createBus, {\r\n            ...formValues,\r\n            carNumber: parseInt(formValues.carNumber),\r\n            numberSeats: parseInt(formValues.numberSeats),\r\n            yearUse: parseInt(formValues.yearUse),\r\n            dateMantain: '2022-01-01'\r\n        })\r\n            .then(res => {\r\n                toast.success(res?.msg);\r\n                history.goBack();\r\n            })\r\n            .catch(error => {\r\n                toast.error(error?.msg);\r\n            })\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormValues({\r\n            ...formValues,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                formValues ? <>\r\n                    <PageTitle\r\n                        title=\"Bus Details\"\r\n                        buttonBack={<MUIButton\r\n                            variant=\"contained\"\r\n                            size=\"medium\"\r\n                            color=\"secondary\"\r\n                            onClick={() => history.goBack()}\r\n                        >\r\n                            Back\r\n                        </MUIButton>}\r\n                        button={<MUIButton\r\n                            variant=\"contained\"\r\n                            size=\"medium\"\r\n                            color=\"primary\"\r\n                            onClick={handleSaveButton}\r\n                        >\r\n                            Save\r\n                        </MUIButton>} />\r\n                    <Grid container spacing={4}>\r\n                        <Grid item xs={12}>\r\n                            <Widget disableWidgetMenu>\r\n                                <Grid container item xs={12}>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n                                            id=\"carNumber\"\r\n                                            name=\"carNumber\"\r\n                                            label=\"Car Number\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.carNumber}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"color\"\r\n                                            name=\"color\"\r\n                                            label=\"Color\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.color}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"manufacturer\"\r\n                                            name=\"manufacturer\"\r\n                                            label=\"Manufacturer\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.manufacturer}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"lifeCar\"\r\n                                            name=\"lifeCar\"\r\n                                            label=\"Life Car\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.lifeCar}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n                                            id=\"numberSeats\"\r\n                                            name=\"numberSeats\"\r\n                                            label=\"Number Seats\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.numberSeats}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"yearUse\"\r\n                                            name=\"yearUse\"\r\n                                            label=\"Year Use\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.yearUse}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"dateMantain\"\r\n                                            label=\"Date Maintain\"\r\n                                            type=\"date\"\r\n                                            sx={{ width: 220 }}\r\n                                            onChange={handleInputChange}\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                            name=\"dateMantain\"\r\n                                            className={classes.input}\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Widget>\r\n                        </Grid>\r\n                    </Grid>\r\n                </> : <CircularProgress />\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewBus\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Bus\\BusDetail.js",["335","336","337","338","339","340","341","342","343","344"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport instance from '../../services';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n        width: '80%',\r\n        fontSize: '14px !important',\r\n        marginBottom: '30px'\r\n    },\r\n}));\r\n\r\nfunction BusDetail() {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const { id } = useParams();\r\n    const [formValues, setFormValues] = useState(null);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [datemain, setDateMain] = useState(\"\");\r\n    useEffect(() => {\r\n        let url = AppURL.getBus + '/' + id;\r\n        instance.get(url)\r\n            .then(res => {\r\n                if (res?.status === 200) {\r\n                    const body = res?.body;\r\n                    let data = {\r\n                        carNumber: body?.carNumber,\r\n                        color: body?.color,\r\n                        manufacturer: body?.manufacturer,\r\n                        lifeCar: body?.lifeCar,\r\n                        numberSeats: body?.numberSeats,\r\n                        yearUse: body?.yearUse,\r\n                        dateMantain: body?.dateMantain,\r\n                    };\r\n                    setFormValues(data);\r\n                    setDateMain(body?.dateMantain);\r\n                }\r\n\r\n            })\r\n    }, []);\r\n\r\n    const handleEditButton = () => {\r\n        if (isEditing) {\r\n            let url = AppURL.updateBus + '/' + id;\r\n            instance.put(url, {\r\n                ...formValues,\r\n                carNumber: parseInt(formValues.carNumber),\r\n                numberSeats: parseInt(formValues.numberSeats),\r\n                yearUse: parseInt(formValues.yearUse),\r\n                dateMantain: '2022-01-01'\r\n            }).then(res => {\r\n                toast.success(res?.msg);\r\n                history.goBack();\r\n            }).catch(error => {\r\n                toast.error(error?.msg);\r\n            })\r\n        }\r\n        setIsEditing(!isEditing);\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        console.log(\"name\" + e.target.name + \" \" + e.target.value)\r\n        setFormValues({\r\n            ...formValues,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                formValues ? <>\r\n                    <PageTitle\r\n                        title=\"Bus Details\"\r\n                        buttonBack={<MUIButton\r\n                            variant=\"contained\"\r\n                            size=\"medium\"\r\n                            color=\"secondary\"\r\n                            onClick={() => history.goBack()}\r\n                        >\r\n                            Back\r\n                        </MUIButton>}\r\n                        button={<MUIButton\r\n                            variant=\"contained\"\r\n                            size=\"medium\"\r\n                            color=\"primary\"\r\n                            onClick={handleEditButton}\r\n                        >\r\n                            {isEditing ? 'Save' : 'Edit'}\r\n                        </MUIButton>} />\r\n                    <Grid container spacing={4}>\r\n                        <Grid item xs={12}>\r\n                            <Widget disableWidgetMenu>\r\n                                <Grid container item xs={12}>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n                                            id=\"carNumber\"\r\n                                            name=\"carNumber\"\r\n                                            label=\"Car Number\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.carNumber}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                            disabled={!isEditing}\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"color\"\r\n                                            name=\"color\"\r\n                                            label=\"Color\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.color}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                            disabled={!isEditing}\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"manufacturer\"\r\n                                            name=\"manufacturer\"\r\n                                            label=\"Manufacturer\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.manufacturer}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                            disabled={!isEditing}\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"lifeCar\"\r\n                                            name=\"lifeCar\"\r\n                                            label=\"Life Car\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.lifeCar}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                            disabled={!isEditing}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n                                            id=\"numberSeats\"\r\n                                            name=\"numberSeats\"\r\n                                            label=\"Number Seats\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.numberSeats}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                            disabled={!isEditing}\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"yearUse\"\r\n                                            name=\"yearUse\"\r\n                                            label=\"Year Use\"\r\n                                            type=\"text\"\r\n                                            className={classes.input}\r\n                                            value={formValues?.yearUse}\r\n                                            onChange={handleInputChange}\r\n                                            type=\"variant\"\r\n                                            variant=\"outlined\"\r\n                                            disabled={!isEditing}\r\n                                        />\r\n                                        <TextField\r\n                                            id=\"dateMantain\"\r\n                                            label=\"Date Maintain\"\r\n                                            type=\"date\"\r\n                                            value={datemain}\r\n                                            sx={{ width: 220 }}\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                            onChange={\r\n                                                handleInputChange\r\n                                            }\r\n                                            name=\"dateMantain\"\r\n                                            className={classes.input}\r\n                                            variant=\"outlined\"\r\n                                            disabled={!isEditing}\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Widget>\r\n                        </Grid>\r\n                    </Grid>\r\n                </> : <CircularProgress />\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BusDetail\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Statistical\\Statistical.js",["345","346","347","348","349","350","351","352","353"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableRow,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  Chip,\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  Button,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport * as AppURL from '../../services/urlAPI'\r\nimport instance from \"../../services\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { toast } from \"react-toastify\";\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nconst states = {\r\n  sent: \"success\",\r\n  pending: \"warning\",\r\n  declined: \"secondary\",\r\n};\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    width: '80%',\r\n    fontSize: '14px !important',\r\n    marginBottom: '30px'\r\n  },\r\n}));\r\n\r\n\r\nexport default function Statistical() {\r\n  //var keys = Object.keys(data[0]).map(i => i.toUpperCase());\r\n  //keys.shift(); // delete \"id\" key\r\n  const classes = useStyles();\r\n  const [listDriver, setlistDriver] = useState([]);\r\n  const [listData, setlistData] = useState([]);\r\n  const [timePicker, settimePicker] = useState(\"\");\r\n  const [selecteDriver, setSelecteDriver] = useState(\"\");\r\n  const [sumwages, setSumWages] = useState(0);\r\n  console.log(\"timePicker: \" + timePicker);\r\n  useEffect(() => {\r\n    let url = AppURL.getAllDrivers;\r\n    instance.get(url)\r\n      .then(res => {\r\n        //console.log(res);\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          setlistDriver(body);\r\n        }\r\n      })\r\n  }, []);\r\n\r\n  const data = {\r\n    driverName: \"\",\r\n    tripBusId: \"\",\r\n    scrapDateTime: \"\",\r\n    roleCar: \"\",\r\n    wages:\"\",\r\n    fixedSalary: \"\",\r\n  };\r\n\r\n  \r\n  \r\n  const searchData = () => {\r\n      if(timePicker === \"\" || selecteDriver === \"\"){\r\n        toast.warning(\"Please select driver and time to Statistical\");\r\n      }\r\n      else{\r\n        let time = timePicker.split(\"-\")[1].length === 1 ? timePicker.split(\"-\")[0] + \"-0\" + timePicker.split(\"-\")[1] : timePicker;\r\n        instance.post(AppURL.getListWages, {\r\n          id: selecteDriver,\r\n          scrapTime: time,\r\n        })\r\n          .then(res => {\r\n\r\n            const data = res?.body.map(item => {\r\n              let labelitem = [];\r\n              labelitem.push(item?.driverName, item?.tripBusId, item?.scrapDateTime,item?.roleCar === \"1\" ? \"Driver\" : \"Assistant\", item?.wages,  item?.fixedSalary);\r\n              return labelitem;\r\n            })\r\n\r\n            if(data){\r\n              let sum = 0;\r\n              res?.body.forEach(element => {\r\n                console.log(\"element?.wages\" + element);\r\n                sum = sum + parseInt(element?.wages);\r\n                console.log(sum);\r\n              });\r\n              setSumWages(sum);\r\n            }\r\n\r\n\r\n            setlistData(data);\r\n          })\r\n          .catch(error => {\r\n            toast.error(\"Not Found\");\r\n          })\r\n      }\r\n  }\r\n\r\n  console.log(\"listData: \" + JSON.stringify(listData));\r\n\r\n\r\n  \r\n  return (\r\n    \r\n    \r\n    <Grid item xs={12}>\r\n    <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n            <PageTitle\r\n                  title=\"Statistical Wages\"\r\n                 />\r\n              <Widget disableWidgetMenu>\r\n                <Grid container item xs={12}>\r\n                  <Grid item xs={3}>\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">List Driver</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      label=\"LineBus\"\r\n                      name=\"driverId\"\r\n                      //value={selectedDriver}\r\n                      onChange={(e) => setSelecteDriver(e.target.value)}\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                      //disabled={!isEditing}\r\n                    >\r\n                      {\r\n                          listDriver.length > 0 && listDriver.map((e) => {\r\n                            return <MenuItem value={e.id}>{e.name}</MenuItem>\r\n                          })\r\n                      }\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                    \r\n                   \r\n\r\n                  </FormControl>\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils} style={{ marginBottom: `30px`,width: `80%`}}>\r\n                      <Grid container justify=\"flex-start\">\r\n                          <DatePicker\r\n                            variant=\"inline\"\r\n                            openTo=\"year\"\r\n                            views={[\"year\", \"month\"]}\r\n                            label=\"Year and Month\"\r\n                            helperText=\"Start from year selection\"\r\n                            value={timePicker}\r\n                            onChange={(e) => {\r\n                              //console.log(e.target.value);\r\n                              settimePicker(e.getFullYear() + \"-\" +e.getMonth());\r\n                            }}\r\n                          />\r\n                      </Grid>\r\n                    </MuiPickersUtilsProvider>\r\n                  {/* <TextField\r\n                      id=\"dob\"\r\n                      //label=\"Date of Birth\"\r\n                      type=\"date\"\r\n                      //value={new Date(new Date(formValues?.dob).getTime() - new Date(formValues?.dob).getTimezoneOffset() * 60 * 1000)}\r\n                      sx={{ width: 220 }}\r\n                      \r\n                      //type=\"variant\"\r\n                      variant=\"filled\"\r\n                      className={classes.input}\r\n                      onChange={(e) => {\r\n                        console.log(e.target.value);\r\n                        settimePicker(e.target.value)\r\n                      }}\r\n                      variant=\"outlined\"\r\n                    /> */}\r\n\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    size=\"medium\"\r\n                    color=\"primary\"\r\n                    onClick={searchData}\r\n                    style={{ marginTop: `30px`,width: `80%`}}\r\n                  >\r\n                     Statistical\r\n                    </Button>\r\n                \r\n                  </Grid>\r\n                  <Grid item xs={9}>\r\n\r\n                            {\r\n                      listData ? <MUIDataTable\r\n                        title=\"TripBus List\"\r\n                        data={listData}\r\n                        columns={[ \"DriverName\", \"TripBusId\" , \"ScrapDateTime\", \"RoleCar\", \"Wages\", \"FixedSalary\"]}\r\n                      /> : <CircularProgress />\r\n                    }\r\n\r\n                    <Grid container item xs={12} style={{ marginTop: `30px`,}}>\r\n                    <Grid item xs={9}></Grid>\r\n                    <Grid item xs={3}>\r\n                      <TextField\r\n                        id=\"dob\"\r\n                        label=\"SumWages\"\r\n                        type=\"text\"\r\n                        value={sumwages}\r\n                        sx={{ width: 200 }}\r\n                        \r\n                        //type=\"variant\"\r\n                        className={classes.input}\r\n                        variant=\"outlined\"\r\n                        disabled={true}\r\n                      />\r\n                    </Grid>\r\n                    </Grid>\r\n\r\n                  </Grid>\r\n                </Grid>\r\n                </Widget>\r\n            </Grid>\r\n     </Grid>\r\n     </Grid>\r\n  );\r\n}\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Drivers\\DriverDetail.js",["354","355","356","357","358","359","360","361","362","363","364"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport instance from '../../services';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    width: '80%',\r\n    fontSize: '14px !important',\r\n    marginBottom: '30px'\r\n  },\r\n}));\r\n\r\nfunction DriverDetail() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n  const [formValues, setFormValues] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let url = AppURL.getDriver + '/' + id;\r\n    instance.get(url)\r\n      .then(res => {\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          let data = {\r\n            nationalId: body?.nationalId,\r\n            name: body?.name,\r\n            codeLicense: body?.codeLicense,\r\n            typeLicense: body?.typeLicense,\r\n            address: body?.address,\r\n            dob: body?.dob,\r\n            seniority: body?.seniority,\r\n            image: body?.image,\r\n          };\r\n          setFormValues(data);\r\n          setImageDriver(data.image);\r\n        }\r\n\r\n      })\r\n  }, []);\r\n\r\n  const handleEditButton = () => {\r\n    if (isEditing) {\r\n      let url = AppURL.updateDriver + '/' + id;\r\n      instance.put(url, {\r\n        ...formValues,\r\n        seniority: parseInt(formValues.seniority),\r\n        salaryId: 1,\r\n        dob: '2000-01-01',\r\n        image: imageDrvier\r\n      }).then(res => {\r\n        toast.success(res?.msg);\r\n        history.goBack();\r\n      }).catch(error => {\r\n        toast.error(error?.msg);\r\n      })\r\n    }\r\n    setIsEditing(!isEditing);\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    // console.log(e.target.files[0].name);\r\n    if(e.target.name === 'image'){\r\n      setImageDriver(\"../\" + e.target.files[0].name);\r\n    }\r\n    const { name, value }  = e.target;\r\n    setFormValues({\r\n      ...formValues,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const [imageDrvier, setImageDriver] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      {\r\n        formValues ? <>\r\n          <PageTitle\r\n            title=\"Driver Details\"\r\n            buttonBack={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"secondary\"\r\n              onClick={() => history.goBack()}\r\n            >\r\n              Back\r\n            </MUIButton>}\r\n            button={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              onClick={handleEditButton}\r\n            >\r\n              {isEditing ? 'Save' : 'Edit'}\r\n            </MUIButton>} />\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n              <Widget disableWidgetMenu>\r\n                <Grid container item xs={12}>\r\n                  <Grid item xs={6}>\r\n                      <div className=\"MuiFormControl-root MuiTextField-root makeStyles-input-60\">\r\n                        <img src={imageDrvier}\r\n                            variant=\"outlined\"\r\n                            id=\"image\" \r\n                            width=\"200\" height=\"120\" />\r\n                        <input type=\"file\"  onChange={handleInputChange} disabled={!isEditing} name=\"image\"/>\r\n                      </div>\r\n                    <TextField\r\n                      id=\"nationalId\"\r\n                      name=\"nationalId\"\r\n                      label=\"National ID\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.nationalId}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                      style={{marginTop: `30px`}}\r\n                    />\r\n                    <TextField\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      label=\"Name\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.name}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"codeLicense\"\r\n                      name=\"codeLicense\"\r\n                      label=\"Code License\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.codeLicense}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    {/* <TextField\r\n                      id=\"typeLicense\"\r\n                      name=\"typeLicense\"\r\n                      label=\"Type License\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues.typeLicense}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    /> */}\r\n                    \r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                  <TextField\r\n                      id=\"typeLicense\"\r\n                      name=\"typeLicense\"\r\n                      label=\"Type License\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues.typeLicense}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"address\"\r\n                      name=\"address\"\r\n                      label=\"Address\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.address}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"dob\"\r\n                      label=\"Date of Birth\"\r\n                      type=\"date\"\r\n                      // value={formValues?.dob}\r\n                      onChange={handleInputChange}\r\n                      sx={{ width: 220 }}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      name=\"dob\"\r\n                      className={classes.input}\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"seniority\"\r\n                      name=\"seniority\"\r\n                      label=\"Seniority\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.seniority}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Widget>\r\n            </Grid>\r\n          </Grid>\r\n        </> : <CircularProgress />\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DriverDetail\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\LineBuses\\LineBusDetail.js",["365","366","367","368","369","370","371","372","373"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, CircularProgress, Button as MUIButton, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport instance from '../../services';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    width: '80%',\r\n    fontSize: '14px !important',\r\n    marginBottom: '30px'\r\n  },\r\n}));\r\n\r\nfunction LineBusDetail() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n  const [formValues, setFormValues] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [listLocation, setlistLocation] = useState([]);\r\n\r\n  const [firstId, setFirstId] = useState(\"\");\r\n  const [lastId, setLastId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let url = AppURL.getLineBus + '/' + id;\r\n    instance.get(url)\r\n      .then(res => {\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          let data = {\r\n            firstPoint: body?.firstPoint.id,\r\n            lastPoint: body?.lastPoint.id,\r\n            length: body?.length,\r\n            complexity: body?.complexity,\r\n          };\r\n          setFirstId(body?.firstPoint.id);\r\n          setLastId(body?.lastPoint.id);\r\n          setFormValues(data);\r\n        }\r\n\r\n      })\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    let url = AppURL.getLocation;\r\n    instance.get(url)\r\n      .then(res => {\r\n        console.log(firstId);\r\n        console.log(lastId);\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          setlistLocation(body);\r\n        }\r\n      })\r\n  }, []);\r\n\r\n  console.log(\"firstId \" + firstId);\r\n  console.log(\"lastId\" + lastId);\r\n  console.log(\"listLocation\" + listLocation);\r\n\r\n  const handleEditButton = () => {\r\n    if (isEditing) {\r\n      let url = AppURL.updateLineBus + '/' + id;\r\n      instance.put(url, {\r\n        ...formValues,\r\n        firstId: parseInt(firstId),\r\n        lastId: parseInt(lastId),\r\n        length: parseInt(formValues.length),\r\n        complexity: parseInt(formValues.complexity)\r\n      })\r\n      .then(res => {\r\n        toast.success(res?.msg);\r\n        history.goBack();\r\n      }).catch(error => {\r\n        toast.error(error?.msg);\r\n      })\r\n    }\r\n     setIsEditing(!isEditing);\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormValues({\r\n      ...formValues,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\r\n        formValues ? <>\r\n          <PageTitle\r\n            title=\"Line Bus Details\"\r\n            buttonBack={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"secondary\"\r\n              onClick={() => history.goBack()}\r\n            >\r\n              Back\r\n            </MUIButton>}\r\n            button={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              onClick={handleEditButton}\r\n            >\r\n              {isEditing ? 'Save' : 'Edit'}\r\n            </MUIButton>} />\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n              <Widget disableWidgetMenu>\r\n                <Grid container item xs={12}>\r\n                  <Grid item xs={6}>\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">First Point</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      label=\"LineBus\"\r\n                      value={firstId}\r\n                      onChange={(e) => setFirstId(e.target.value)}\r\n                      name=\"firstPoint\"\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                      disabled={!isEditing}\r\n                    >\r\n                      {\r\n                          listLocation.length > 0 && listLocation.map((e) => {\r\n                            if(lastId === e.id) return;\r\n                            return <MenuItem value={e.id}>{e.address}</MenuItem>\r\n                          })\r\n                      }\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">Last Point</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      label=\"LineBus\"\r\n                      value={lastId}\r\n                      onChange={(e) => setLastId(e.target.value)}\r\n                      name=\"lastPoint\"\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                      disabled={!isEditing}\r\n                    >\r\n                      {\r\n                          listLocation.length > 0 && listLocation.map((e) => {\r\n                            if(firstId === e.id) return;\r\n                            return <MenuItem value={e.id}>{e.address}</MenuItem>\r\n                          }\r\n                          )\r\n                      }\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                  </FormControl>\r\n                    <TextField\r\n                      id=\"length\"\r\n                      name=\"length\"\r\n                      label=\"Length\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.length}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                    <TextField\r\n                      id=\"complexity\"\r\n                      name=\"complexity\"\r\n                      label=\"Complexity\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.complexity}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                      disabled={!isEditing}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Widget>\r\n            </Grid>\r\n          </Grid>\r\n        </> : <CircularProgress />\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LineBusDetail\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Layout\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Drivers\\NewDriver.js",["374","375","376","377","378","379","380"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport instance from '../../services';\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    width: '80%',\r\n    fontSize: '14px !important',\r\n    marginBottom: '30px'\r\n  },\r\n}));\r\n\r\nconst data = {\r\n  nationalId: \"\",\r\n  name: \"\",\r\n  codeLicense: \"\",\r\n  typeLicense: \"\",\r\n  address: \"\",\r\n  dob: \"2000-01-01\",\r\n  seniority: 0,\r\n  image: \"body?.image\",\r\n};\r\n\r\nfunction NewDriver() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [formValues, setFormValues] = useState(data);\r\n\r\n  const handleSaveButton = () => {\r\n    instance.post(AppURL.createDriver, {\r\n      ...formValues,\r\n      seniority: parseInt(formValues.seniority),\r\n    })\r\n      .then(res => {\r\n        toast.success(res?.msg);\r\n        history.goBack();\r\n      })\r\n      .catch(error => {\r\n        toast.error(error?.msg);\r\n      })\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    console.log(\"name\" + e.target.name + \" \" + e.target.value)\r\n    setFormValues({\r\n      ...formValues,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\r\n        formValues ? <>\r\n          <PageTitle\r\n            title=\"Driver Details\"\r\n            buttonBack={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"secondary\"\r\n              onClick={() => history.goBack()}\r\n            >\r\n              Back\r\n            </MUIButton>}\r\n            button={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              onClick={handleSaveButton}\r\n            >\r\n              Save\r\n            </MUIButton>} />\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n              <Widget disableWidgetMenu>\r\n                <Grid container item xs={12}>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      id=\"nationalId\"\r\n                      name=\"nationalId\"\r\n                      label=\"National ID\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.nationalId}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      label=\"Name\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.name}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"codeLicense\"\r\n                      name=\"codeLicense\"\r\n                      label=\"Code License\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.codeLicense}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"typeLicense\"\r\n                      name=\"typeLicense\"\r\n                      label=\"Type License\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues.typeLicense}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      id=\"address\"\r\n                      name=\"address\"\r\n                      label=\"Address\"\r\n                      type=\"text\"\r\n                      className={classes.input}\r\n                      value={formValues?.address}\r\n                      onChange={handleInputChange}\r\n                      type=\"variant\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"dob\"\r\n                      label=\"Date of Birth\"\r\n                      type=\"date\"\r\n                      //value={new Date(new Date(formValues?.dob).getTime() - new Date(formValues?.dob).getTimezoneOffset() * 60 * 1000)}\r\n                      sx={{ width: 220 }}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      onChange={handleInputChange}\r\n                      name=\"dob\"\r\n                      className={classes.input}\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"seniority\"\r\n                      name=\"seniority\"\r\n                      label=\"Seniority\"\r\n                      type=\"number\"\r\n                      className={classes.input}\r\n                      value={formValues?.seniority}\r\n                      onChange={handleInputChange}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Widget>\r\n            </Grid>\r\n          </Grid>\r\n        </> : <CircularProgress />\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewDriver\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\LineBuses\\NewLineBus.js",["381","382","383"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, TextField, CircularProgress, Button as MUIButton, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport instance from '../../services';\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    width: '80%',\r\n    fontSize: '14px !important',\r\n    marginBottom: '30px'\r\n  },\r\n}));\r\n\r\nconst data = {\r\n  firstPoint: \"\",\r\n  lastPoint: \"\",\r\n  length: 0,\r\n  complexity: 0,\r\n};\r\n\r\nfunction NewLineBus() {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [formValues, setFormValues] = useState(data);\r\n\r\n  const [firstId, setFirstId] = useState(\"\");\r\n  const [lastId, setLastId] = useState(\"\");\r\n  const [listLocation, setlistLocation] = useState([]);\r\n\r\n  const handleSaveButton = () => {\r\n    instance.post(AppURL.createLineBus, {\r\n      ...formValues,\r\n      firstId: parseInt(firstId),\r\n      lastId: parseInt(lastId),\r\n      length: parseInt(formValues.length),\r\n      complexity: parseInt(formValues.complexity)\r\n    })\r\n      .then(res => {\r\n        toast.success(res?.msg);\r\n        history.goBack();\r\n      })\r\n      .catch(error => {\r\n        toast.error(error?.msg);\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    let url = AppURL.getLocation;\r\n    instance.get(url)\r\n      .then(res => {\r\n        //console.log(res);\r\n        if (res?.status === 200) {\r\n          const body = res?.body;\r\n          setlistLocation(body);\r\n        }\r\n\r\n      })\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormValues({\r\n      ...formValues,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\r\n        formValues ? <>\r\n          <PageTitle\r\n            title=\"Line Bus Details\"\r\n            buttonBack={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"secondary\"\r\n              onClick={() => history.goBack()}\r\n            >\r\n              Back\r\n            </MUIButton>}\r\n            button={<MUIButton\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              onClick={handleSaveButton}\r\n            >\r\n              Save\r\n            </MUIButton>} />\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n              <Widget disableWidgetMenu>\r\n                <Grid container item xs={12}>\r\n                  <Grid item xs={6}>\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">First Point</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      label=\"LineBus\"\r\n                      value={firstId}\r\n                      onChange={(e) => setFirstId(e.target.value)}\r\n                      name=\"firstPoint\"\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                    >\r\n                      {\r\n                          listLocation.length > 0 && listLocation.map((e) => {\r\n                            if(lastId === e.id) return;\r\n                            return <MenuItem value={e.id}>{e.name}</MenuItem>\r\n                          })\r\n                      }\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\r\n                    <InputLabel id=\"demo-simple-select-label\">Last Point</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      label=\"LineBus\"\r\n                      value={lastId}\r\n                      onChange={(e) => setLastId(e.target.value)}\r\n                      name=\"lastPoint\"\r\n                      MenuProps={{\r\n                        anchorOrigin: {\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        transformOrigin: {\r\n                          vertical: \"top\",\r\n                          horizontal: \"left\"\r\n                        },\r\n                        getContentAnchorEl: null\r\n                      }}\r\n\r\n                    >\r\n                      {\r\n                          listLocation.length > 0 && listLocation.map((e) => {\r\n                            if(firstId === e.id) return;\r\n                            return <MenuItem value={e.id}>{e.name}</MenuItem>\r\n                          }\r\n                          )\r\n                      }\r\n                      {/* <MenuItem value={10}>Ten</MenuItem>\r\n                      <MenuItem value={20}>Twenty</MenuItem>\r\n                      <MenuItem value={30}>Thirty</MenuItem> */}\r\n                    </Select>\r\n                  </FormControl>\r\n                    <TextField\r\n                      id=\"length\"\r\n                      name=\"length\"\r\n                      label=\"Length\"\r\n                      type=\"number\"\r\n                      className={classes.input}\r\n                      value={formValues?.length}\r\n                      onChange={handleInputChange}\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      id=\"complexity\"\r\n                      name=\"complexity\"\r\n                      label=\"Complexity\"\r\n                      type=\"number\"\r\n                      className={classes.input}\r\n                      value={formValues?.complexity}\r\n                      onChange={handleInputChange}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Widget>\r\n            </Grid>\r\n          </Grid>\r\n        </> : <CircularProgress />\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewLineBus\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\maps\\Maps.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\tables\\Tables.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\typography\\Typography.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\charts\\Charts.js",["384","385","386","387","388","389","390","391"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  CartesianGrid,\r\n  Legend,\r\n  Line,\r\n  LineChart,\r\n  Pie,\r\n  PieChart,\r\n  ResponsiveContainer,\r\n  Sector,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from \"recharts\";\r\n\r\n// components\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport ApexLineChart from \"./components/ApexLineChart\";\r\nimport ApexHeatmap from \"./components/ApexHeatmap\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport instance from \"../../services\";\r\nimport { set } from \"date-fns\";\r\n\r\n// const lineChartData = [\r\n//   {\r\n//     name: \"Week 1\",\r\n//     count: 2000,\r\n//   },\r\n//   {\r\n//     name: \"Week 2\",\r\n//     count: 1398,\r\n//   },\r\n//   {\r\n//     name: \"Week 3\",\r\n//     count: 9800,\r\n//   },\r\n//   {\r\n//     name: \"Week 4\",\r\n//     count: 3908,\r\n//   },\r\n//   {\r\n//     name: \"Week 5\",\r\n//     count: 4800,\r\n//   },\r\n// ];\r\n\r\n\r\nconst pieChartData = [\r\n  { name: \"Group A\", value: 400 },\r\n  { name: \"Group B\", value: 300 },\r\n  { name: \"Group C\", value: 300 },\r\n  { name: \"Group D\", value: 200 },\r\n];\r\n\r\nexport default function Charts(props) {\r\n  var theme = useTheme();\r\n\r\n  const [lineChartData,setLineChartData\r\n    // {\r\n    //   name: \"Week 1\",\r\n    //   count: 2000,\r\n    // },\r\n    // {\r\n    //   name: \"Week 2\",\r\n    //   count: 1398,\r\n    // },\r\n    // {\r\n    //   name: \"Week 3\",\r\n    //   count: 9800,\r\n    // },\r\n    // {\r\n    //   name: \"Week 4\",\r\n    //   count: 3908,\r\n    // },\r\n    // {\r\n    //   name: \"Week 5\",\r\n    //   count: 4800,\r\n    // },\r\n  ] = useState([])\r\n  \r\n  useEffect(() => {\r\n    let url = \"/admin/getCountTripByWeek\";\r\n    instance.get(url)\r\n      .then(res => {\r\n        //console.log(res);\r\n        if (res?.status === 200) {\r\n          const data = res?.body;\r\n          const lineChartData1 = [];\r\n          data.find((element) => {\r\n            lineChartData1.push({\r\n              name: \"Week \" + element.week,\r\n              count: element.count\r\n            })\r\n          });\r\n          setLineChartData(lineChartData1);\r\n        }\r\n      })\r\n  }, []);\r\n\r\n\r\n  // local\r\n  var [activeIndex, setActiveIndexId] = useState(0);\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Charts Page - Data Display\" button={\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"medium\"\r\n          color=\"secondary\"\r\n        >\r\n          Latest Reports\r\n        </Button>\r\n      } />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} md={6}>\r\n          <Widget title=\"Apex Line Chart\" upperTitle noBodyPadding>\r\n            <ApexLineChart />\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Widget title=\"Apex Heatmap\" upperTitle noBodyPadding>\r\n            <ApexHeatmap />\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12} md={8}>\r\n          <Widget title=\" Line Chart\" noBodyPadding upperTitle>\r\n            <ResponsiveContainer width=\"100%\" height={350}>\r\n              <LineChart\r\n                width={500}\r\n                height={300}\r\n                data={lineChartData}\r\n                margin={{\r\n                  top: 5,\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5,\r\n                }}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"count\"\r\n                  stroke={theme.palette.primary.main}\r\n                  activeDot={{ r: 8 }}\r\n                />\r\n                {/* <Line\r\n                  type=\"monotone\"\r\n                  dataKey=\"uv\"\r\n                  stroke={theme.palette.secondary.main}\r\n                /> */}\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </Widget>\r\n        </Grid>\r\n        {/* <Grid item xs={12} md={4}>\r\n          <Widget title=\"Pie Chart with Tooltips\" noBodyPadding upperTitle>\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <PieChart width={200} height={300}>\r\n                <Pie\r\n                  activeIndex={activeIndex}\r\n                  activeShape={renderActiveShape}\r\n                  data={pieChartData}\r\n                  innerRadius={60}\r\n                  outerRadius={80}\r\n                  fill={theme.palette.primary.main}\r\n                  dataKey=\"value\"\r\n                  onMouseEnter={(e, id) => setActiveIndexId(id)}\r\n                />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          </Widget>\r\n        </Grid> */}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n// ################################################################\r\n\r\nfunction renderActiveShape(props) {\r\n  var RADIAN = Math.PI / 180;\r\n  var {\r\n    cx,\r\n    cy,\r\n    midAngle,\r\n    innerRadius,\r\n    outerRadius,\r\n    startAngle,\r\n    endAngle,\r\n    fill,\r\n    payload,\r\n    percent,\r\n    value,\r\n  } = props;\r\n  var sin = Math.sin(-RADIAN * midAngle);\r\n  var cos = Math.cos(-RADIAN * midAngle);\r\n  var sx = cx + (outerRadius + 10) * cos;\r\n  var sy = cy + (outerRadius + 10) * sin;\r\n  var mx = cx + (outerRadius + 30) * cos;\r\n  var my = cy + (outerRadius + 30) * sin;\r\n  var ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n  var ey = my;\r\n  var textAnchor = cos >= 0 ? \"start\" : \"end\";\r\n\r\n  return (\r\n    <g>\r\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\r\n        {payload.name}\r\n      </text>\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        innerRadius={innerRadius}\r\n        outerRadius={outerRadius}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        fill={fill}\r\n      />\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        innerRadius={outerRadius + 6}\r\n        outerRadius={outerRadius + 10}\r\n        fill={fill}\r\n      />\r\n      <path\r\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\r\n        stroke={fill}\r\n        fill=\"none\"\r\n      />\r\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        textAnchor={textAnchor}\r\n        fill=\"#333\"\r\n      >{`count ${value}`}</text>\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        dy={18}\r\n        textAnchor={textAnchor}\r\n        fill=\"#999\"\r\n      >\r\n        {`(Rate ${(percent * 100).toFixed(2)}%)`}\r\n      </text>\r\n    </g>\r\n  );\r\n}\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\dashboard\\Dashboard.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\notifications\\Notifications.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Sidebar\\Sidebar.js",["392","393","394","395"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  DriveEta as DriveEtaIcon,\r\n  Business as BusEtaIcon,\r\n  TripOrigin as TripOriginIcon,\r\n  Airplay as AirplayIcon\r\n} from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\r\n  {\r\n    id: 1,\r\n    label: \"Typography\",\r\n    link: \"/app/typography\",\r\n    icon: <TypographyIcon />,\r\n  },\r\n  { id: 2, label: \"Tables\", link: \"/app/tables\", icon: <TableIcon /> },\r\n  {\r\n    id: 3,\r\n    label: \"Notifications\",\r\n    link: \"/app/notifications\",\r\n    icon: <NotificationsIcon />,\r\n  },\r\n  {\r\n    id: 4,\r\n    label: \"UI Elements\",\r\n    link: \"/app/ui\",\r\n    icon: <UIElementsIcon />,\r\n    children: [\r\n      { label: \"Icons\", link: \"/app/ui/icons\" },\r\n      { label: \"Charts\", link: \"/app/ui/charts\" },\r\n      { label: \"Maps\", link: \"/app/ui/maps\" },\r\n    ],\r\n  },\r\n  { id: 5, type: \"divider\" },\r\n  { id: 6, label: \"Drivers\", link: \"/app/drivers\", icon: <BusEtaIcon/> },\r\n  { id: 7, label: \"Bus\", link: \"/app/buses\", icon: <DriveEtaIcon /> },\r\n  { id: 8, label: \"TripBus\", link: \"/app/tripbus\", icon: <TripOriginIcon/> },\r\n  { id: 9, label: \"Line Buses\", link: \"/app/lineBuses\", icon: <DriveEtaIcon /> },\r\n  //{ id: 10, type: \"divider\" },\r\n  { id: 11, label: \"Statistical Wages\", link: \"/app/statistical\", icon: <TypographyIcon /> },\r\n  { id: 12, label: \"CustomerBookedBus\", link: \"/app/statisticalBookBus\", icon: <AirplayIcon /> },\r\n  { id: 13, label: \"Revenue Bus\", link: \"/app/revenueBus\", icon: <TypographyIcon /> },\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function () {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map(link => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Bus\\index.js",["396"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport instance from \"../../services\";\r\n\r\nexport default function Tables() {\r\n  let history = useHistory();\r\n  const [datatableData, setData] = useState(null);\r\n  const [rowsSelectedByUser, setRowsSelected] = useState([]);\r\n  useEffect(() => {\r\n    instance.get(AppURL.getAllBuses)\r\n      .then(res => {\r\n        const body = res?.body;\r\n        const data = body.map(bus => {\r\n          let busData = [];\r\n          busData.push(bus?.id, bus?.carNumber, bus?.color, bus?.manufacturer, bus?.lifeCar, bus?.numberSeats, bus?.yearUse, bus?.dateMantain);\r\n          return busData;\r\n        })\r\n        setData(data);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }, [])\r\n\r\n  const handleRowClick = (rowData, rowMeta) => {\r\n    console.log('hello', rowData, rowMeta);\r\n    history.push(`/app/buses/${rowData[0]}`);\r\n  }\r\n\r\n  const handleRowDelete = () => {\r\n    let rowsToDelete = [];\r\n    datatableData.map((data, idx) => {\r\n      if (rowsSelectedByUser.includes(idx))\r\n        rowsToDelete.push(data[0]);\r\n    })\r\n    instance.post(AppURL.deleteBuses, rowsToDelete)\r\n      .then(res => {\r\n        toast.success(res?.msg);\r\n      }).catch(error => {\r\n        toast.error(error?.msg);\r\n        return false;\r\n      });\r\n  }\r\n\r\n  const handleSelectRow = (currentRowsSelected, allRowsSelected, rowsSelected) => {\r\n    setRowsSelected(rowsSelected);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Tables\"\r\n        button={<MUIButton\r\n          variant=\"contained\"\r\n          size=\"medium\"\r\n          color=\"primary\"\r\n          onClick={() => { history.push(`/app/buses/create`) }}\r\n        >\r\n          New\r\n        </MUIButton>} />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          {\r\n            datatableData ? <MUIDataTable\r\n              title=\"Bus List\"\r\n              data={datatableData}\r\n              columns={[\"Id\", \"Car Number\", \"Color\", \"Manufacturer\", \"Life Car\"]}\r\n              options={{\r\n                filterType: \"checkbox\",\r\n                draggableColumns: true,\r\n                onRowClick: handleRowClick,\r\n                onRowsDelete: handleRowDelete,\r\n                onRowSelectionChange: handleSelectRow\r\n              }}\r\n            /> : <CircularProgress />\r\n          }\r\n\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Header\\Header.js",["397","398"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n          SbTickets\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isNotificationsUnread ? notifications.length : null}\r\n            color=\"warning\"\r\n          >\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isMailsUnread ? messages.length : null}\r\n            color=\"secondary\"\r\n          >\r\n            <MailIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map(message => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map(notification => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              Trung Vu\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"https://github.com/AwesomeDracula\"\r\n              target=\"_blank\"\r\n            >\r\n              Github account\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem>\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\TripBus\\index.js",["399","400","401","402","403"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport instance from \"../../services\";\r\n\r\nexport default function TripBus() {\r\n  let history = useHistory();\r\n  const [datatableData, setData] = useState(null);\r\n  const [rowsSelectedByUser, setRowsSelected] = useState([]);\r\n  useEffect(() => {\r\n    instance.get(AppURL.getAllTripBus)\r\n      .then(res => {\r\n        const listTripBus = res?.body.listTripBus;\r\n        const listTripBusDriver = res?.body.listTripBusDriver;\r\n        const data = listTripBus.map(tripbus => {\r\n          let tripBusData = [];\r\n          let driverId = listTripBusDriver.find(item => item.tripbusId == tripbus?.id && item.roleCar == '1')?.driverId;\r\n          let assitDriverId = listTripBusDriver.find(item => item.tripbusId == tripbus?.id && item.roleCar == '0')?.driverId;\r\n          console.log(\"driverId: \" + driverId);\r\n          if(!driverId) driverId = \"\";\r\n          tripBusData.push(tripbus?.id, driverId, assitDriverId, tripbus?.bus.carNumber, tripbus?.bus.color, tripbus.lineBus.firstPoint.address,  tripbus.lineBus.lastPoint.address,  tripbus?.numberGuest, tripbus?.priceTrip, tripbus?.timeTrip);\r\n          return tripBusData;\r\n        })\r\n        console.log(data);\r\n        setData(data);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }, [])\r\n\r\n  const handleRowClick = (rowData, rowMeta) => {\r\n    console.log('hello', rowData, rowMeta);\r\n    // history.push(`/app/tripbus/${rowData[0]}/${rowData[1]}/${rowData[1]}`);\r\n    history.push({\r\n      pathname: `/app/tripbus/${rowData[0]}`,\r\n      state: {\r\n        id: rowData[0],\r\n        driverId: rowData[1],\r\n        assitanceId: rowData[2]\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleRowDelete = () => {\r\n    let rowsToDelete = [];\r\n    datatableData.map((data, idx) => {\r\n      if (rowsSelectedByUser.includes(idx))\r\n        rowsToDelete.push(data[0]);\r\n    })\r\n    instance.post(AppURL.deleteBus, rowsToDelete)\r\n      .then(res => {\r\n        toast.success(res?.msg);\r\n      }).catch(error => {\r\n        toast.error(error?.msg);\r\n        return false;\r\n      });\r\n  }\r\n\r\n  const handleSelectRow = (currentRowsSelected, allRowsSelected, rowsSelected) => {\r\n    setRowsSelected(rowsSelected);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Tables\"\r\n        button={<MUIButton\r\n          variant=\"contained\"\r\n          size=\"medium\"\r\n          color=\"primary\"\r\n          onClick={() => { history.push(`/app/tripbus/create`) }}\r\n        >\r\n          New\r\n        </MUIButton>} />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          {\r\n            datatableData ? <MUIDataTable\r\n              title=\"TripBus List\"\r\n              data={datatableData}\r\n              columns={[ \"Id\" ,\"\",\"\",  \"CarNumber\", \"color\", \"FirstPoint\", \"LastPoint\",\"NumberGuest\", \"PriceTrip\", \"TimeTrip\"]}\r\n              options={{\r\n                filterType: \"checkbox\",\r\n                draggableColumns: true,\r\n                onRowClick: handleRowClick,\r\n                onRowsDelete: handleRowDelete,\r\n                onRowSelectionChange: handleSelectRow\r\n              }}\r\n            /> : <CircularProgress />\r\n          }\r\n\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\LineBuses\\index.js",["404"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport instance from \"../../services\";\r\n\r\nexport default function Tables() {\r\n  let history = useHistory();\r\n  const [datatableData, setData] = useState(null);\r\n  const [rowsSelectedByUser, setRowsSelected] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    instance.get(AppURL.getAllLineBus)\r\n      .then(res => {\r\n        const body = res?.body;\r\n        const data = body.map(lineBus => {\r\n          let lineBusData = [];\r\n          lineBusData.push(lineBus?.id, lineBus?.firstPoint.address, lineBus?.lastPoint.address, lineBus?.length, lineBus?.complexity);\r\n          return lineBusData;\r\n        })\r\n        setData(data);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }, [])\r\n\r\n  const handleRowClick = (rowData, rowMeta) => {\r\n    console.log('hello', rowData, rowMeta);\r\n    history.push(`/app/lineBuses/${rowData[0]}`);\r\n  }\r\n\r\n  const handleRowDelete = () => {\r\n    let rowsToDelete = [];\r\n    datatableData.map((data, idx) => {\r\n      if (rowsSelectedByUser.includes(idx))\r\n        rowsToDelete.push(data[0]);\r\n    })\r\n    instance.post(AppURL.deleteLineBuses, rowsToDelete)\r\n      .then(res => {\r\n        toast.success(res?.msg);\r\n      }).catch(error => {\r\n        toast.error(error?.msg);\r\n        return false;\r\n      });\r\n  }\r\n\r\n  const handleSelectRow = (currentRowsSelected, allRowsSelected, rowsSelected) => {\r\n    setRowsSelected(rowsSelected);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Tables\"\r\n        button={<MUIButton\r\n          variant=\"contained\"\r\n          size=\"medium\"\r\n          color=\"primary\"\r\n          onClick={() => { history.push(`/app/lineBuses/create`) }}\r\n        >\r\n          New\r\n        </MUIButton>} />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          {\r\n            datatableData ? <MUIDataTable\r\n              title=\"LineBus List\"\r\n              data={datatableData}\r\n              columns={[\"Id\", \"First Point\", \"Last Point\", \"Length\", \"Complexity\"]}\r\n              options={{\r\n                filterType: \"checkbox\",\r\n                draggableColumns: true,\r\n                onRowClick: handleRowClick,\r\n                onRowsDelete: handleRowDelete,\r\n                onRowSelectionChange: handleSelectRow\r\n              }}\r\n            /> : <CircularProgress />\r\n          }\r\n\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\Drivers\\index.js",["405"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport * as AppURL from '../../services/urlAPI';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport instance from \"../../services\";\r\n\r\nexport default function Tables() {\r\n  let history = useHistory();\r\n  const [datatableData, setData] = useState(null);\r\n  const [rowsSelectedByUser, setRowsSelected] = useState([]);\r\n  useEffect(() => {\r\n    instance.get(AppURL.getAllDrivers)\r\n      .then(res => {\r\n        console.log(JSON.stringify(res));\r\n        const body = res?.body;\r\n        const data = body.map(driver => {\r\n          let driverData = [];\r\n          driverData.push(driver?.id, driver?.nationalId, driver?.name, driver?.typeLicense, driver?.seniority);\r\n          return driverData;\r\n        })\r\n        setData(data);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }, [])\r\n\r\n  const handleRowClick = (rowData, rowMeta) => {\r\n    console.log('hello', rowData, rowMeta);\r\n    history.push(`/app/drivers/${rowData[0]}`);\r\n  }\r\n\r\n  const handleRowDelete = () => {\r\n    let rowsToDelete = [];\r\n    datatableData.map((data, idx) => {\r\n      if (rowsSelectedByUser.includes(idx))\r\n        rowsToDelete.push(data[0]);\r\n    })\r\n    instance.post(AppURL.deleteDrivers, rowsToDelete)\r\n      .then(res => {\r\n        toast.success(res?.msg);\r\n      }).catch(error => {\r\n        toast.error(error?.msg);\r\n        return false;\r\n      });\r\n  }\r\n\r\n  const handleSelectRow = (currentRowsSelected, allRowsSelected, rowsSelected) => {\r\n    setRowsSelected(rowsSelected);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Tables\"\r\n        button={<MUIButton\r\n          variant=\"contained\"\r\n          size=\"medium\"\r\n          color=\"primary\"\r\n          onClick={() => { history.push(`/app/drivers/create`) }}\r\n        >\r\n          New\r\n        </MUIButton>} />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          {\r\n            datatableData ? <MUIDataTable\r\n              title=\"Driver List\"\r\n              data={datatableData}\r\n              columns={[\"Id\", \"National Id\", \"Name\", \"License\", \"Seniority\"]}\r\n              options={{\r\n                filterType: \"checkbox\",\r\n                draggableColumns: true,\r\n                onRowClick: handleRowClick,\r\n                onRowsDelete: handleRowDelete,\r\n                onRowSelectionChange: handleSelectRow\r\n              }}\r\n            /> : <CircularProgress />\r\n          }\r\n\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\icons\\Icons.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\PageTitle\\PageTitle.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Widget\\Widget.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Wrappers\\Wrappers.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\dashboard\\mock.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Header\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Sidebar\\components\\Dot.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\icons\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Sidebar\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\notifications\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Notification\\Notification.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\dashboard\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\UserAvatar\\UserAvatar.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",["406"],"import React, { useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Inbox as InboxIcon } from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Dot from \"../Dot\";\r\nimport Bus from \"../../../../pages/Bus\";\r\n\r\nexport default function SidebarLink({\r\n  link,\r\n  icon,\r\n  label,\r\n  children,\r\n  location,\r\n  isSidebarOpened,\r\n  nested,\r\n  type,\r\n}) {\r\n  var classes = useStyles();\r\n\r\n  // local\r\n  var [isOpen, setIsOpen] = useState(false);\r\n  var isLinkActive =\r\n    link &&\r\n    (location.pathname === link || location.pathname.indexOf(link) !== -1);\r\n\r\n  if (type === \"title\")\r\n    return (\r\n      <Typography\r\n        className={classnames(classes.linkText, classes.sectionTitle, {\r\n          [classes.linkTextHidden]: !isSidebarOpened,\r\n        })}\r\n      >\r\n        {label}\r\n      </Typography>\r\n    );\r\n\r\n  if (type === \"divider\") return  <Divider className={classes.divider} />;\r\n  if (link && link.includes('http')) {\r\n    return (\r\n      <ListItem\r\n        button\r\n        className={classes.link}\r\n        classes={{\r\n          root: classnames(classes.linkRoot, {\r\n            [classes.linkActive]: isLinkActive && !nested,\r\n            [classes.linkNested]: nested,\r\n          }),\r\n        }}\r\n        disableRipple\r\n      >\r\n        <a className={classes.externalLink} href={link}>\r\n        <ListItemIcon\r\n          className={classnames(classes.linkIcon, {\r\n            [classes.linkIconActive]: isLinkActive,\r\n          })}\r\n        >\r\n          {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          classes={{\r\n            primary: classnames(classes.linkText, {\r\n              [classes.linkTextActive]: isLinkActive,\r\n              [classes.linkTextHidden]: !isSidebarOpened,\r\n            }),\r\n          }}\r\n          primary={label}\r\n        />\r\n        </a>\r\n      </ListItem>\r\n    )\r\n  }\r\n  if (!children)\r\n    return (\r\n      <ListItem\r\n        button\r\n        component={link && Link}\r\n        to={link}\r\n        className={classes.link}\r\n        classes={{\r\n          root: classnames(classes.linkRoot, {\r\n            [classes.linkActive]: isLinkActive && !nested,\r\n            [classes.linkNested]: nested,\r\n          }),\r\n        }}\r\n        disableRipple\r\n      >\r\n        <ListItemIcon\r\n          className={classnames(classes.linkIcon, {\r\n            [classes.linkIconActive]: isLinkActive,\r\n          })}\r\n        >\r\n          {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          classes={{\r\n            primary: classnames(classes.linkText, {\r\n              [classes.linkTextActive]: isLinkActive,\r\n              [classes.linkTextHidden]: !isSidebarOpened,\r\n            }),\r\n          }}\r\n          primary={label}\r\n        />\r\n      </ListItem>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <ListItem\r\n        button\r\n        component={link && Link}\r\n        onClick={toggleCollapse}\r\n        className={classes.link}\r\n        to={link}\r\n        disableRipple\r\n      >\r\n        <ListItemIcon\r\n          className={classnames(classes.linkIcon, {\r\n            [classes.linkIconActive]: isLinkActive,\r\n          })}\r\n        >\r\n          {icon ? icon : <InboxIcon />}\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          classes={{\r\n            primary: classnames(classes.linkText, {\r\n              [classes.linkTextActive]: isLinkActive,\r\n              [classes.linkTextHidden]: !isSidebarOpened,\r\n            }),\r\n          }}\r\n          primary={label}\r\n        />\r\n      </ListItem>\r\n      {children && (\r\n        <Collapse\r\n          in={isOpen && isSidebarOpened}\r\n          timeout=\"auto\"\r\n          unmountOnExit\r\n          className={classes.nestedList}\r\n        >\r\n          <List component=\"div\" disablePadding>\r\n            {children.map(childrenLink => (\r\n              <SidebarLink\r\n                key={childrenLink && childrenLink.link}\r\n                location={location}\r\n                isSidebarOpened={isSidebarOpened}\r\n                classes={classes}\r\n                nested\r\n                {...childrenLink}\r\n              />\r\n            ))}\r\n          </List>\r\n        </Collapse>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  // ###########################################################\r\n\r\n  function toggleCollapse(e) {\r\n    if (isSidebarOpened) {\r\n      e.preventDefault();\r\n      setIsOpen(!isOpen);\r\n    }\r\n  }\r\n}\r\n","G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\charts\\components\\ApexLineChart.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\typography\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\maps\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Widget\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\PageTitle\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Notification\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\UserAvatar\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\StatisticalRevenueBus\\RevenueBusDetail.js",["407","408","409","410","411"],"G:\\Learning\\ltm\\SbTickets_FE\\src\\pages\\StatisticalRevenueBus\\RevenueBus.js",["412","413","414","415","416"],{"ruleId":"417","replacedBy":"418"},{"ruleId":"419","replacedBy":"420"},{"ruleId":"421","severity":1,"message":"422","line":16,"column":17,"nodeType":"423","messageId":"424","endLine":16,"endColumn":28},{"ruleId":"421","severity":1,"message":"425","line":53,"column":8,"nodeType":"423","messageId":"424","endLine":53,"endColumn":13},{"ruleId":"426","severity":1,"message":"427","line":71,"column":6,"nodeType":"428","endLine":71,"endColumn":36,"suggestions":"429"},{"ruleId":"426","severity":1,"message":"427","line":77,"column":6,"nodeType":"428","endLine":77,"endColumn":33,"suggestions":"430"},{"ruleId":"421","severity":1,"message":"431","line":5,"column":10,"nodeType":"423","messageId":"424","endLine":5,"endColumn":20},{"ruleId":"421","severity":1,"message":"432","line":5,"column":22,"nodeType":"423","messageId":"424","endLine":5,"endColumn":28},{"ruleId":"421","severity":1,"message":"433","line":6,"column":22,"nodeType":"423","messageId":"424","endLine":6,"endColumn":32},{"ruleId":"421","severity":1,"message":"434","line":27,"column":11,"nodeType":"423","messageId":"424","endLine":27,"endColumn":19},{"ruleId":"421","severity":1,"message":"435","line":28,"column":11,"nodeType":"423","messageId":"424","endLine":28,"endColumn":22},{"ruleId":"426","severity":1,"message":"436","line":58,"column":6,"nodeType":"428","endLine":58,"endColumn":8,"suggestions":"437"},{"ruleId":"426","severity":1,"message":"438","line":87,"column":6,"nodeType":"428","endLine":87,"endColumn":8,"suggestions":"439"},{"ruleId":"440","severity":1,"message":"441","line":271,"column":62,"nodeType":"442","messageId":"443","endLine":271,"endColumn":69},{"ruleId":"440","severity":1,"message":"441","line":306,"column":57,"nodeType":"442","messageId":"443","endLine":306,"endColumn":64},{"ruleId":"444","severity":1,"message":"445","line":341,"column":23,"nodeType":"446","messageId":"447","endLine":341,"endColumn":37},{"ruleId":"444","severity":1,"message":"445","line":353,"column":23,"nodeType":"446","messageId":"447","endLine":353,"endColumn":37},{"ruleId":"444","severity":1,"message":"445","line":365,"column":23,"nodeType":"446","messageId":"447","endLine":365,"endColumn":37},{"ruleId":"421","severity":1,"message":"433","line":5,"column":22,"nodeType":"423","messageId":"424","endLine":5,"endColumn":32},{"ruleId":"426","severity":1,"message":"438","line":65,"column":6,"nodeType":"428","endLine":65,"endColumn":8,"suggestions":"448"},{"ruleId":"440","severity":1,"message":"441","line":246,"column":62,"nodeType":"442","messageId":"443","endLine":246,"endColumn":69},{"ruleId":"440","severity":1,"message":"441","line":281,"column":57,"nodeType":"442","messageId":"443","endLine":281,"endColumn":64},{"ruleId":"444","severity":1,"message":"445","line":304,"column":23,"nodeType":"446","messageId":"447","endLine":304,"endColumn":37},{"ruleId":"444","severity":1,"message":"445","line":316,"column":23,"nodeType":"446","messageId":"447","endLine":316,"endColumn":37},{"ruleId":"444","severity":1,"message":"445","line":328,"column":23,"nodeType":"446","messageId":"447","endLine":328,"endColumn":37},{"ruleId":"421","severity":1,"message":"449","line":3,"column":3,"nodeType":"423","messageId":"424","endLine":3,"endColumn":8},{"ruleId":"421","severity":1,"message":"450","line":4,"column":3,"nodeType":"423","messageId":"424","endLine":4,"endColumn":11},{"ruleId":"421","severity":1,"message":"451","line":5,"column":3,"nodeType":"423","messageId":"424","endLine":5,"endColumn":12},{"ruleId":"421","severity":1,"message":"452","line":6,"column":3,"nodeType":"423","messageId":"424","endLine":6,"endColumn":12},{"ruleId":"421","severity":1,"message":"453","line":7,"column":3,"nodeType":"423","messageId":"424","endLine":7,"endColumn":12},{"ruleId":"421","severity":1,"message":"454","line":8,"column":3,"nodeType":"423","messageId":"424","endLine":8,"endColumn":7},{"ruleId":"421","severity":1,"message":"455","line":14,"column":3,"nodeType":"423","messageId":"424","endLine":14,"endColumn":12},{"ruleId":"421","severity":1,"message":"433","line":19,"column":22,"nodeType":"423","messageId":"424","endLine":19,"endColumn":32},{"ruleId":"421","severity":1,"message":"456","line":25,"column":10,"nodeType":"423","messageId":"424","endLine":25,"endColumn":33},{"ruleId":"421","severity":1,"message":"457","line":25,"column":35,"nodeType":"423","messageId":"424","endLine":25,"endColumn":45},{"ruleId":"421","severity":1,"message":"458","line":26,"column":8,"nodeType":"423","messageId":"424","endLine":26,"endColumn":20},{"ruleId":"421","severity":1,"message":"459","line":27,"column":10,"nodeType":"423","messageId":"424","endLine":27,"endColumn":15},{"ruleId":"421","severity":1,"message":"460","line":28,"column":7,"nodeType":"423","messageId":"424","endLine":28,"endColumn":13},{"ruleId":"421","severity":1,"message":"461","line":47,"column":9,"nodeType":"423","messageId":"424","endLine":47,"endColumn":16},{"ruleId":"421","severity":1,"message":"462","line":50,"column":22,"nodeType":"423","messageId":"424","endLine":50,"endColumn":35},{"ruleId":"421","severity":1,"message":"463","line":52,"column":10,"nodeType":"423","messageId":"424","endLine":52,"endColumn":18},{"ruleId":"426","severity":1,"message":"464","line":65,"column":6,"nodeType":"428","endLine":65,"endColumn":8,"suggestions":"465"},{"ruleId":"421","severity":1,"message":"466","line":67,"column":9,"nodeType":"423","messageId":"424","endLine":67,"endColumn":13},{"ruleId":"467","severity":1,"message":"468","line":79,"column":34,"nodeType":"469","messageId":"470","endLine":79,"endColumn":36},{"ruleId":"471","severity":1,"message":"472","line":167,"column":25,"nodeType":"473","endLine":170,"endColumn":56},{"ruleId":"421","severity":1,"message":"474","line":1,"column":27,"nodeType":"423","messageId":"424","endLine":1,"endColumn":36},{"ruleId":"421","severity":1,"message":"433","line":5,"column":22,"nodeType":"423","messageId":"424","endLine":5,"endColumn":32},{"ruleId":"444","severity":1,"message":"445","line":95,"column":45,"nodeType":"446","messageId":"447","endLine":95,"endColumn":59},{"ruleId":"444","severity":1,"message":"445","line":106,"column":45,"nodeType":"446","messageId":"447","endLine":106,"endColumn":59},{"ruleId":"444","severity":1,"message":"445","line":117,"column":45,"nodeType":"446","messageId":"447","endLine":117,"endColumn":59},{"ruleId":"444","severity":1,"message":"445","line":128,"column":45,"nodeType":"446","messageId":"447","endLine":128,"endColumn":59},{"ruleId":"444","severity":1,"message":"445","line":141,"column":45,"nodeType":"446","messageId":"447","endLine":141,"endColumn":59},{"ruleId":"444","severity":1,"message":"445","line":152,"column":45,"nodeType":"446","messageId":"447","endLine":152,"endColumn":59},{"ruleId":"421","severity":1,"message":"431","line":5,"column":10,"nodeType":"423","messageId":"424","endLine":5,"endColumn":20},{"ruleId":"421","severity":1,"message":"432","line":5,"column":22,"nodeType":"423","messageId":"424","endLine":5,"endColumn":28},{"ruleId":"421","severity":1,"message":"433","line":6,"column":22,"nodeType":"423","messageId":"424","endLine":6,"endColumn":32},{"ruleId":"426","severity":1,"message":"436","line":48,"column":8,"nodeType":"428","endLine":48,"endColumn":10,"suggestions":"475"},{"ruleId":"444","severity":1,"message":"445","line":113,"column":45,"nodeType":"446","messageId":"447","endLine":113,"endColumn":59},{"ruleId":"444","severity":1,"message":"445","line":125,"column":45,"nodeType":"446","messageId":"447","endLine":125,"endColumn":59},{"ruleId":"444","severity":1,"message":"445","line":137,"column":45,"nodeType":"446","messageId":"447","endLine":137,"endColumn":59},{"ruleId":"444","severity":1,"message":"445","line":149,"column":45,"nodeType":"446","messageId":"447","endLine":149,"endColumn":59},{"ruleId":"444","severity":1,"message":"445","line":163,"column":45,"nodeType":"446","messageId":"447","endLine":163,"endColumn":59},{"ruleId":"444","severity":1,"message":"445","line":175,"column":45,"nodeType":"446","messageId":"447","endLine":175,"endColumn":59},{"ruleId":"421","severity":1,"message":"449","line":3,"column":3,"nodeType":"423","messageId":"424","endLine":3,"endColumn":8},{"ruleId":"421","severity":1,"message":"450","line":4,"column":3,"nodeType":"423","messageId":"424","endLine":4,"endColumn":11},{"ruleId":"421","severity":1,"message":"451","line":5,"column":3,"nodeType":"423","messageId":"424","endLine":5,"endColumn":12},{"ruleId":"421","severity":1,"message":"452","line":6,"column":3,"nodeType":"423","messageId":"424","endLine":6,"endColumn":12},{"ruleId":"421","severity":1,"message":"453","line":7,"column":3,"nodeType":"423","messageId":"424","endLine":7,"endColumn":12},{"ruleId":"421","severity":1,"message":"454","line":8,"column":3,"nodeType":"423","messageId":"424","endLine":8,"endColumn":7},{"ruleId":"421","severity":1,"message":"433","line":19,"column":22,"nodeType":"423","messageId":"424","endLine":19,"endColumn":32},{"ruleId":"421","severity":1,"message":"460","line":27,"column":7,"nodeType":"423","messageId":"424","endLine":27,"endColumn":13},{"ruleId":"421","severity":1,"message":"466","line":65,"column":9,"nodeType":"423","messageId":"424","endLine":65,"endColumn":13},{"ruleId":"421","severity":1,"message":"431","line":5,"column":10,"nodeType":"423","messageId":"424","endLine":5,"endColumn":20},{"ruleId":"421","severity":1,"message":"432","line":5,"column":22,"nodeType":"423","messageId":"424","endLine":5,"endColumn":28},{"ruleId":"421","severity":1,"message":"433","line":6,"column":22,"nodeType":"423","messageId":"424","endLine":6,"endColumn":32},{"ruleId":"426","severity":1,"message":"436","line":49,"column":6,"nodeType":"428","endLine":49,"endColumn":8,"suggestions":"476"},{"ruleId":"471","severity":1,"message":"472","line":112,"column":25,"nodeType":"473","endLine":115,"endColumn":56},{"ruleId":"444","severity":1,"message":"445","line":126,"column":23,"nodeType":"446","messageId":"447","endLine":126,"endColumn":37},{"ruleId":"444","severity":1,"message":"445","line":139,"column":23,"nodeType":"446","messageId":"447","endLine":139,"endColumn":37},{"ruleId":"444","severity":1,"message":"445","line":151,"column":23,"nodeType":"446","messageId":"447","endLine":151,"endColumn":37},{"ruleId":"444","severity":1,"message":"445","line":178,"column":23,"nodeType":"446","messageId":"447","endLine":178,"endColumn":37},{"ruleId":"444","severity":1,"message":"445","line":190,"column":23,"nodeType":"446","messageId":"447","endLine":190,"endColumn":37},{"ruleId":"444","severity":1,"message":"445","line":217,"column":23,"nodeType":"446","messageId":"447","endLine":217,"endColumn":37},{"ruleId":"421","severity":1,"message":"431","line":5,"column":10,"nodeType":"423","messageId":"424","endLine":5,"endColumn":20},{"ruleId":"421","severity":1,"message":"432","line":5,"column":22,"nodeType":"423","messageId":"424","endLine":5,"endColumn":28},{"ruleId":"421","severity":1,"message":"433","line":6,"column":22,"nodeType":"423","messageId":"424","endLine":6,"endColumn":32},{"ruleId":"426","severity":1,"message":"436","line":50,"column":6,"nodeType":"428","endLine":50,"endColumn":8,"suggestions":"477"},{"ruleId":"426","severity":1,"message":"478","line":64,"column":6,"nodeType":"428","endLine":64,"endColumn":8,"suggestions":"479"},{"ruleId":"440","severity":1,"message":"441","line":150,"column":49,"nodeType":"442","messageId":"443","endLine":150,"endColumn":56},{"ruleId":"440","severity":1,"message":"441","line":185,"column":50,"nodeType":"442","messageId":"443","endLine":185,"endColumn":57},{"ruleId":"444","severity":1,"message":"445","line":203,"column":23,"nodeType":"446","messageId":"447","endLine":203,"endColumn":37},{"ruleId":"444","severity":1,"message":"445","line":215,"column":23,"nodeType":"446","messageId":"447","endLine":215,"endColumn":37},{"ruleId":"421","severity":1,"message":"474","line":1,"column":27,"nodeType":"423","messageId":"424","endLine":1,"endColumn":36},{"ruleId":"421","severity":1,"message":"433","line":5,"column":22,"nodeType":"423","messageId":"424","endLine":5,"endColumn":32},{"ruleId":"444","severity":1,"message":"445","line":93,"column":23,"nodeType":"446","messageId":"447","endLine":93,"endColumn":37},{"ruleId":"444","severity":1,"message":"445","line":104,"column":23,"nodeType":"446","messageId":"447","endLine":104,"endColumn":37},{"ruleId":"444","severity":1,"message":"445","line":115,"column":23,"nodeType":"446","messageId":"447","endLine":115,"endColumn":37},{"ruleId":"444","severity":1,"message":"445","line":126,"column":23,"nodeType":"446","messageId":"447","endLine":126,"endColumn":37},{"ruleId":"444","severity":1,"message":"445","line":139,"column":23,"nodeType":"446","messageId":"447","endLine":139,"endColumn":37},{"ruleId":"421","severity":1,"message":"433","line":5,"column":22,"nodeType":"423","messageId":"424","endLine":5,"endColumn":32},{"ruleId":"440","severity":1,"message":"441","line":124,"column":49,"nodeType":"442","messageId":"443","endLine":124,"endColumn":56},{"ruleId":"440","severity":1,"message":"441","line":158,"column":50,"nodeType":"442","messageId":"443","endLine":158,"endColumn":57},{"ruleId":"421","severity":1,"message":"480","line":9,"column":3,"nodeType":"423","messageId":"424","endLine":9,"endColumn":6},{"ruleId":"421","severity":1,"message":"481","line":10,"column":3,"nodeType":"423","messageId":"424","endLine":10,"endColumn":11},{"ruleId":"421","severity":1,"message":"482","line":24,"column":10,"nodeType":"423","messageId":"424","endLine":24,"endColumn":13},{"ruleId":"421","severity":1,"message":"483","line":50,"column":7,"nodeType":"423","messageId":"424","endLine":50,"endColumn":19},{"ruleId":"440","severity":1,"message":"484","line":91,"column":31,"nodeType":"485","messageId":"486","endLine":91,"endColumn":33},{"ruleId":"421","severity":1,"message":"487","line":104,"column":8,"nodeType":"423","messageId":"424","endLine":104,"endColumn":19},{"ruleId":"421","severity":1,"message":"488","line":104,"column":21,"nodeType":"423","messageId":"424","endLine":104,"endColumn":37},{"ruleId":"421","severity":1,"message":"489","line":187,"column":10,"nodeType":"423","messageId":"424","endLine":187,"endColumn":27},{"ruleId":"421","severity":1,"message":"490","line":9,"column":21,"nodeType":"423","messageId":"424","endLine":9,"endColumn":32},{"ruleId":"421","severity":1,"message":"491","line":10,"column":19,"nodeType":"423","messageId":"424","endLine":10,"endColumn":30},{"ruleId":"421","severity":1,"message":"492","line":11,"column":18,"nodeType":"423","messageId":"424","endLine":11,"endColumn":25},{"ruleId":"421","severity":1,"message":"493","line":27,"column":8,"nodeType":"423","messageId":"424","endLine":27,"endColumn":11},{"ruleId":"440","severity":1,"message":"441","line":38,"column":35,"nodeType":"485","messageId":"486","endLine":38,"endColumn":37},{"ruleId":"421","severity":1,"message":"494","line":10,"column":3,"nodeType":"423","messageId":"424","endLine":10,"endColumn":7},{"ruleId":"421","severity":1,"message":"432","line":27,"column":29,"nodeType":"423","messageId":"424","endLine":27,"endColumn":35},{"ruleId":"467","severity":1,"message":"468","line":22,"column":72,"nodeType":"469","messageId":"470","endLine":22,"endColumn":74},{"ruleId":"467","severity":1,"message":"468","line":22,"column":103,"nodeType":"469","messageId":"470","endLine":22,"endColumn":105},{"ruleId":"467","severity":1,"message":"468","line":23,"column":77,"nodeType":"469","messageId":"470","endLine":23,"endColumn":79},{"ruleId":"467","severity":1,"message":"468","line":23,"column":108,"nodeType":"469","messageId":"470","endLine":23,"endColumn":110},{"ruleId":"440","severity":1,"message":"441","line":52,"column":35,"nodeType":"485","messageId":"486","endLine":52,"endColumn":37},{"ruleId":"440","severity":1,"message":"441","line":40,"column":35,"nodeType":"485","messageId":"486","endLine":40,"endColumn":37},{"ruleId":"440","severity":1,"message":"441","line":39,"column":35,"nodeType":"485","messageId":"486","endLine":39,"endColumn":37},{"ruleId":"421","severity":1,"message":"495","line":20,"column":8,"nodeType":"423","messageId":"424","endLine":20,"endColumn":11},{"ruleId":"421","severity":1,"message":"474","line":1,"column":17,"nodeType":"423","messageId":"424","endLine":1,"endColumn":26},{"ruleId":"421","severity":1,"message":"433","line":7,"column":22,"nodeType":"423","messageId":"424","endLine":7,"endColumn":32},{"ruleId":"421","severity":1,"message":"460","line":16,"column":7,"nodeType":"423","messageId":"424","endLine":16,"endColumn":13},{"ruleId":"421","severity":1,"message":"496","line":23,"column":7,"nodeType":"423","messageId":"424","endLine":23,"endColumn":16},{"ruleId":"421","severity":1,"message":"466","line":37,"column":11,"nodeType":"423","messageId":"424","endLine":37,"endColumn":15},{"ruleId":"421","severity":1,"message":"474","line":1,"column":17,"nodeType":"423","messageId":"424","endLine":1,"endColumn":26},{"ruleId":"421","severity":1,"message":"433","line":7,"column":22,"nodeType":"423","messageId":"424","endLine":7,"endColumn":32},{"ruleId":"421","severity":1,"message":"460","line":14,"column":7,"nodeType":"423","messageId":"424","endLine":14,"endColumn":13},{"ruleId":"421","severity":1,"message":"496","line":21,"column":7,"nodeType":"423","messageId":"424","endLine":21,"endColumn":16},{"ruleId":"421","severity":1,"message":"466","line":34,"column":11,"nodeType":"423","messageId":"424","endLine":34,"endColumn":15},"no-native-reassign",["497"],"no-negated-in-lhs",["498"],"no-unused-vars","'TwitterIcon' is defined but never used.","Identifier","unusedVar","'index' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'layoutState.message'. Either include it or remove the dependency array.","ArrayExpression",["499"],["500"],"'Typography' is defined but never used.","'Button' is defined but never used.","'withStyles' is defined but never used.","'driverId' is assigned a value but never used.","'assitanceId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["501"],"React Hook useEffect has missing dependencies: 'selectedDriver' and 'selectedassitDriver'. Either include them or remove the dependency array.",["502"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",["503"],"'Table' is defined but never used.","'TableRow' is defined but never used.","'TableHead' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'Chip' is defined but never used.","'TextField' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'DatePicker' is defined but never used.","'DateFnsUtils' is defined but never used.","'Image' is defined but never used.","'states' is assigned a value but never used.","'classes' is assigned a value but never used.","'settimePicker' is assigned a value but never used.","'sumwages' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'listTripBus'. Either include it or remove the dependency array.",["504"],"'data' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.",["505"],["506"],["507"],"React Hook useEffect has missing dependencies: 'firstId' and 'lastId'. Either include them or remove the dependency array.",["508"],"'Pie' is defined but never used.","'PieChart' is defined but never used.","'set' is defined but never used.","'pieChartData' is assigned a value but never used.","Array.prototype.find() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'activeIndex' is assigned a value but never used.","'setActiveIndexId' is assigned a value but never used.","'renderActiveShape' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'Dot' is defined but never used.","'Link' is defined but never used.","'Bus' is defined but never used.","'useStyles' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"509","fix":"510"},{"desc":"511","fix":"512"},{"desc":"513","fix":"514"},{"desc":"515","fix":"516"},{"desc":"515","fix":"517"},{"desc":"518","fix":"519"},{"desc":"513","fix":"520"},{"desc":"513","fix":"521"},{"desc":"513","fix":"522"},{"desc":"523","fix":"524"},"Update the dependencies array to be: [layoutState.message, layoutState.showToastSuccess]",{"range":"525","text":"526"},"Update the dependencies array to be: [layoutState.message, layoutState.showToastFail]",{"range":"527","text":"528"},"Update the dependencies array to be: [id]",{"range":"529","text":"530"},"Update the dependencies array to be: [selectedDriver, selectedassitDriver]",{"range":"531","text":"532"},{"range":"533","text":"532"},"Update the dependencies array to be: [listTripBus]",{"range":"534","text":"535"},{"range":"536","text":"530"},{"range":"537","text":"530"},{"range":"538","text":"530"},"Update the dependencies array to be: [firstId, lastId]",{"range":"539","text":"540"},[2361,2391],"[layoutState.message, layoutState.showToastSuccess]",[2509,2536],"[layoutState.message, layoutState.showToastFail]",[2208,2210],"[id]",[2893,2895],"[selectedDriver, selectedassitDriver]",[1947,1949],[1866,1868],"[listTripBus]",[1864,1866],[1636,1638],[1743,1745],[2046,2048],"[firstId, lastId]"]