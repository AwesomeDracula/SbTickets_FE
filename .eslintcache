[{"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/index.js":"1","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/serviceWorker.js":"2","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/context/UserContext.js":"3","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/App.js":"4","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/context/LayoutContext.js":"5","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/themes/index.js":"6","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/services/urlAPI.js":"7","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Layout/Layout.js":"8","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/themes/default.js":"9","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/services/index.js":"10","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/error/Error.js":"11","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/login/Login.js":"12","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/login/styles.js":"13","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/error/styles.js":"14","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Layout/styles.js":"15","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/Bus/BusDetail.js":"16","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/Drivers/DriverDetail.js":"17","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/Drivers/NewDriver.js":"18","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/TripBus/TripBusDetail.js":"19","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/Bus/NewBus.js":"20","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/TripBus/TripBus.js":"21","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/LineBuses/NewLineBus.js":"22","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/LineBuses/LineBusDetail.js":"23","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/tables/Tables.js":"24","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Sidebar/Sidebar.js":"25","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/notifications/Notifications.js":"26","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Header/Header.js":"27","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/maps/Maps.js":"28","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/typography/Typography.js":"29","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/LineBuses/index.js":"30","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/dashboard/Dashboard.js":"31","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/Drivers/index.js":"32","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/TripBus/index.js":"33","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/charts/Charts.js":"34","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/icons/Icons.js":"35","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/Bus/index.js":"36","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Widget/Widget.js":"37","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Wrappers/Wrappers.js":"38","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/PageTitle/PageTitle.js":"39","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/dashboard/mock.js":"40","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Sidebar/styles.js":"41","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/notifications/styles.js":"42","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Header/styles.js":"43","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/maps/styles.js":"44","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/typography/styles.js":"45","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/dashboard/styles.js":"46","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/icons/styles.js":"47","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Sidebar/components/Dot.js":"48","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"49","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/charts/components/ApexLineChart.js":"50","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/charts/components/ApexHeatmap.js":"51","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/dashboard/components/Table/Table.js":"52","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/dashboard/components/BigStat/BigStat.js":"53","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Notification/Notification.js":"54","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/UserAvatar/UserAvatar.js":"55","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Widget/styles.js":"56","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/PageTitle/styles.js":"57","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Sidebar/components/SidebarLink/styles.js":"58","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/dashboard/components/BigStat/styles.js":"59","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Notification/styles.js":"60","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/UserAvatar/styles.js":"61"},{"size":869,"mtime":1636217347918,"results":"62","hashOfConfig":"63"},{"size":4948,"mtime":1636217347921,"results":"64","hashOfConfig":"63"},{"size":2838,"mtime":1638369577516,"results":"65","hashOfConfig":"63"},{"size":1711,"mtime":1636217347915,"results":"66","hashOfConfig":"63"},{"size":1911,"mtime":1636813552582,"results":"67","hashOfConfig":"63"},{"size":502,"mtime":1636217347921,"results":"68","hashOfConfig":"63"},{"size":1200,"mtime":1638371661970,"results":"69","hashOfConfig":"63"},{"size":5712,"mtime":1638370255622,"results":"70","hashOfConfig":"63"},{"size":2987,"mtime":1636217347921,"results":"71","hashOfConfig":"63"},{"size":779,"mtime":1638369577521,"results":"72","hashOfConfig":"63"},{"size":1571,"mtime":1636217347919,"results":"73","hashOfConfig":"63"},{"size":4785,"mtime":1636777497806,"results":"74","hashOfConfig":"63"},{"size":3395,"mtime":1636774407529,"results":"75","hashOfConfig":"63"},{"size":1334,"mtime":1636217347919,"results":"76","hashOfConfig":"63"},{"size":680,"mtime":1636217347915,"results":"77","hashOfConfig":"63"},{"size":9395,"mtime":1638369581983,"results":"78","hashOfConfig":"63"},{"size":7865,"mtime":1638370005244,"results":"79","hashOfConfig":"63"},{"size":5554,"mtime":1638369577517,"results":"80","hashOfConfig":"63"},{"size":13549,"mtime":1638370350023,"results":"81","hashOfConfig":"63"},{"size":8062,"mtime":1638369581983,"results":"82","hashOfConfig":"63"},{"size":12017,"mtime":1638371567476,"results":"83","hashOfConfig":"63"},{"size":3997,"mtime":1638369907069,"results":"84","hashOfConfig":"63"},{"size":4917,"mtime":1638369907069,"results":"85","hashOfConfig":"63"},{"size":2082,"mtime":1636217347921,"results":"86","hashOfConfig":"63"},{"size":3922,"mtime":1638370069650,"results":"87","hashOfConfig":"63"},{"size":14102,"mtime":1636769541508,"results":"88","hashOfConfig":"63"},{"size":9930,"mtime":1636692966481,"results":"89","hashOfConfig":"63"},{"size":971,"mtime":1636217347920,"results":"90","hashOfConfig":"63"},{"size":4506,"mtime":1636217347921,"results":"91","hashOfConfig":"63"},{"size":2620,"mtime":1638370399619,"results":"92","hashOfConfig":"63"},{"size":15659,"mtime":1636217347918,"results":"93","hashOfConfig":"63"},{"size":2639,"mtime":1638369577517,"results":"94","hashOfConfig":"63"},{"size":3437,"mtime":1638369577519,"results":"95","hashOfConfig":"63"},{"size":5556,"mtime":1636217347918,"results":"96","hashOfConfig":"63"},{"size":377833,"mtime":1636217347919,"results":"97","hashOfConfig":"63"},{"size":2612,"mtime":1638369581983,"results":"98","hashOfConfig":"63"},{"size":2485,"mtime":1636217347917,"results":"99","hashOfConfig":"63"},{"size":3790,"mtime":1636217347917,"results":"100","hashOfConfig":"63"},{"size":565,"mtime":1636809361626,"results":"101","hashOfConfig":"63"},{"size":4105,"mtime":1636217347918,"results":"102","hashOfConfig":"63"},{"size":1304,"mtime":1636217347917,"results":"103","hashOfConfig":"63"},{"size":1858,"mtime":1636217347920,"results":"104","hashOfConfig":"63"},{"size":3868,"mtime":1636217347915,"results":"105","hashOfConfig":"63"},{"size":171,"mtime":1636217347920,"results":"106","hashOfConfig":"63"},{"size":374,"mtime":1636217347921,"results":"107","hashOfConfig":"63"},{"size":2870,"mtime":1636217347919,"results":"108","hashOfConfig":"63"},{"size":780,"mtime":1636217347919,"results":"109","hashOfConfig":"63"},{"size":862,"mtime":1636217347916,"results":"110","hashOfConfig":"63"},{"size":4453,"mtime":1638369577516,"results":"111","hashOfConfig":"63"},{"size":1328,"mtime":1636217347918,"results":"112","hashOfConfig":"63"},{"size":1794,"mtime":1636217347918,"results":"113","hashOfConfig":"63"},{"size":1274,"mtime":1636217347918,"results":"114","hashOfConfig":"63"},{"size":4039,"mtime":1636217347918,"results":"115","hashOfConfig":"63"},{"size":3296,"mtime":1636217347915,"results":"116","hashOfConfig":"63"},{"size":593,"mtime":1636217347917,"results":"117","hashOfConfig":"63"},{"size":969,"mtime":1636217347917,"results":"118","hashOfConfig":"63"},{"size":506,"mtime":1636809257858,"results":"119","hashOfConfig":"63"},{"size":1412,"mtime":1636217347916,"results":"120","hashOfConfig":"63"},{"size":1027,"mtime":1636217347918,"results":"121","hashOfConfig":"63"},{"size":993,"mtime":1636217347916,"results":"122","hashOfConfig":"63"},{"size":276,"mtime":1636217347917,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16kxe1",{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/index.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/serviceWorker.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/context/UserContext.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/App.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/context/LayoutContext.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/themes/index.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/services/urlAPI.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Layout/Layout.js",["262","263","264"],"import React, { useEffect } from \"react\";\nimport {\n  Route,\n  Switch,\n  Redirect,\n  withRouter,\n} from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { Box, IconButton, Link } from '@material-ui/core';\nimport Icon from '@mdi/react';\nimport { ToastContainer, toast } from \"react-toastify\";\n\n//icons\nimport {\n  mdiFacebook as FacebookIcon,\n  mdiTwitter as TwitterIcon,\n  mdiGithub as GithubIcon,\n} from '@mdi/js'\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Header from \"../Header\";\nimport Sidebar from \"../Sidebar\";\n\n// pages\nimport Dashboard from \"../../pages/dashboard\";\nimport Typography from \"../../pages/typography\";\nimport Notifications from \"../../pages/notifications\";\nimport Maps from \"../../pages/maps\";\nimport Tables from \"../../pages/tables\";\nimport Icons from \"../../pages/icons\";\nimport Charts from \"../../pages/charts\";\nimport Drivers from \"../../pages/Drivers\";\nimport Bus from \"../../pages/Bus\";\n\nimport LineBuses from \"../../pages/LineBuses\";\n// context\nimport { useLayoutState } from \"../../context/LayoutContext\";\nimport DriverDetail from \"../../pages/Drivers/DriverDetail\";\nimport NewDriver from \"../../pages/Drivers/NewDriver\";\nimport BusDetail from \"../../pages/Bus/BusDetail\";\nimport NewBus from \"../../pages/Bus/NewBus\";\nimport TripBus from \"../../pages/TripBus\";\nimport TripBusDetail from \"../../pages/TripBus/TripBusDetail\";\nimport TripBusNew from \"../../pages/TripBus/TripBus\";\n\nimport LineBusDetail from \"../../pages/LineBuses/LineBusDetail\";\nimport NewLineBus from \"../../pages/LineBuses/NewLineBus\";\n\nfunction Layout(props) {\n  var classes = useStyles();\n\n  // global\n  var layoutState = useLayoutState();\n\n  const notifyError = (message) => toast.error(message);\n\n  const notifySuccess = (message) => toast.success(message);\n\n  useEffect(() => {\n    if (layoutState.showToastSuccess) {\n      notifySuccess(layoutState.message);\n    }\n  }, [layoutState.showToastSuccess]);\n\n  useEffect(() => {\n    if (layoutState.showToastFail) {\n      notifyError(layoutState.message);\n    }\n  }, [layoutState.showToastFail]);\n\n  return (\n    <div className={classes.root}>\n      <>\n        <ToastContainer />\n        <Header history={props.history} />\n        <Sidebar />\n        <div\n          className={classnames(classes.content, {\n            [classes.contentShift]: layoutState.isSidebarOpened,\n          })}\n        >\n          <div className={classes.fakeToolbar} />\n          <Switch>\n            <Route path=\"/app/dashboard\" component={Dashboard} />\n            <Route path=\"/app/typography\" component={Typography} />\n            <Route path=\"/app/tables\" component={Tables} />\n            <Route path=\"/app/notifications\" component={Notifications} />\n            <Route\n              exact\n              path=\"/app/ui\"\n              render={() => <Redirect to=\"/app/ui/icons\" />}\n            />\n            <Route exact path=\"/app/drivers\" component={Drivers} />\n            <Route exact path=\"/app/drivers/create\" component={NewDriver} />\n            <Route exact path=\"/app/drivers/:id\" component={DriverDetail} />\n            <Route exact path=\"/app/buses\" component={Bus} />\n            <Route exact path=\"/app/buses/create\" component={NewBus} />\n            <Route exact path=\"/app/buses/:id\" component={BusDetail} />\n            <Route exact path=\"/app/tripbus\" component={TripBus} />\n            <Route exact path=\"/app/tripbus/create\" component={TripBusNew} />\n            <Route exact path=\"/app/tripbus/:id\" component={TripBusDetail} />\n            <Route exact path=\"/app/lineBuses\" component={LineBuses} />\n            <Route exact path=\"/app/lineBuses/create\" component={NewLineBus} />\n            <Route exact path=\"/app/lineBuses/:id\" component={LineBusDetail} />\n            <Route path=\"/app/ui/maps\" component={Maps} />\n            <Route path=\"/app/ui/icons\" component={Icons} />\n            <Route path=\"/app/ui/charts\" component={Charts} />\n          \n          </Switch>\n          <Box\n            mt={5}\n            width={\"100%\"}\n            display={\"flex\"}\n            alignItems={\"center\"}\n            justifyContent=\"space-between\"\n          >\n            <div>\n              <Link\n                color={'primary'}\n                href={'https://github.com/AwesomeDracula/SbTickets_BE'}\n                target={'_blank'}\n                className={classes.link}\n              >\n                Project Backend\n              </Link>\n              <Link\n                color={'primary'}\n                href={'https://github.com/AwesomeDracula/SbTickets_FE'}\n                target={'_blank'}\n                className={classes.link}\n              >\n                Project Frontend\n              </Link>\n            </div>\n            <div>\n              <Link\n                href={'https://www.facebook.com/groups/371157724565461'}\n                target={'_blank'}\n              >\n                <IconButton aria-label=\"facebook\">\n                  <Icon\n                    path={FacebookIcon}\n                    size={1}\n                    color=\"#6E6E6E99\"\n                  />\n                </IconButton>\n              </Link>\n              <Link\n                href={'https://github.com/AwesomeDracula/'}\n                target={'_blank'}\n              >\n                <IconButton\n                  aria-label=\"github\"\n                  style={{ marginRight: -12 }}\n                >\n                  <Icon\n                    path={GithubIcon}\n                    size={1}\n                    color=\"#6E6E6E99\"\n                  />\n                </IconButton>\n              </Link>\n            </div>\n          </Box>\n        </div>\n      </>\n    </div>\n  );\n}\n\nexport default withRouter(Layout);\n","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/themes/default.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/services/index.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/error/Error.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/login/Login.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/login/styles.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/error/styles.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Layout/styles.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/Bus/BusDetail.js",["265","266","267","268","269","270","271","272","273","274"],"import React, { useState, useEffect } from 'react';\nimport { Grid, TextField, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport instance from '../../services';\nimport { useParams } from 'react-router-dom';\nimport * as AppURL from '../../services/urlAPI';\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nconst useStyles = makeStyles((theme) => ({\n    input: {\n        width: '80%',\n        fontSize: '14px !important',\n        marginBottom: '30px'\n    },\n}));\n\nfunction BusDetail() {\n    let history = useHistory();\n    const classes = useStyles();\n    const { id } = useParams();\n    const [formValues, setFormValues] = useState(null);\n    const [isEditing, setIsEditing] = useState(false);\n\n    useEffect(() => {\n        let url = AppURL.getBus + '/' + id;\n        instance.get(url)\n            .then(res => {\n                if (res?.status === 200) {\n                    const body = res?.body;\n                    let data = {\n                        carNumber: body?.carNumber,\n                        color: body?.color,\n                        manufacturer: body?.manufacturer,\n                        lifeCar: body?.lifeCar,\n                        numberSeats: body?.numberSeats,\n                        yearUse: body?.yearUse,\n                        dateMantain: body?.dateMantain,\n                    };\n                    setFormValues(data);\n                }\n\n            })\n    }, []);\n\n    const handleEditButton = () => {\n        if (isEditing) {\n            let url = AppURL.updateBus + '/' + id;\n            instance.put(url, {\n                ...formValues,\n                carNumber: parseInt(formValues.carNumber),\n                numberSeats: parseInt(formValues.numberSeats),\n                yearUse: parseInt(formValues.yearUse),\n                dateMantain: '2022-01-01'\n            }).then(res => {\n                toast.success(res?.msg);\n                history.goBack();\n            }).catch(error => {\n                toast.error(error?.msg);\n            })\n        }\n        setIsEditing(!isEditing);\n    }\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setFormValues({\n            ...formValues,\n            [name]: value,\n        });\n    };\n\n    return (\n        <>\n            {\n                formValues ? <>\n                    <PageTitle\n                        title=\"Bus Details\"\n                        buttonBack={<MUIButton\n                            variant=\"contained\"\n                            size=\"medium\"\n                            color=\"secondary\"\n                            onClick={() => history.goBack()}\n                        >\n                            Back\n                        </MUIButton>}\n                        button={<MUIButton\n                            variant=\"contained\"\n                            size=\"medium\"\n                            color=\"primary\"\n                            onClick={handleEditButton}\n                        >\n                            {isEditing ? 'Save' : 'Edit'}\n                        </MUIButton>} />\n                    <Grid container spacing={4}>\n                        <Grid item xs={12}>\n                            <Widget disableWidgetMenu>\n                                <Grid container item xs={12}>\n                                    <Grid item xs={6}>\n                                        <TextField\n                                            id=\"carNumber\"\n                                            name=\"carNumber\"\n                                            label=\"Car Number\"\n                                            type=\"text\"\n                                            className={classes.input}\n                                            value={formValues?.carNumber}\n                                            onChange={handleInputChange}\n                                            type=\"variant\"\n                                            variant=\"outlined\"\n                                            disabled={!isEditing}\n                                        />\n                                        <TextField\n                                            id=\"color\"\n                                            name=\"color\"\n                                            label=\"Color\"\n                                            type=\"text\"\n                                            className={classes.input}\n                                            value={formValues?.color}\n                                            onChange={handleInputChange}\n                                            type=\"variant\"\n                                            variant=\"outlined\"\n                                            disabled={!isEditing}\n                                        />\n                                        <TextField\n                                            id=\"manufacturer\"\n                                            name=\"manufacturer\"\n                                            label=\"Manufacturer\"\n                                            type=\"text\"\n                                            className={classes.input}\n                                            value={formValues?.manufacturer}\n                                            onChange={handleInputChange}\n                                            type=\"variant\"\n                                            variant=\"outlined\"\n                                            disabled={!isEditing}\n                                        />\n                                        <TextField\n                                            id=\"lifeCar\"\n                                            name=\"lifeCar\"\n                                            label=\"Life Car\"\n                                            type=\"text\"\n                                            className={classes.input}\n                                            value={formValues?.lifeCar}\n                                            onChange={handleInputChange}\n                                            type=\"variant\"\n                                            variant=\"outlined\"\n                                            disabled={!isEditing}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <TextField\n                                            id=\"numberSeats\"\n                                            name=\"numberSeats\"\n                                            label=\"Number Seats\"\n                                            type=\"text\"\n                                            className={classes.input}\n                                            value={formValues?.numberSeats}\n                                            onChange={handleInputChange}\n                                            type=\"variant\"\n                                            variant=\"outlined\"\n                                            disabled={!isEditing}\n                                        />\n                                        <TextField\n                                            id=\"yearUse\"\n                                            name=\"yearUse\"\n                                            label=\"Year Use\"\n                                            type=\"text\"\n                                            className={classes.input}\n                                            value={formValues?.yearUse}\n                                            onChange={handleInputChange}\n                                            type=\"variant\"\n                                            variant=\"outlined\"\n                                            disabled={!isEditing}\n                                        />\n                                        <TextField\n                                            id=\"dateMantain\"\n                                            label=\"Date Maintain\"\n                                            type=\"date\"\n                                            value={new Date(new Date(formValues?.dateMantain).getTime() - new Date(formValues?.dateMantain).getTimezoneOffset() * 60 * 1000)}\n                                            sx={{ width: 220 }}\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                            name=\"dateMantain\"\n                                            className={classes.input}\n                                            variant=\"outlined\"\n                                            disabled={!isEditing}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Widget>\n                        </Grid>\n                    </Grid>\n                </> : <CircularProgress />\n            }\n\n        </>\n    )\n}\n\nexport default BusDetail\n","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/Drivers/DriverDetail.js",["275","276","277","278","279","280","281","282","283","284","285"],"import React, { useState, useEffect } from 'react';\nimport { Grid, TextField, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport instance from '../../services';\nimport { useParams } from 'react-router-dom';\nimport * as AppURL from '../../services/urlAPI';\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    width: '80%',\n    fontSize: '14px !important',\n    marginBottom: '30px'\n  },\n}));\n\nfunction DriverDetail() {\n  let history = useHistory();\n  const classes = useStyles();\n  const { id } = useParams();\n  const [formValues, setFormValues] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n\n  useEffect(() => {\n    let url = AppURL.getDriver + '/' + id;\n    instance.get(url)\n      .then(res => {\n        if (res?.status === 200) {\n          const body = res?.body;\n          let data = {\n            nationalId: body?.nationalId,\n            name: body?.name,\n            codeLicense: body?.codeLicense,\n            typeLicense: body?.typeLicense,\n            address: body?.address,\n            dob: body?.dob,\n            seniority: body?.seniority,\n            image: body?.image,\n          };\n          setFormValues(data);\n          setImageDriver(data.image);\n        }\n\n      })\n  }, []);\n\n  const handleEditButton = () => {\n    if (isEditing) {\n      let url = AppURL.updateDriver + '/' + id;\n      instance.put(url, {\n        ...formValues,\n        seniority: parseInt(formValues.seniority),\n        salaryId: 1,\n        dob: '2000-01-01',\n        image: imageDrvier\n      }).then(res => {\n        toast.success(res?.msg);\n        history.goBack();\n      }).catch(error => {\n        toast.error(error?.msg);\n      })\n    }\n    setIsEditing(!isEditing);\n  }\n\n  const handleInputChange = (e) => {\n    // console.log(e.target.files[0].name);\n    if(e.target.name === 'image'){\n      setImageDriver(\"../\" + e.target.files[0].name);\n    }\n    const { name, value }  = e.target;\n    setFormValues({\n      ...formValues,\n      [name]: value,\n    });\n  };\n\n  const [imageDrvier, setImageDriver] = useState(\"\");\n\n  return (\n    <>\n      {\n        formValues ? <>\n          <PageTitle\n            title=\"Driver Details\"\n            buttonBack={<MUIButton\n              variant=\"contained\"\n              size=\"medium\"\n              color=\"secondary\"\n              onClick={() => history.goBack()}\n            >\n              Back\n            </MUIButton>}\n            button={<MUIButton\n              variant=\"contained\"\n              size=\"medium\"\n              color=\"primary\"\n              onClick={handleEditButton}\n            >\n              {isEditing ? 'Save' : 'Edit'}\n            </MUIButton>} />\n          <Grid container spacing={4}>\n            <Grid item xs={12}>\n              <Widget disableWidgetMenu>\n                <Grid container item xs={12}>\n                  <Grid item xs={6}>\n                      <div className=\"MuiFormControl-root MuiTextField-root makeStyles-input-60\">\n                        <img src={imageDrvier}\n                            variant=\"outlined\"\n                            id=\"image\" \n                            width=\"200\" height=\"120\" />\n                        <input type=\"file\"  onChange={handleInputChange} disabled={!isEditing} name=\"image\"/>\n                      </div>\n                    <TextField\n                      id=\"nationalId\"\n                      name=\"nationalId\"\n                      label=\"National ID\"\n                      type=\"text\"\n                      className={classes.input}\n                      value={formValues?.nationalId}\n                      onChange={handleInputChange}\n                      type=\"variant\"\n                      variant=\"outlined\"\n                      disabled={!isEditing}\n                    />\n                    <TextField\n                      id=\"name\"\n                      name=\"name\"\n                      label=\"Name\"\n                      type=\"text\"\n                      className={classes.input}\n                      value={formValues?.name}\n                      onChange={handleInputChange}\n                      type=\"variant\"\n                      variant=\"outlined\"\n                      disabled={!isEditing}\n                    />\n                    <TextField\n                      id=\"codeLicense\"\n                      name=\"codeLicense\"\n                      label=\"Code License\"\n                      type=\"text\"\n                      className={classes.input}\n                      value={formValues?.codeLicense}\n                      onChange={handleInputChange}\n                      type=\"variant\"\n                      variant=\"outlined\"\n                      disabled={!isEditing}\n                    />\n                    {/* <TextField\n                      id=\"typeLicense\"\n                      name=\"typeLicense\"\n                      label=\"Type License\"\n                      type=\"text\"\n                      className={classes.input}\n                      value={formValues.typeLicense}\n                      onChange={handleInputChange}\n                      type=\"variant\"\n                      variant=\"outlined\"\n                      disabled={!isEditing}\n                    /> */}\n                    \n                  </Grid>\n                  <Grid item xs={6}>\n                  <TextField\n                      id=\"typeLicense\"\n                      name=\"typeLicense\"\n                      label=\"Type License\"\n                      type=\"text\"\n                      className={classes.input}\n                      value={formValues.typeLicense}\n                      onChange={handleInputChange}\n                      type=\"variant\"\n                      variant=\"outlined\"\n                      disabled={!isEditing}\n                    />\n                    <TextField\n                      id=\"address\"\n                      name=\"address\"\n                      label=\"Address\"\n                      type=\"text\"\n                      className={classes.input}\n                      value={formValues?.address}\n                      onChange={handleInputChange}\n                      type=\"variant\"\n                      variant=\"outlined\"\n                      disabled={!isEditing}\n                    />\n                    <TextField\n                      id=\"dob\"\n                      label=\"Date of Birth\"\n                      type=\"date\"\n                      value={new Date(new Date(formValues?.dob).getTime() - new Date(formValues?.dob).getTimezoneOffset() * 60 * 1000)}\n                      sx={{ width: 220 }}\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      name=\"dob\"\n                      className={classes.input}\n                      variant=\"outlined\"\n                      disabled={!isEditing}\n                    />\n                    <TextField\n                      id=\"seniority\"\n                      name=\"seniority\"\n                      label=\"Seniority\"\n                      type=\"text\"\n                      className={classes.input}\n                      value={formValues?.seniority}\n                      onChange={handleInputChange}\n                      type=\"variant\"\n                      variant=\"outlined\"\n                      disabled={!isEditing}\n                    />\n                  </Grid>\n                </Grid>\n              </Widget>\n            </Grid>\n          </Grid>\n        </> : <CircularProgress />\n      }\n\n    </>\n  )\n}\n\nexport default DriverDetail\n","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/Drivers/NewDriver.js",["286","287","288","289","290","291","292"],"import React, { useState, useEffect } from 'react';\nimport { Grid, TextField, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport instance from '../../services';\nimport * as AppURL from '../../services/urlAPI';\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    width: '80%',\n    fontSize: '14px !important',\n    marginBottom: '30px'\n  },\n}));\n\nconst data = {\n  nationalId: \"\",\n  name: \"\",\n  codeLicense: \"\",\n  typeLicense: \"\",\n  address: \"\",\n  dob: \"2000-01-01\",\n  seniority: 0,\n  image: \"body?.image\",\n};\n\nfunction NewDriver() {\n  let history = useHistory();\n  const classes = useStyles();\n  const [formValues, setFormValues] = useState(data);\n\n  const handleSaveButton = () => {\n    instance.post(AppURL.createDriver, {\n      ...formValues,\n      seniority: parseInt(formValues.seniority),\n    })\n      .then(res => {\n        toast.success(res?.msg);\n        history.goBack();\n      })\n      .catch(error => {\n        toast.error(error?.msg);\n      })\n  }\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues({\n      ...formValues,\n      [name]: value,\n    });\n  };\n\n  return (\n    <>\n      {\n        formValues ? <>\n          <PageTitle\n            title=\"Driver Details\"\n            buttonBack={<MUIButton\n              variant=\"contained\"\n              size=\"medium\"\n              color=\"secondary\"\n              onClick={() => history.goBack()}\n            >\n              Back\n            </MUIButton>}\n            button={<MUIButton\n              variant=\"contained\"\n              size=\"medium\"\n              color=\"primary\"\n              onClick={handleSaveButton}\n            >\n              Save\n            </MUIButton>} />\n          <Grid container spacing={4}>\n            <Grid item xs={12}>\n              <Widget disableWidgetMenu>\n                <Grid container item xs={12}>\n                  <Grid item xs={6}>\n                    <TextField\n                      id=\"nationalId\"\n                      name=\"nationalId\"\n                      label=\"National ID\"\n                      type=\"text\"\n                      className={classes.input}\n                      value={formValues?.nationalId}\n                      onChange={handleInputChange}\n                      type=\"variant\"\n                      variant=\"outlined\"\n                    />\n                    <TextField\n                      id=\"name\"\n                      name=\"name\"\n                      label=\"Name\"\n                      type=\"text\"\n                      className={classes.input}\n                      value={formValues?.name}\n                      onChange={handleInputChange}\n                      type=\"variant\"\n                      variant=\"outlined\"\n                    />\n                    <TextField\n                      id=\"codeLicense\"\n                      name=\"codeLicense\"\n                      label=\"Code License\"\n                      type=\"text\"\n                      className={classes.input}\n                      value={formValues?.codeLicense}\n                      onChange={handleInputChange}\n                      type=\"variant\"\n                      variant=\"outlined\"\n                    />\n                    <TextField\n                      id=\"typeLicense\"\n                      name=\"typeLicense\"\n                      label=\"Type License\"\n                      type=\"text\"\n                      className={classes.input}\n                      value={formValues.typeLicense}\n                      onChange={handleInputChange}\n                      type=\"variant\"\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <TextField\n                      id=\"address\"\n                      name=\"address\"\n                      label=\"Address\"\n                      type=\"text\"\n                      className={classes.input}\n                      value={formValues?.address}\n                      onChange={handleInputChange}\n                      type=\"variant\"\n                      variant=\"outlined\"\n                    />\n                    <TextField\n                      id=\"dob\"\n                      label=\"Date of Birth\"\n                      type=\"date\"\n                      value={new Date(new Date(formValues?.dob).getTime() - new Date(formValues?.dob).getTimezoneOffset() * 60 * 1000)}\n                      sx={{ width: 220 }}\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      name=\"dob\"\n                      className={classes.input}\n                      variant=\"outlined\"\n                    />\n                    <TextField\n                      id=\"seniority\"\n                      name=\"seniority\"\n                      label=\"Seniority\"\n                      type=\"number\"\n                      className={classes.input}\n                      value={formValues?.seniority}\n                      onChange={handleInputChange}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                </Grid>\n              </Widget>\n            </Grid>\n          </Grid>\n        </> : <CircularProgress />\n      }\n\n    </>\n  )\n}\n\nexport default NewDriver\n","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/TripBus/TripBusDetail.js",["293","294","295","296","297","298","299","300","301","302","303","304"],"import React, { useState, useEffect } from 'react';\nimport { Grid, TextField, CircularProgress, Button as MUIButton, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport instance from '../../services';\nimport { useParams } from 'react-router-dom';\nimport * as AppURL from '../../services/urlAPI';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    width: '80%',\n    fontSize: '14px !important',\n    marginBottom: '30px'\n  },\n}));\n\nfunction TripBusDetail({prop}) {\n  let history = useHistory();\n  let location = useLocation();\n  //console.log(location.state);\n  const classes = useStyles();\n  const { id } = useParams();\n  const { driverId } = useParams();\n  const { assitanceId } = useParams();\n  const [formValues, setFormValues] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [listTripBus, setListTripBus] = useState([]);\n  const [listLineBus, setListLineBus] = useState([]);\n  const [listDriver, setlistDriver] = useState([]);\n\n  const [selectedDriver, setselectedDriver] = useState(location.state?.driverId);\n  const [selectedassitDriver, setselectedassitDriver] = useState(location.state?.assitanceId);\n  useEffect(() => {\n    let url = AppURL.findTripBus + '/' + id;\n    //console.log(url);\n    instance.get(url)\n      .then(res => {\n        //console.log(res);\n        if (res?.status === 200) {\n          const body = res?.body;\n          let data = {\n            tripBusId: body?.id,\n            carNumber: body?.bus.carNumber,\n            busId: body?.bus.id,\n            lineBusId: body?.lineBus.id,\n            numberGuest: body?.numberGuest,\n            priceTrip: body?.priceTrip,\n            timeTrip: body?.timeTrip,\n          };\n          //console.log(data);\n          setFormValues(data);\n        }\n      })\n  }, []);\n\n  useEffect(() => {\n    let url = AppURL.getAllBuses;\n    instance.get(url)\n      .then(res => {\n        //console.log(res);\n        if (res?.status === 200) {\n          const body = res?.body;\n          setListTripBus(body);\n        }\n\n      })\n  }, []);\n\n  useEffect(() => {\n    let url = AppURL.getAllDrivers;\n    instance.get(url)\n      .then(res => {\n        //console.log(res);\n        if (res?.status === 200) {\n          const body = res?.body;\n          setlistDriver(body);\n          console.log(\"driver: \" + JSON.stringify(body));\n          console.log(selectedDriver);\n          console.log(selectedassitDriver);\n        }\n\n      })\n  }, []);\n\n  // useEffect(() => {\n  //   if(listAllDriver.length > 0){\n  //     let listDriverNew = listAllDriver.filter(e => {\n  //       return e.id != selectedDriver\n  //     })\n  //     console.log(\"listDriverNew\" + listDriverNew);\n  //     setListTripBusAssistant(listDriverNew);\n  //   }\n  // }, [selectedDriver]);\n\n  // useEffect(() => {\n  //   if(listAllDriver.length > 0){\n  //     let listDriverNew = listAllDriver.filter(e => {\n  //       return e.id != selectedassitDriver\n  //     })\n  //     console.log(\"listDriverNewAAÂ\" + listDriverNew);\n  //     setlistDriver(listDriverNew);\n  //   }\n  // }, [selectedassitDriver]);\n  \n  useEffect(() => {\n    let url = AppURL.getAllLineBus;\n    instance.get(url)\n      .then(res => {\n        ////console.log(res);\n        if (res?.status === 200) {\n          const body = res?.body;\n          setListLineBus(body);\n        }\n\n      })\n  }, []);\n\n  const handleEditButton = () => {\n    if (isEditing) {\n      let url = AppURL.editTripBus;\n      instance.post(url, {\n        ...formValues,\n        driverId: selectedDriver,\n        assistantBusId: selectedassitDriver,\n      }).then(res => {\n        toast.success(res?.msg);\n        history.goBack();\n      }).catch(error => {\n        toast.error(error?.msg);\n      })\n    }\n    setIsEditing(!isEditing);\n  }\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    //console.log(e.target);\n    setFormValues({\n      ...formValues,\n      [name]: value,\n    });\n  };\n\n\n\n  return (\n    <>\n      {\n        formValues ? <>\n          <PageTitle\n            title=\"TripBus Details\"\n            buttonBack={<MUIButton\n              variant=\"contained\"\n              size=\"medium\"\n              color=\"secondary\"\n              onClick={() => history.goBack()}\n            >\n              Back\n            </MUIButton>}\n            button={<MUIButton\n              variant=\"contained\"\n              size=\"medium\"\n              color=\"primary\"\n              onClick={handleEditButton}\n            >\n              {isEditing ? 'Save' : 'Edit'}\n            </MUIButton>} />\n          <Grid container spacing={4}>\n            <Grid item xs={12}>\n              <Widget disableWidgetMenu>\n                <Grid container item xs={12}>\n                  <Grid item xs={6}>\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\n                    <InputLabel id=\"demo-simple-select-label\">List Bus</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={formValues.busId}\n                      label=\"Bus\"\n                      onChange={handleInputChange}\n                      name=\"busId\"\n                      MenuProps={{\n                        anchorOrigin: {\n                          vertical: \"bottom\",\n                          horizontal: \"left\"\n                        },\n                        transformOrigin: {\n                          vertical: \"top\",\n                          horizontal: \"left\"\n                        },\n                        getContentAnchorEl: null\n                      }}\n\n                      disabled={!isEditing}\n                    >\n                      {\n                          listTripBus.length > 0 && listTripBus.map((e) => (\n                            <MenuItem value={e.id}>{e.carNumber} {e.color} {e.manufacturer} </MenuItem>\n                          ))\n                      }\n\n                      {/* <MenuItem value={10}>Ten</MenuItem>\n                      <MenuItem value={20}>Twenty</MenuItem>\n                      <MenuItem value={30}>Thirty</MenuItem> */}\n                    </Select>\n                  </FormControl>\n\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\n                    <InputLabel id=\"demo-simple-select-label\">List LineBus</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      label=\"LineBus\"\n                      name=\"lineBusId\"\n                      value={formValues.lineBusId}\n                      onChange={handleInputChange}\n                      MenuProps={{\n                        anchorOrigin: {\n                          vertical: \"bottom\",\n                          horizontal: \"left\"\n                        },\n                        transformOrigin: {\n                          vertical: \"top\",\n                          horizontal: \"left\"\n                        },\n                        getContentAnchorEl: null\n                      }}\n\n                      disabled={!isEditing}\n                    >\n                      {\n                          listLineBus.length > 0 && listLineBus.map((e) => (\n                            <MenuItem value={e.id}>{e.firstPoint} {e.lastPoint}</MenuItem>\n                          ))\n                      }\n                      {/* <MenuItem value={10}>Ten</MenuItem>\n                      <MenuItem value={20}>Twenty</MenuItem>\n                      <MenuItem value={30}>Thirty</MenuItem> */}\n                    </Select>\n                  </FormControl>\n\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\n                    <InputLabel id=\"demo-simple-select-label\">List Driver</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      label=\"LineBus\"\n                      name=\"driverId\"\n                      value={selectedDriver}\n                      onChange={(e) => setselectedDriver(e.target.value)}\n                      MenuProps={{\n                        anchorOrigin: {\n                          vertical: \"bottom\",\n                          horizontal: \"left\"\n                        },\n                        transformOrigin: {\n                          vertical: \"top\",\n                          horizontal: \"left\"\n                        },\n                        getContentAnchorEl: null\n                      }}\n\n                      disabled={!isEditing}\n                    >\n                      {\n                          listDriver.length > 0 && listDriver.map((e) => {\n                            if(selectedassitDriver === e.id) return;\n                            return <MenuItem value={e.id}>{e.name}</MenuItem>\n                          })\n                      }\n                      {/* <MenuItem value={10}>Ten</MenuItem>\n                      <MenuItem value={20}>Twenty</MenuItem>\n                      <MenuItem value={30}>Thirty</MenuItem> */}\n                    </Select>\n                  </FormControl>\n\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\n                    <InputLabel id=\"demo-simple-select-label\">List Assistant</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      label=\"LineBus\"\n                      name=\"driverId\"\n                      value={selectedassitDriver}\n                      onChange={(e) => setselectedassitDriver(e.target.value)}\n                      MenuProps={{\n                        anchorOrigin: {\n                          vertical: \"bottom\",\n                          horizontal: \"left\"\n                        },\n                        transformOrigin: {\n                          vertical: \"top\",\n                          horizontal: \"left\"\n                        },\n                        getContentAnchorEl: null\n                      }}\n\n                      disabled={!isEditing}\n                    >\n                      {\n                          listDriver.length > 0 && listDriver.map((e) => {\n                            if(selectedDriver === e.id) return;\n                            return <MenuItem value={e.id}>{e.name}</MenuItem>\n                          }\n                          )\n                      }\n                      {/* <MenuItem value={10}>Ten</MenuItem>\n                      <MenuItem value={20}>Twenty</MenuItem>\n                      <MenuItem value={30}>Thirty</MenuItem> */}\n                    </Select>\n                  </FormControl>\n                  \n                   \n                  </Grid>\n                  <Grid item xs={6}>\n                    \n                  {/* <TextField\n                      id=\"carNumber\"\n                      name=\"carNumber\"\n                      label=\"CarNumber\"\n                      type=\"text\"\n                      className={classes.input}\n                      value={formValues?.carNumber}\n                      onChange={handleInputChange}\n                      type=\"variant\"\n                      variant=\"outlined\"\n                      disabled={!isEditing}\n                    /> */}\n                    <TextField\n                      id=\"numberGuest\"\n                      name=\"numberGuest\"\n                      label=\"numberGuest\"\n                      type=\"text\"\n                      className={classes.input}\n                      value={formValues?.numberGuest}\n                      onChange={handleInputChange}\n                      type=\"variant\"\n                      variant=\"outlined\"\n                      disabled={!isEditing}\n                    />\n                    <TextField\n                      id=\"priceTrip\"\n                      name=\"priceTrip\"\n                      label=\"priceTrip\"\n                      type=\"text\"\n                      className={classes.input}\n                      value={formValues.priceTrip}\n                      onChange={handleInputChange}\n                      type=\"variant\"\n                      variant=\"outlined\"\n                      disabled={!isEditing}\n                    />\n                    <TextField\n                      id=\"timeTrip\"\n                      name=\"timeTrip\"\n                      label=\"timeTrip\"\n                      type=\"text\"\n                      className={classes.input}\n                      value={formValues.timeTrip}\n                      onChange={handleInputChange}\n                      type=\"variant\"\n                      variant=\"outlined\"\n                      disabled={!isEditing}\n                    />\n                  </Grid>\n                </Grid>\n              </Widget>\n            </Grid>\n          </Grid>\n        </> : <CircularProgress />\n      }\n\n    </>\n  )\n}\n\nexport default TripBusDetail\n","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/Bus/NewBus.js",["305","306","307","308","309","310","311","312"],"import React, { useState, useEffect } from 'react';\nimport { Grid, TextField, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport instance from '../../services';\nimport * as AppURL from '../../services/urlAPI';\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nconst useStyles = makeStyles((theme) => ({\n    input: {\n        width: '80%',\n        fontSize: '14px !important',\n        marginBottom: '30px'\n    },\n}));\n\nconst data = {\n    carNumber: \"\",\n    color: \"\",\n    manufacturer: \"\",\n    lifeCar: \"\",\n    numberSeats: \"\",\n    dateMantain: \"2022-01-01\",\n    yearUse: 3,\n    image: \"body?.image\",\n};\n\nfunction NewBus() {\n    let history = useHistory();\n    const classes = useStyles();\n    const [formValues, setFormValues] = useState(data);\n\n    const handleSaveButton = () => {\n        instance.post(AppURL.createBus, {\n            ...formValues,\n            carNumber: parseInt(formValues.carNumber),\n            numberSeats: parseInt(formValues.numberSeats),\n            yearUse: parseInt(formValues.yearUse),\n            dateMantain: '2022-01-01'\n        })\n            .then(res => {\n                toast.success(res?.msg);\n                history.goBack();\n            })\n            .catch(error => {\n                toast.error(error?.msg);\n            })\n    }\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setFormValues({\n            ...formValues,\n            [name]: value,\n        });\n    };\n\n    return (\n        <>\n            {\n                formValues ? <>\n                    <PageTitle\n                        title=\"Bus Details\"\n                        buttonBack={<MUIButton\n                            variant=\"contained\"\n                            size=\"medium\"\n                            color=\"secondary\"\n                            onClick={() => history.goBack()}\n                        >\n                            Back\n                        </MUIButton>}\n                        button={<MUIButton\n                            variant=\"contained\"\n                            size=\"medium\"\n                            color=\"primary\"\n                            onClick={handleSaveButton}\n                        >\n                            Save\n                        </MUIButton>} />\n                    <Grid container spacing={4}>\n                        <Grid item xs={12}>\n                            <Widget disableWidgetMenu>\n                                <Grid container item xs={12}>\n                                    <Grid item xs={6}>\n                                        <TextField\n                                            id=\"carNumber\"\n                                            name=\"carNumber\"\n                                            label=\"Car Number\"\n                                            type=\"text\"\n                                            className={classes.input}\n                                            value={formValues?.carNumber}\n                                            onChange={handleInputChange}\n                                            type=\"variant\"\n                                            variant=\"outlined\"\n                                        />\n                                        <TextField\n                                            id=\"color\"\n                                            name=\"color\"\n                                            label=\"Color\"\n                                            type=\"text\"\n                                            className={classes.input}\n                                            value={formValues?.color}\n                                            onChange={handleInputChange}\n                                            type=\"variant\"\n                                            variant=\"outlined\"\n                                        />\n                                        <TextField\n                                            id=\"manufacturer\"\n                                            name=\"manufacturer\"\n                                            label=\"Manufacturer\"\n                                            type=\"text\"\n                                            className={classes.input}\n                                            value={formValues?.manufacturer}\n                                            onChange={handleInputChange}\n                                            type=\"variant\"\n                                            variant=\"outlined\"\n                                        />\n                                        <TextField\n                                            id=\"lifeCar\"\n                                            name=\"lifeCar\"\n                                            label=\"Life Car\"\n                                            type=\"text\"\n                                            className={classes.input}\n                                            value={formValues?.lifeCar}\n                                            onChange={handleInputChange}\n                                            type=\"variant\"\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <TextField\n                                            id=\"numberSeats\"\n                                            name=\"numberSeats\"\n                                            label=\"Number Seats\"\n                                            type=\"text\"\n                                            className={classes.input}\n                                            value={formValues?.numberSeats}\n                                            onChange={handleInputChange}\n                                            type=\"variant\"\n                                            variant=\"outlined\"\n                                        />\n                                        <TextField\n                                            id=\"yearUse\"\n                                            name=\"yearUse\"\n                                            label=\"Year Use\"\n                                            type=\"text\"\n                                            className={classes.input}\n                                            value={formValues?.yearUse}\n                                            onChange={handleInputChange}\n                                            type=\"variant\"\n                                            variant=\"outlined\"\n                                        />\n                                        <TextField\n                                            id=\"dateMantain\"\n                                            label=\"Date Maintain\"\n                                            type=\"date\"\n                                            value={new Date(new Date(formValues?.dateMantain).getTime() - new Date(formValues?.dateMantain).getTimezoneOffset() * 60 * 1000)}\n                                            sx={{ width: 220 }}\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                            name=\"dateMantain\"\n                                            className={classes.input}\n                                            variant=\"outlined\"\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Widget>\n                        </Grid>\n                    </Grid>\n                </> : <CircularProgress />\n            }\n\n        </>\n    )\n}\n\nexport default NewBus\n","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/TripBus/TripBus.js",["313","314","315","316","317","318","319"],"import React, { useState, useEffect } from 'react';\nimport { Grid, TextField, CircularProgress, Button as MUIButton, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport instance from '../../services';\nimport * as AppURL from '../../services/urlAPI';\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    width: '80%',\n    fontSize: '14px !important',\n    marginBottom: '30px'\n  },\n}));\n\nconst data = {\n  tripBusId: \"\",\n  busId: \"\",\n  lineBusId: \"\",\n  numberGuest: \"\",\n  priceTrip:\"\",\n  timeTrip: \"\",\n};\n\nfunction TripBusNew() {\n  let history = useHistory();\n  const classes = useStyles();\n  const [formValues, setFormValues] = useState(data);\n  const [selectedDriver, setselectedDriver] = useState(\"\");\n  const [selectedassitDriver, setselectedassitDriver] = useState(\"\");\n  const [listTripBus, setListTripBus] = useState([]);\n  const [listLineBus, setListLineBus] = useState([]);\n  const [listDriver, setlistDriver] = useState([]);\n\n  useEffect(() => {\n    let url = AppURL.getAllBuses;\n    instance.get(url)\n      .then(res => {\n        //console.log(res);\n        if (res?.status === 200) {\n          const body = res?.body;\n          setListTripBus(body);\n        }\n\n      })\n  }, []);\n\n  useEffect(() => {\n    let url = AppURL.getAllDrivers;\n    instance.get(url)\n      .then(res => {\n        //console.log(res);\n        if (res?.status === 200) {\n          const body = res?.body;\n          setlistDriver(body);\n          console.log(\"driver: \" + JSON.stringify(body));\n          console.log(selectedDriver);\n          console.log(selectedassitDriver);\n        }\n\n      })\n  }, []);\n\n  // useEffect(() => {\n  //   if(listAllDriver.length > 0){\n  //     let listDriverNew = listAllDriver.filter(e => {\n  //       return e.id != selectedDriver\n  //     })\n  //     console.log(\"listDriverNew\" + listDriverNew);\n  //     setListTripBusAssistant(listDriverNew);\n  //   }\n  // }, [selectedDriver]);\n\n  // useEffect(() => {\n  //   if(listAllDriver.length > 0){\n  //     let listDriverNew = listAllDriver.filter(e => {\n  //       return e.id != selectedassitDriver\n  //     })\n  //     console.log(\"listDriverNewAAÂ\" + listDriverNew);\n  //     setlistDriver(listDriverNew);\n  //   }\n  // }, [selectedassitDriver]);\n  \n  useEffect(() => {\n    let url = AppURL.getAllLineBus;\n    instance.get(url)\n      .then(res => {\n        ////console.log(res);\n        if (res?.status === 200) {\n          const body = res?.body;\n          setListLineBus(body);\n        }\n\n      })\n  }, []);\n\n  const handleSaveButton = () => {\n    instance.post(AppURL.createTripBus, {\n      ...formValues,\n      driverId: selectedDriver,\n      assistantBusId: selectedassitDriver,\n    })\n      .then(res => {\n        toast.success(res?.msg);\n        history.goBack();\n      })\n      .catch(error => {\n        toast.error(error?.msg);\n      })\n  }\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues({\n      ...formValues,\n      [name]: value,\n    });\n  };\n\n\n\n  return (\n    <>\n      {\n        formValues ? <>\n          <PageTitle\n            title=\"TripBus\"\n            buttonBack={<MUIButton\n              variant=\"contained\"\n              size=\"medium\"\n              color=\"secondary\"\n              onClick={() => history.goBack()}\n            >\n              Back\n            </MUIButton>}\n            button={<MUIButton\n              variant=\"contained\"\n              size=\"medium\"\n              color=\"primary\"\n              onClick={handleSaveButton}\n            >\n              Save\n            </MUIButton>} />\n          <Grid container spacing={4}>\n            <Grid item xs={12}>\n              <Widget disableWidgetMenu>\n                <Grid container item xs={12}>\n                <Grid item xs={6}>\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\n                    <InputLabel id=\"demo-simple-select-label\">List Bus</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={formValues.busId}\n                      label=\"Bus\"\n                      onChange={handleInputChange}\n                      name=\"busId\"\n                      MenuProps={{\n                        anchorOrigin: {\n                          vertical: \"bottom\",\n                          horizontal: \"left\"\n                        },\n                        transformOrigin: {\n                          vertical: \"top\",\n                          horizontal: \"left\"\n                        },\n                        getContentAnchorEl: null\n                      }}\n\n                      //disabled={!isEditing}\n                    >\n                      {\n                          listTripBus.length > 0 && listTripBus.map((e) => (\n                            <MenuItem value={e.id}>{e.carNumber} {e.color} {e.manufacturer} </MenuItem>\n                          ))\n                      }\n\n                      {/* <MenuItem value={10}>Ten</MenuItem>\n                      <MenuItem value={20}>Twenty</MenuItem>\n                      <MenuItem value={30}>Thirty</MenuItem> */}\n                    </Select>\n                  </FormControl>\n\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\n                    <InputLabel id=\"demo-simple-select-label\">List LineBus</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      label=\"LineBus\"\n                      name=\"lineBusId\"\n                      value={formValues.lineBusId}\n                      onChange={handleInputChange}\n                      MenuProps={{\n                        anchorOrigin: {\n                          vertical: \"bottom\",\n                          horizontal: \"left\"\n                        },\n                        transformOrigin: {\n                          vertical: \"top\",\n                          horizontal: \"left\"\n                        },\n                        getContentAnchorEl: null\n                      }}\n\n                      //disabled={!isEditing}\n                    >\n                      {\n                          listLineBus.length > 0 && listLineBus.map((e) => (\n                            <MenuItem value={e.id}>{e.firstPoint} {e.lastPoint}</MenuItem>\n                          ))\n                      }\n                      {/* <MenuItem value={10}>Ten</MenuItem>\n                      <MenuItem value={20}>Twenty</MenuItem>\n                      <MenuItem value={30}>Thirty</MenuItem> */}\n                    </Select>\n                  </FormControl>\n\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\n                    <InputLabel id=\"demo-simple-select-label\">List Driver</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      label=\"LineBus\"\n                      name=\"driverId\"\n                      value={selectedDriver}\n                      onChange={(e) => setselectedDriver(e.target.value)}\n                      MenuProps={{\n                        anchorOrigin: {\n                          vertical: \"bottom\",\n                          horizontal: \"left\"\n                        },\n                        transformOrigin: {\n                          vertical: \"top\",\n                          horizontal: \"left\"\n                        },\n                        getContentAnchorEl: null\n                      }}\n\n                      //disabled={!isEditing}\n                    >\n                      {\n                          listDriver.length > 0 && listDriver.map((e) => {\n                            if(selectedassitDriver === e.id) return;\n                            return <MenuItem value={e.id}>{e.name}</MenuItem>\n                          })\n                      }\n                      {/* <MenuItem value={10}>Ten</MenuItem>\n                      <MenuItem value={20}>Twenty</MenuItem>\n                      <MenuItem value={30}>Thirty</MenuItem> */}\n                    </Select>\n                  </FormControl>\n\n                  <FormControl className=\"MuiTextField-root makeStyles-input-79\" style={{ marginBottom: `30px`,width: `80%`}}>\n                    <InputLabel id=\"demo-simple-select-label\">List Assistant</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      label=\"LineBus\"\n                      name=\"driverId\"\n                      value={selectedassitDriver}\n                      onChange={(e) => setselectedassitDriver(e.target.value)}\n                      MenuProps={{\n                        anchorOrigin: {\n                          vertical: \"bottom\",\n                          horizontal: \"left\"\n                        },\n                        transformOrigin: {\n                          vertical: \"top\",\n                          horizontal: \"left\"\n                        },\n                        getContentAnchorEl: null\n                      }}\n\n                      //disabled={!isEditing}\n                    >\n                      {\n                          listDriver.length > 0 && listDriver.map((e) => {\n                            if(selectedDriver === e.id) return;\n                            return <MenuItem value={e.id}>{e.name}</MenuItem>\n                          }\n                          )\n                      }\n                      {/* <MenuItem value={10}>Ten</MenuItem>\n                      <MenuItem value={20}>Twenty</MenuItem>\n                      <MenuItem value={30}>Thirty</MenuItem> */}\n                    </Select>\n                  </FormControl>\n                  \n                   \n                  </Grid>\n                  <Grid item xs={6}>\n                    \n                    <TextField\n                      id=\"numberGuest\"\n                      name=\"numberGuest\"\n                      label=\"numberGuest\"\n                      type=\"text\"\n                      className={classes.input}\n                      value={formValues?.numberGuest}\n                      onChange={handleInputChange}\n                      type=\"variant\"\n                      variant=\"outlined\"\n                      //disabled={!isEditing}\n                    />\n                    <TextField\n                      id=\"priceTrip\"\n                      name=\"priceTrip\"\n                      label=\"priceTrip\"\n                      type=\"text\"\n                      className={classes.input}\n                      value={formValues.priceTrip}\n                      onChange={handleInputChange}\n                      type=\"variant\"\n                      variant=\"outlined\"\n                      //disabled={!isEditing}\n                    />\n                    <TextField\n                      id=\"timeTrip\"\n                      name=\"timeTrip\"\n                      label=\"timeTrip\"\n                      type=\"text\"\n                      className={classes.input}\n                      value={formValues.timeTrip}\n                      onChange={handleInputChange}\n                      type=\"variant\"\n                      variant=\"outlined\"\n                      //disabled={!isEditing}\n                    />\n                  </Grid>\n                </Grid>\n              </Widget>\n            </Grid>\n          </Grid>\n        </> : <CircularProgress />\n      }\n\n    </>\n  )\n}\n\nexport default TripBusNew\n","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/LineBuses/NewLineBus.js",["320","321","322","323"],"import React, { useState, useEffect } from 'react';\nimport { Grid, TextField, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport instance from '../../services';\nimport * as AppURL from '../../services/urlAPI';\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    width: '80%',\n    fontSize: '14px !important',\n    marginBottom: '30px'\n  },\n}));\n\nconst data = {\n  firstPoint: \"\",\n  lastPoint: \"\",\n  length: 0,\n  complexity: 0,\n};\n\nfunction NewLineBus() {\n  let history = useHistory();\n  const classes = useStyles();\n  const [formValues, setFormValues] = useState(data);\n\n  const handleSaveButton = () => {\n    instance.post(AppURL.createLineBus, {\n      ...formValues,\n      length: parseInt(formValues.length),\n      complexity: parseInt(formValues.complexity)\n    })\n      .then(res => {\n        toast.success(res?.msg);\n        history.goBack();\n      })\n      .catch(error => {\n        toast.error(error?.msg);\n      })\n  }\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues({\n      ...formValues,\n      [name]: value,\n    });\n  };\n\n  return (\n    <>\n      {\n        formValues ? <>\n          <PageTitle\n            title=\"Line Bus Details\"\n            buttonBack={<MUIButton\n              variant=\"contained\"\n              size=\"medium\"\n              color=\"secondary\"\n              onClick={() => history.goBack()}\n            >\n              Back\n            </MUIButton>}\n            button={<MUIButton\n              variant=\"contained\"\n              size=\"medium\"\n              color=\"primary\"\n              onClick={handleSaveButton}\n            >\n              Save\n            </MUIButton>} />\n          <Grid container spacing={4}>\n            <Grid item xs={12}>\n              <Widget disableWidgetMenu>\n                <Grid container item xs={12}>\n                  <Grid item xs={6}>\n                    <TextField\n                      id=\"firstPoint\"\n                      name=\"firstPoint\"\n                      label=\"First Point\"\n                      type=\"text\"\n                      className={classes.input}\n                      value={formValues?.firstPoint}\n                      onChange={handleInputChange}\n                      type=\"variant\"\n                      variant=\"outlined\"\n                    />\n                    <TextField\n                      id=\"lastPoint\"\n                      name=\"lastPoint\"\n                      label=\"Last Point\"\n                      type=\"text\"\n                      className={classes.input}\n                      value={formValues?.lastPoint}\n                      onChange={handleInputChange}\n                      type=\"variant\"\n                      variant=\"outlined\"\n                    />\n                    <TextField\n                      id=\"length\"\n                      name=\"length\"\n                      label=\"Length\"\n                      type=\"number\"\n                      className={classes.input}\n                      value={formValues?.length}\n                      onChange={handleInputChange}\n                      variant=\"outlined\"\n                    />\n                    <TextField\n                      id=\"complexity\"\n                      name=\"complexity\"\n                      label=\"Complexity\"\n                      type=\"number\"\n                      className={classes.input}\n                      value={formValues?.complexity}\n                      onChange={handleInputChange}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                </Grid>\n              </Widget>\n            </Grid>\n          </Grid>\n        </> : <CircularProgress />\n      }\n\n    </>\n  )\n}\n\nexport default NewLineBus\n","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/LineBuses/LineBusDetail.js",["324","325","326","327","328","329","330","331"],"import React, { useState, useEffect } from 'react';\nimport { Grid, TextField, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport instance from '../../services';\nimport { useParams } from 'react-router-dom';\nimport * as AppURL from '../../services/urlAPI';\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    width: '80%',\n    fontSize: '14px !important',\n    marginBottom: '30px'\n  },\n}));\n\nfunction LineBusDetail() {\n  let history = useHistory();\n  const classes = useStyles();\n  const { id } = useParams();\n  const [formValues, setFormValues] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n\n  useEffect(() => {\n    let url = AppURL.getLineBus + '/' + id;\n    instance.get(url)\n      .then(res => {\n        if (res?.status === 200) {\n          const body = res?.body;\n          let data = {\n            firstPoint: body?.firstPoint,\n            lastPoint: body?.lastPoint,\n            length: body?.length,\n            complexity: body?.complexity,\n          };\n\n          setFormValues(data);\n        }\n\n      })\n  }, []);\n\n  const handleEditButton = () => {\n    if (isEditing) {\n      let url = AppURL.updateLineBus + '/' + id;\n      instance.put(url, {\n        ...formValues,\n        length: parseInt(formValues.length),\n        complexity: parseInt(formValues.complexity)\n      })\n      .then(res => {\n        toast.success(res?.msg);\n        history.goBack();\n      }).catch(error => {\n        toast.error(error?.msg);\n      })\n    }\n     setIsEditing(!isEditing);\n  }\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues({\n      ...formValues,\n      [name]: value,\n    });\n  };\n\n  return (\n    <>\n      {\n        formValues ? <>\n          <PageTitle\n            title=\"Line Bus Details\"\n            buttonBack={<MUIButton\n              variant=\"contained\"\n              size=\"medium\"\n              color=\"secondary\"\n              onClick={() => history.goBack()}\n            >\n              Back\n            </MUIButton>}\n            button={<MUIButton\n              variant=\"contained\"\n              size=\"medium\"\n              color=\"primary\"\n              onClick={handleEditButton}\n            >\n              {isEditing ? 'Save' : 'Edit'}\n            </MUIButton>} />\n          <Grid container spacing={4}>\n            <Grid item xs={12}>\n              <Widget disableWidgetMenu>\n                <Grid container item xs={12}>\n                  <Grid item xs={6}>\n                    <TextField\n                      id=\"firstPoint\"\n                      name=\"firstPoint\"\n                      label=\"First Point\"\n                      type=\"text\"\n                      className={classes.input}\n                      value={formValues?.firstPoint}\n                      onChange={handleInputChange}\n                      type=\"variant\"\n                      variant=\"outlined\"\n                      disabled={!isEditing}\n                    />\n                    <TextField\n                      id=\"lastPoint\"\n                      name=\"lastPoint\"\n                      label=\"Last Point\"\n                      type=\"text\"\n                      className={classes.input}\n                      value={formValues?.lastPoint}\n                      onChange={handleInputChange}\n                      type=\"variant\"\n                      variant=\"outlined\"\n                      disabled={!isEditing}\n                    />\n                    <TextField\n                      id=\"length\"\n                      name=\"length\"\n                      label=\"Length\"\n                      type=\"text\"\n                      className={classes.input}\n                      value={formValues?.length}\n                      onChange={handleInputChange}\n                      type=\"variant\"\n                      variant=\"outlined\"\n                      disabled={!isEditing}\n                    />\n                    <TextField\n                      id=\"complexity\"\n                      name=\"complexity\"\n                      label=\"Complexity\"\n                      type=\"text\"\n                      className={classes.input}\n                      value={formValues?.complexity}\n                      onChange={handleInputChange}\n                      type=\"variant\"\n                      variant=\"outlined\"\n                      disabled={!isEditing}\n                    />\n                  </Grid>\n                </Grid>\n              </Widget>\n            </Grid>\n          </Grid>\n        </> : <CircularProgress />\n      }\n\n    </>\n  )\n}\n\nexport default LineBusDetail\n","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/tables/Tables.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Sidebar/Sidebar.js",["332","333","334","335"],"import React, { useState, useEffect } from \"react\";\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\nimport {\n  Home as HomeIcon,\n  NotificationsNone as NotificationsIcon,\n  FormatSize as TypographyIcon,\n  FilterNone as UIElementsIcon,\n  BorderAll as TableIcon,\n  QuestionAnswer as SupportIcon,\n  LibraryBooks as LibraryIcon,\n  HelpOutline as FAQIcon,\n  ArrowBack as ArrowBackIcon,\n  DriveEta as DriveEtaIcon,\n  Business as BusEtaIcon,\n  TripOrigin as TripOriginIcon\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\nimport Dot from \"./components/Dot\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\n\nconst structure = [\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\n  {\n    id: 1,\n    label: \"Typography\",\n    link: \"/app/typography\",\n    icon: <TypographyIcon />,\n  },\n  { id: 2, label: \"Tables\", link: \"/app/tables\", icon: <TableIcon /> },\n  {\n    id: 3,\n    label: \"Notifications\",\n    link: \"/app/notifications\",\n    icon: <NotificationsIcon />,\n  },\n  {\n    id: 4,\n    label: \"UI Elements\",\n    link: \"/app/ui\",\n    icon: <UIElementsIcon />,\n    children: [\n      { label: \"Icons\", link: \"/app/ui/icons\" },\n      { label: \"Charts\", link: \"/app/ui/charts\" },\n      { label: \"Maps\", link: \"/app/ui/maps\" },\n    ],\n  },\n  { id: 5, type: \"divider\" },\n  { id: 6, label: \"Drivers\", link: \"/app/drivers\", icon: <BusEtaIcon/> },\n  { id: 7, label: \"Bus\", link: \"/app/buses\", icon: <DriveEtaIcon /> },\n  { id: 8, label: \"TripBus\", link: \"/app/tripbus\", icon: <TripOriginIcon/> },\n  { id: 9, label: \"Line Buses\", link: \"/app/lineBuses\", icon: <DriveEtaIcon /> },\n];\n\nfunction Sidebar({ location }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n\n  // local\n  var [isPermanent, setPermanent] = useState(true);\n\n  useEffect(function () {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n\n  return (\n    <Drawer\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpened,\n        [classes.drawerClose]: !isSidebarOpened,\n      })}\n      classes={{\n        paper: classNames({\n          [classes.drawerOpen]: isSidebarOpened,\n          [classes.drawerClose]: !isSidebarOpened,\n        }),\n      }}\n      open={isSidebarOpened}\n    >\n      <div className={classes.toolbar} />\n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          <ArrowBackIcon\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n      </div>\n      <List className={classes.sidebarList}>\n        {structure.map(link => (\n          <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={isSidebarOpened}\n            {...link}\n          />\n        ))}\n      </List>\n    </Drawer>\n  );\n\n  // ##################################################################\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\nexport default withRouter(Sidebar);\n","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/notifications/Notifications.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Header/Header.js",["336","337"],"import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  InputBase,\n  Menu,\n  MenuItem,\n  Fab,\n  Link\n} from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  MailOutline as MailIcon,\n  NotificationsNone as NotificationsIcon,\n  Person as AccountIcon,\n  Search as SearchIcon,\n  Send as SendIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Badge, Typography, Button } from \"../Wrappers\";\nimport Notification from \"../Notification/Notification\";\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\n\nconst messages = [\n  {\n    id: 0,\n    variant: \"warning\",\n    name: \"Jane Hew\",\n    message: \"Hey! How is it going?\",\n    time: \"9:32\",\n  },\n  {\n    id: 1,\n    variant: \"success\",\n    name: \"Lloyd Brown\",\n    message: \"Check out my new Dashboard\",\n    time: \"9:18\",\n  },\n  {\n    id: 2,\n    variant: \"primary\",\n    name: \"Mark Winstein\",\n    message: \"I want rearrange the appointment\",\n    time: \"9:15\",\n  },\n  {\n    id: 3,\n    variant: \"secondary\",\n    name: \"Liana Dutti\",\n    message: \"Good news from sale department\",\n    time: \"9:09\",\n  },\n];\n\nconst notifications = [\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\n  {\n    id: 1,\n    color: \"success\",\n    type: \"info\",\n    message: \"What is the best way to get ...\",\n  },\n  {\n    id: 2,\n    color: \"secondary\",\n    type: \"notification\",\n    message: \"This is just a simple notification\",\n  },\n  {\n    id: 3,\n    color: \"primary\",\n    type: \"e-commerce\",\n    message: \"12 new orders has arrived today\",\n  },\n];\n\nexport default function Header(props) {\n  var classes = useStyles();\n\n  // global\n  var layoutState = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [mailMenu, setMailMenu] = useState(null);\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\n  var [profileMenu, setProfileMenu] = useState(null);\n  var [isSearchOpen, setSearchOpen] = useState(false);\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          color=\"inherit\"\n          onClick={() => toggleSidebar(layoutDispatch)}\n          className={classNames(\n            classes.headerMenuButtonSandwich,\n            classes.headerMenuButtonCollapse,\n          )}\n        >\n          {layoutState.isSidebarOpened ? (\n            <ArrowBackIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          ) : (\n            <MenuIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          )}\n        </IconButton>\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\n          SbTickets\n        </Typography>\n        <div className={classes.grow} />\n        <div\n          className={classNames(classes.search, {\n            [classes.searchFocused]: isSearchOpen,\n          })}\n        >\n          <div\n            className={classNames(classes.searchIcon, {\n              [classes.searchIconOpened]: isSearchOpen,\n            })}\n            onClick={() => setSearchOpen(!isSearchOpen)}\n          >\n            <SearchIcon classes={{ root: classes.headerIcon }} />\n          </div>\n          <InputBase\n            placeholder=\"Search…\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n          />\n        </div>\n        <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={e => {\n            setNotificationsMenu(e.currentTarget);\n            setIsNotificationsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isNotificationsUnread ? notifications.length : null}\n            color=\"warning\"\n          >\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton>\n        <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={e => {\n            setMailMenu(e.currentTarget);\n            setIsMailsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isMailsUnread ? messages.length : null}\n            color=\"secondary\"\n          >\n            <MailIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton>\n        <IconButton\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          className={classes.headerMenuButton}\n          aria-controls=\"profile-menu\"\n          onClick={e => setProfileMenu(e.currentTarget)}\n        >\n          <AccountIcon classes={{ root: classes.headerIcon }} />\n        </IconButton>\n        <Menu\n          id=\"mail-menu\"\n          open={Boolean(mailMenu)}\n          anchorEl={mailMenu}\n          onClose={() => setMailMenu(null)}\n          MenuListProps={{ className: classes.headerMenuList }}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              New Messages\n            </Typography>\n            <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"secondary\"\n            >\n              {messages.length} New Messages\n            </Typography>\n          </div>\n          {messages.map(message => (\n            <MenuItem key={message.id} className={classes.messageNotification}>\n              <div className={classes.messageNotificationSide}>\n                <UserAvatar color={message.variant} name={message.name} />\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n                  {message.time}\n                </Typography>\n              </div>\n              <div\n                className={classNames(\n                  classes.messageNotificationSide,\n                  classes.messageNotificationBodySide,\n                )}\n              >\n                <Typography weight=\"medium\" gutterBottom>\n                  {message.name}\n                </Typography>\n                <Typography color=\"text\" colorBrightness=\"secondary\">\n                  {message.message}\n                </Typography>\n              </div>\n            </MenuItem>\n          ))}\n          <Fab\n            variant=\"extended\"\n            color=\"primary\"\n            aria-label=\"Add\"\n            className={classes.sendMessageButton}\n          >\n            Send New Message\n            <SendIcon className={classes.sendButtonIcon} />\n          </Fab>\n        </Menu>\n        <Menu\n          id=\"notifications-menu\"\n          open={Boolean(notificationsMenu)}\n          anchorEl={notificationsMenu}\n          onClose={() => setNotificationsMenu(null)}\n          className={classes.headerMenu}\n          disableAutoFocusItem\n        >\n          {notifications.map(notification => (\n            <MenuItem\n              key={notification.id}\n              onClick={() => setNotificationsMenu(null)}\n              className={classes.headerMenuItem}\n            >\n              <Notification {...notification} typographyVariant=\"inherit\" />\n            </MenuItem>\n          ))}\n        </Menu>\n        <Menu\n          id=\"profile-menu\"\n          open={Boolean(profileMenu)}\n          anchorEl={profileMenu}\n          onClose={() => setProfileMenu(null)}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              Trung Vu\n            </Typography>\n            <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"primary\"\n              href=\"https://github.com/AwesomeDracula\"\n              target=\"_blank\"\n            >\n              Github account\n            </Typography>\n          </div>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\n          </MenuItem>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\n          </MenuItem>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\n          </MenuItem>\n          <div className={classes.profileMenuUser}>\n            <Typography\n              className={classes.profileMenuLink}\n              color=\"primary\"\n              onClick={() => signOut(userDispatch, props.history)}\n            >\n              Sign Out\n            </Typography>\n          </div>\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/maps/Maps.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/typography/Typography.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/LineBuses/index.js",["338"],"import React, { useEffect, useState } from \"react\";\nimport { Grid, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport * as AppURL from '../../services/urlAPI';\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport instance from \"../../services\";\n\nexport default function Tables() {\n  let history = useHistory();\n  const [datatableData, setData] = useState(null);\n  const [rowsSelectedByUser, setRowsSelected] = useState([]);\n  useEffect(() => {\n    instance.get(AppURL.getAllLineBus)\n      .then(res => {\n        const body = res?.body;\n        const data = body.map(lineBus => {\n          let lineBusData = [];\n          lineBusData.push(lineBus?.id, lineBus?.firstPoint, lineBus?.lastPoint, lineBus?.length, lineBus?.complexity);\n          return lineBusData;\n        })\n        setData(data);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }, [])\n\n  const handleRowClick = (rowData, rowMeta) => {\n    console.log('hello', rowData, rowMeta);\n    history.push(`/app/lineBuses/${rowData[0]}`);\n  }\n\n  const handleRowDelete = () => {\n    let rowsToDelete = [];\n    datatableData.map((data, idx) => {\n      if (rowsSelectedByUser.includes(idx))\n        rowsToDelete.push(data[0]);\n    })\n    instance.post(AppURL.deleteLineBuses, rowsToDelete)\n      .then(res => {\n        toast.success(res?.msg);\n      }).catch(error => {\n        toast.error(error?.msg);\n        return false;\n      });\n  }\n\n  const handleSelectRow = (currentRowsSelected, allRowsSelected, rowsSelected) => {\n    setRowsSelected(rowsSelected);\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Tables\"\n        button={<MUIButton\n          variant=\"contained\"\n          size=\"medium\"\n          color=\"primary\"\n          onClick={() => { history.push(`/app/lineBuses/create`) }}\n        >\n          New\n        </MUIButton>} />\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          {\n            datatableData ? <MUIDataTable\n              title=\"LineBus List\"\n              data={datatableData}\n              columns={[\"Id\", \"First Point\", \"Last Point\", \"Length\", \"Complexity\"]}\n              options={{\n                filterType: \"checkbox\",\n                draggableColumns: true,\n                onRowClick: handleRowClick,\n                onRowsDelete: handleRowDelete,\n                onRowSelectionChange: handleSelectRow\n              }}\n            /> : <CircularProgress />\n          }\n\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/dashboard/Dashboard.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/Drivers/index.js",["339"],"import React, { useEffect, useState } from \"react\";\nimport { Grid, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport * as AppURL from '../../services/urlAPI';\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport instance from \"../../services\";\n\nexport default function Tables() {\n  let history = useHistory();\n  const [datatableData, setData] = useState(null);\n  const [rowsSelectedByUser, setRowsSelected] = useState([]);\n  useEffect(() => {\n    instance.get(AppURL.getAllDrivers)\n      .then(res => {\n        console.log(JSON.stringify(res));\n        const body = res?.body;\n        const data = body.map(driver => {\n          let driverData = [];\n          driverData.push(driver?.id, driver?.nationalId, driver?.name, driver?.typeLicense, driver?.seniority);\n          return driverData;\n        })\n        setData(data);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }, [])\n\n  const handleRowClick = (rowData, rowMeta) => {\n    console.log('hello', rowData, rowMeta);\n    history.push(`/app/drivers/${rowData[0]}`);\n  }\n\n  const handleRowDelete = () => {\n    let rowsToDelete = [];\n    datatableData.map((data, idx) => {\n      if (rowsSelectedByUser.includes(idx))\n        rowsToDelete.push(data[0]);\n    })\n    instance.post(AppURL.deleteDrivers, rowsToDelete)\n      .then(res => {\n        toast.success(res?.msg);\n      }).catch(error => {\n        toast.error(error?.msg);\n        return false;\n      });\n  }\n\n  const handleSelectRow = (currentRowsSelected, allRowsSelected, rowsSelected) => {\n    setRowsSelected(rowsSelected);\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Tables\"\n        button={<MUIButton\n          variant=\"contained\"\n          size=\"medium\"\n          color=\"primary\"\n          onClick={() => { history.push(`/app/drivers/create`) }}\n        >\n          New\n        </MUIButton>} />\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          {\n            datatableData ? <MUIDataTable\n              title=\"Driver List\"\n              data={datatableData}\n              columns={[\"Id\", \"National Id\", \"Name\", \"License\", \"Seniority\"]}\n              options={{\n                filterType: \"checkbox\",\n                draggableColumns: true,\n                onRowClick: handleRowClick,\n                onRowsDelete: handleRowDelete,\n                onRowSelectionChange: handleSelectRow\n              }}\n            /> : <CircularProgress />\n          }\n\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/TripBus/index.js",["340","341","342","343","344"],"import React, { useEffect, useState } from \"react\";\nimport { Grid, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport * as AppURL from '../../services/urlAPI';\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport instance from \"../../services\";\n\nexport default function TripBus() {\n  let history = useHistory();\n  const [datatableData, setData] = useState(null);\n  const [rowsSelectedByUser, setRowsSelected] = useState([]);\n  useEffect(() => {\n    instance.get(AppURL.getAllTripBus)\n      .then(res => {\n        const listTripBus = res?.body.listTripBus;\n        const listTripBusDriver = res?.body.listTripBusDriver;\n        const data = listTripBus.map(tripbus => {\n          let tripBusData = [];\n          let driverId = listTripBusDriver.find(item => item.tripbusId == tripbus?.id && item.roleCar == '1')?.driverId;\n          let assitDriverId = listTripBusDriver.find(item => item.tripbusId == tripbus?.id && item.roleCar == '0')?.driverId;\n          console.log(\"driverId: \" + driverId);\n          if(!driverId) driverId = \"\";\n          tripBusData.push(tripbus?.id, driverId, assitDriverId, tripbus?.bus.carNumber, tripbus?.bus.color, tripbus?.lineBus.firstPoint,  tripbus?.lineBus.lastPoint,  tripbus?.numberGuest, tripbus?.priceTrip, tripbus?.timeTrip);\n          return tripBusData;\n        })\n        console.log(data);\n        setData(data);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }, [])\n\n  const handleRowClick = (rowData, rowMeta) => {\n    console.log('hello', rowData, rowMeta);\n    // history.push(`/app/tripbus/${rowData[0]}/${rowData[1]}/${rowData[1]}`);\n    history.push({\n      pathname: `/app/tripbus/${rowData[0]}`,\n      state: {\n        id: rowData[0],\n        driverId: rowData[1],\n        assitanceId: rowData[2]\n      }\n    })\n  }\n\n  const handleRowDelete = () => {\n    let rowsToDelete = [];\n    datatableData.map((data, idx) => {\n      if (rowsSelectedByUser.includes(idx))\n        rowsToDelete.push(data[0]);\n    })\n    instance.post(AppURL.deleteBus, rowsToDelete)\n      .then(res => {\n        toast.success(res?.msg);\n      }).catch(error => {\n        toast.error(error?.msg);\n        return false;\n      });\n  }\n\n  const handleSelectRow = (currentRowsSelected, allRowsSelected, rowsSelected) => {\n    setRowsSelected(rowsSelected);\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Tables\"\n        button={<MUIButton\n          variant=\"contained\"\n          size=\"medium\"\n          color=\"primary\"\n          onClick={() => { history.push(`/app/tripbus/create`) }}\n        >\n          New\n        </MUIButton>} />\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          {\n            datatableData ? <MUIDataTable\n              title=\"TripBus List\"\n              data={datatableData}\n              columns={[ \"Id\" ,\"\",\"\",  \"CarNumber\", \"color\", \"FirstPoint\", \"LastPoint\",\"NumberGuest\", \"PriceTrip\", \"TimeTrip\"]}\n              options={{\n                filterType: \"checkbox\",\n                draggableColumns: true,\n                onRowClick: handleRowClick,\n                onRowsDelete: handleRowDelete,\n                onRowSelectionChange: handleSelectRow\n              }}\n            /> : <CircularProgress />\n          }\n\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/charts/Charts.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/icons/Icons.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/Bus/index.js",["345"],"import React, { useEffect, useState } from \"react\";\nimport { Grid, CircularProgress, Button as MUIButton } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport * as AppURL from '../../services/urlAPI';\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport instance from \"../../services\";\n\nexport default function Tables() {\n  let history = useHistory();\n  const [datatableData, setData] = useState(null);\n  const [rowsSelectedByUser, setRowsSelected] = useState([]);\n  useEffect(() => {\n    instance.get(AppURL.getAllBuses)\n      .then(res => {\n        const body = res?.body;\n        const data = body.map(bus => {\n          let busData = [];\n          busData.push(bus?.id, bus?.carNumber, bus?.color, bus?.manufacturer, bus?.lifeCar, bus?.numberSeats, bus?.yearUse, bus?.dateMantain);\n          return busData;\n        })\n        setData(data);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }, [])\n\n  const handleRowClick = (rowData, rowMeta) => {\n    console.log('hello', rowData, rowMeta);\n    history.push(`/app/buses/${rowData[0]}`);\n  }\n\n  const handleRowDelete = () => {\n    let rowsToDelete = [];\n    datatableData.map((data, idx) => {\n      if (rowsSelectedByUser.includes(idx))\n        rowsToDelete.push(data[0]);\n    })\n    instance.post(AppURL.deleteBuses, rowsToDelete)\n      .then(res => {\n        toast.success(res?.msg);\n      }).catch(error => {\n        toast.error(error?.msg);\n        return false;\n      });\n  }\n\n  const handleSelectRow = (currentRowsSelected, allRowsSelected, rowsSelected) => {\n    setRowsSelected(rowsSelected);\n  }\n\n  return (\n    <>\n      <PageTitle title=\"Tables\"\n        button={<MUIButton\n          variant=\"contained\"\n          size=\"medium\"\n          color=\"primary\"\n          onClick={() => { history.push(`/app/buses/create`) }}\n        >\n          New\n        </MUIButton>} />\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          {\n            datatableData ? <MUIDataTable\n              title=\"Bus List\"\n              data={datatableData}\n              columns={[\"Id\", \"Car Number\", \"Color\", \"Manufacturer\", \"Life Car\"]}\n              options={{\n                filterType: \"checkbox\",\n                draggableColumns: true,\n                onRowClick: handleRowClick,\n                onRowsDelete: handleRowDelete,\n                onRowSelectionChange: handleSelectRow\n              }}\n            /> : <CircularProgress />\n          }\n\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Widget/Widget.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Wrappers/Wrappers.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/PageTitle/PageTitle.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/dashboard/mock.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Sidebar/styles.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/notifications/styles.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Header/styles.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/maps/styles.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/typography/styles.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/dashboard/styles.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/icons/styles.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Sidebar/components/Dot.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Sidebar/components/SidebarLink/SidebarLink.js",["346"],"import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\nimport { Inbox as InboxIcon } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Dot from \"../Dot\";\nimport Bus from \"../../../../pages/Bus\";\n\nexport default function SidebarLink({\n  link,\n  icon,\n  label,\n  children,\n  location,\n  isSidebarOpened,\n  nested,\n  type,\n}) {\n  var classes = useStyles();\n\n  // local\n  var [isOpen, setIsOpen] = useState(false);\n  var isLinkActive =\n    link &&\n    (location.pathname === link || location.pathname.indexOf(link) !== -1);\n\n  if (type === \"title\")\n    return (\n      <Typography\n        className={classnames(classes.linkText, classes.sectionTitle, {\n          [classes.linkTextHidden]: !isSidebarOpened,\n        })}\n      >\n        {label}\n      </Typography>\n    );\n\n  if (type === \"divider\") return  <Divider className={classes.divider} />;\n  if (link && link.includes('http')) {\n    return (\n      <ListItem\n        button\n        className={classes.link}\n        classes={{\n          root: classnames(classes.linkRoot, {\n            [classes.linkActive]: isLinkActive && !nested,\n            [classes.linkNested]: nested,\n          }),\n        }}\n        disableRipple\n      >\n        <a className={classes.externalLink} href={link}>\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n            }),\n          }}\n          primary={label}\n        />\n        </a>\n      </ListItem>\n    )\n  }\n  if (!children)\n    return (\n      <ListItem\n        button\n        component={link && Link}\n        to={link}\n        className={classes.link}\n        classes={{\n          root: classnames(classes.linkRoot, {\n            [classes.linkActive]: isLinkActive && !nested,\n            [classes.linkNested]: nested,\n          }),\n        }}\n        disableRipple\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n            }),\n          }}\n          primary={label}\n        />\n      </ListItem>\n    );\n\n  return (\n    <>\n      <ListItem\n        button\n        component={link && Link}\n        onClick={toggleCollapse}\n        className={classes.link}\n        to={link}\n        disableRipple\n      >\n        <ListItemIcon\n          className={classnames(classes.linkIcon, {\n            [classes.linkIconActive]: isLinkActive,\n          })}\n        >\n          {icon ? icon : <InboxIcon />}\n        </ListItemIcon>\n        <ListItemText\n          classes={{\n            primary: classnames(classes.linkText, {\n              [classes.linkTextActive]: isLinkActive,\n              [classes.linkTextHidden]: !isSidebarOpened,\n            }),\n          }}\n          primary={label}\n        />\n      </ListItem>\n      {children && (\n        <Collapse\n          in={isOpen && isSidebarOpened}\n          timeout=\"auto\"\n          unmountOnExit\n          className={classes.nestedList}\n        >\n          <List component=\"div\" disablePadding>\n            {children.map(childrenLink => (\n              <SidebarLink\n                key={childrenLink && childrenLink.link}\n                location={location}\n                isSidebarOpened={isSidebarOpened}\n                classes={classes}\n                nested\n                {...childrenLink}\n              />\n            ))}\n          </List>\n        </Collapse>\n      )}\n    </>\n  );\n\n  // ###########################################################\n\n  function toggleCollapse(e) {\n    if (isSidebarOpened) {\n      e.preventDefault();\n      setIsOpen(!isOpen);\n    }\n  }\n}\n","/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/charts/components/ApexLineChart.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/charts/components/ApexHeatmap.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/dashboard/components/Table/Table.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/dashboard/components/BigStat/BigStat.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Notification/Notification.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/UserAvatar/UserAvatar.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Widget/styles.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/PageTitle/styles.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Sidebar/components/SidebarLink/styles.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/pages/dashboard/components/BigStat/styles.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/Notification/styles.js",[],"/Users/vvt/Desktop/Practice/WebProgrammingProject/SbTickets_FE/src/components/UserAvatar/styles.js",[],{"ruleId":"347","severity":1,"message":"348","line":16,"column":17,"nodeType":"349","messageId":"350","endLine":16,"endColumn":28},{"ruleId":"351","severity":1,"message":"352","line":66,"column":6,"nodeType":"353","endLine":66,"endColumn":36,"suggestions":"354"},{"ruleId":"351","severity":1,"message":"352","line":72,"column":6,"nodeType":"353","endLine":72,"endColumn":33,"suggestions":"355"},{"ruleId":"347","severity":1,"message":"356","line":5,"column":10,"nodeType":"349","messageId":"350","endLine":5,"endColumn":20},{"ruleId":"347","severity":1,"message":"357","line":5,"column":22,"nodeType":"349","messageId":"350","endLine":5,"endColumn":28},{"ruleId":"347","severity":1,"message":"358","line":6,"column":22,"nodeType":"349","messageId":"350","endLine":6,"endColumn":32},{"ruleId":"351","severity":1,"message":"359","line":47,"column":8,"nodeType":"353","endLine":47,"endColumn":10,"suggestions":"360"},{"ruleId":"361","severity":1,"message":"362","line":111,"column":45,"nodeType":"363","messageId":"364","endLine":111,"endColumn":59},{"ruleId":"361","severity":1,"message":"362","line":123,"column":45,"nodeType":"363","messageId":"364","endLine":123,"endColumn":59},{"ruleId":"361","severity":1,"message":"362","line":135,"column":45,"nodeType":"363","messageId":"364","endLine":135,"endColumn":59},{"ruleId":"361","severity":1,"message":"362","line":147,"column":45,"nodeType":"363","messageId":"364","endLine":147,"endColumn":59},{"ruleId":"361","severity":1,"message":"362","line":161,"column":45,"nodeType":"363","messageId":"364","endLine":161,"endColumn":59},{"ruleId":"361","severity":1,"message":"362","line":173,"column":45,"nodeType":"363","messageId":"364","endLine":173,"endColumn":59},{"ruleId":"347","severity":1,"message":"356","line":5,"column":10,"nodeType":"349","messageId":"350","endLine":5,"endColumn":20},{"ruleId":"347","severity":1,"message":"357","line":5,"column":22,"nodeType":"349","messageId":"350","endLine":5,"endColumn":28},{"ruleId":"347","severity":1,"message":"358","line":6,"column":22,"nodeType":"349","messageId":"350","endLine":6,"endColumn":32},{"ruleId":"351","severity":1,"message":"359","line":49,"column":6,"nodeType":"353","endLine":49,"endColumn":8,"suggestions":"365"},{"ruleId":"366","severity":1,"message":"367","line":112,"column":25,"nodeType":"368","endLine":115,"endColumn":56},{"ruleId":"361","severity":1,"message":"362","line":126,"column":23,"nodeType":"363","messageId":"364","endLine":126,"endColumn":37},{"ruleId":"361","severity":1,"message":"362","line":138,"column":23,"nodeType":"363","messageId":"364","endLine":138,"endColumn":37},{"ruleId":"361","severity":1,"message":"362","line":150,"column":23,"nodeType":"363","messageId":"364","endLine":150,"endColumn":37},{"ruleId":"361","severity":1,"message":"362","line":177,"column":23,"nodeType":"363","messageId":"364","endLine":177,"endColumn":37},{"ruleId":"361","severity":1,"message":"362","line":189,"column":23,"nodeType":"363","messageId":"364","endLine":189,"endColumn":37},{"ruleId":"361","severity":1,"message":"362","line":215,"column":23,"nodeType":"363","messageId":"364","endLine":215,"endColumn":37},{"ruleId":"347","severity":1,"message":"369","line":1,"column":27,"nodeType":"349","messageId":"350","endLine":1,"endColumn":36},{"ruleId":"347","severity":1,"message":"358","line":5,"column":22,"nodeType":"349","messageId":"350","endLine":5,"endColumn":32},{"ruleId":"361","severity":1,"message":"362","line":92,"column":23,"nodeType":"363","messageId":"364","endLine":92,"endColumn":37},{"ruleId":"361","severity":1,"message":"362","line":103,"column":23,"nodeType":"363","messageId":"364","endLine":103,"endColumn":37},{"ruleId":"361","severity":1,"message":"362","line":114,"column":23,"nodeType":"363","messageId":"364","endLine":114,"endColumn":37},{"ruleId":"361","severity":1,"message":"362","line":125,"column":23,"nodeType":"363","messageId":"364","endLine":125,"endColumn":37},{"ruleId":"361","severity":1,"message":"362","line":138,"column":23,"nodeType":"363","messageId":"364","endLine":138,"endColumn":37},{"ruleId":"347","severity":1,"message":"356","line":5,"column":10,"nodeType":"349","messageId":"350","endLine":5,"endColumn":20},{"ruleId":"347","severity":1,"message":"357","line":5,"column":22,"nodeType":"349","messageId":"350","endLine":5,"endColumn":28},{"ruleId":"347","severity":1,"message":"358","line":6,"column":22,"nodeType":"349","messageId":"350","endLine":6,"endColumn":32},{"ruleId":"347","severity":1,"message":"370","line":27,"column":11,"nodeType":"349","messageId":"350","endLine":27,"endColumn":19},{"ruleId":"347","severity":1,"message":"371","line":28,"column":11,"nodeType":"349","messageId":"350","endLine":28,"endColumn":22},{"ruleId":"351","severity":1,"message":"359","line":58,"column":6,"nodeType":"353","endLine":58,"endColumn":8,"suggestions":"372"},{"ruleId":"351","severity":1,"message":"373","line":87,"column":6,"nodeType":"353","endLine":87,"endColumn":8,"suggestions":"374"},{"ruleId":"375","severity":1,"message":"376","line":271,"column":62,"nodeType":"377","messageId":"378","endLine":271,"endColumn":69},{"ruleId":"375","severity":1,"message":"376","line":306,"column":57,"nodeType":"377","messageId":"378","endLine":306,"endColumn":64},{"ruleId":"361","severity":1,"message":"362","line":341,"column":23,"nodeType":"363","messageId":"364","endLine":341,"endColumn":37},{"ruleId":"361","severity":1,"message":"362","line":353,"column":23,"nodeType":"363","messageId":"364","endLine":353,"endColumn":37},{"ruleId":"361","severity":1,"message":"362","line":365,"column":23,"nodeType":"363","messageId":"364","endLine":365,"endColumn":37},{"ruleId":"347","severity":1,"message":"369","line":1,"column":27,"nodeType":"349","messageId":"350","endLine":1,"endColumn":36},{"ruleId":"347","severity":1,"message":"358","line":5,"column":22,"nodeType":"349","messageId":"350","endLine":5,"endColumn":32},{"ruleId":"361","severity":1,"message":"362","line":95,"column":45,"nodeType":"363","messageId":"364","endLine":95,"endColumn":59},{"ruleId":"361","severity":1,"message":"362","line":106,"column":45,"nodeType":"363","messageId":"364","endLine":106,"endColumn":59},{"ruleId":"361","severity":1,"message":"362","line":117,"column":45,"nodeType":"363","messageId":"364","endLine":117,"endColumn":59},{"ruleId":"361","severity":1,"message":"362","line":128,"column":45,"nodeType":"363","messageId":"364","endLine":128,"endColumn":59},{"ruleId":"361","severity":1,"message":"362","line":141,"column":45,"nodeType":"363","messageId":"364","endLine":141,"endColumn":59},{"ruleId":"361","severity":1,"message":"362","line":152,"column":45,"nodeType":"363","messageId":"364","endLine":152,"endColumn":59},{"ruleId":"347","severity":1,"message":"358","line":5,"column":22,"nodeType":"349","messageId":"350","endLine":5,"endColumn":32},{"ruleId":"351","severity":1,"message":"373","line":65,"column":6,"nodeType":"353","endLine":65,"endColumn":8,"suggestions":"379"},{"ruleId":"375","severity":1,"message":"376","line":246,"column":62,"nodeType":"377","messageId":"378","endLine":246,"endColumn":69},{"ruleId":"375","severity":1,"message":"376","line":281,"column":57,"nodeType":"377","messageId":"378","endLine":281,"endColumn":64},{"ruleId":"361","severity":1,"message":"362","line":304,"column":23,"nodeType":"363","messageId":"364","endLine":304,"endColumn":37},{"ruleId":"361","severity":1,"message":"362","line":316,"column":23,"nodeType":"363","messageId":"364","endLine":316,"endColumn":37},{"ruleId":"361","severity":1,"message":"362","line":328,"column":23,"nodeType":"363","messageId":"364","endLine":328,"endColumn":37},{"ruleId":"347","severity":1,"message":"369","line":1,"column":27,"nodeType":"349","messageId":"350","endLine":1,"endColumn":36},{"ruleId":"347","severity":1,"message":"358","line":5,"column":22,"nodeType":"349","messageId":"350","endLine":5,"endColumn":32},{"ruleId":"361","severity":1,"message":"362","line":89,"column":23,"nodeType":"363","messageId":"364","endLine":89,"endColumn":37},{"ruleId":"361","severity":1,"message":"362","line":100,"column":23,"nodeType":"363","messageId":"364","endLine":100,"endColumn":37},{"ruleId":"347","severity":1,"message":"356","line":5,"column":10,"nodeType":"349","messageId":"350","endLine":5,"endColumn":20},{"ruleId":"347","severity":1,"message":"357","line":5,"column":22,"nodeType":"349","messageId":"350","endLine":5,"endColumn":28},{"ruleId":"347","severity":1,"message":"358","line":6,"column":22,"nodeType":"349","messageId":"350","endLine":6,"endColumn":32},{"ruleId":"351","severity":1,"message":"359","line":45,"column":6,"nodeType":"353","endLine":45,"endColumn":8,"suggestions":"380"},{"ruleId":"361","severity":1,"message":"362","line":108,"column":23,"nodeType":"363","messageId":"364","endLine":108,"endColumn":37},{"ruleId":"361","severity":1,"message":"362","line":120,"column":23,"nodeType":"363","messageId":"364","endLine":120,"endColumn":37},{"ruleId":"361","severity":1,"message":"362","line":132,"column":23,"nodeType":"363","messageId":"364","endLine":132,"endColumn":37},{"ruleId":"361","severity":1,"message":"362","line":144,"column":23,"nodeType":"363","messageId":"364","endLine":144,"endColumn":37},{"ruleId":"347","severity":1,"message":"381","line":9,"column":21,"nodeType":"349","messageId":"350","endLine":9,"endColumn":32},{"ruleId":"347","severity":1,"message":"382","line":10,"column":19,"nodeType":"349","messageId":"350","endLine":10,"endColumn":30},{"ruleId":"347","severity":1,"message":"383","line":11,"column":18,"nodeType":"349","messageId":"350","endLine":11,"endColumn":25},{"ruleId":"347","severity":1,"message":"384","line":26,"column":8,"nodeType":"349","messageId":"350","endLine":26,"endColumn":11},{"ruleId":"347","severity":1,"message":"385","line":10,"column":3,"nodeType":"349","messageId":"350","endLine":10,"endColumn":7},{"ruleId":"347","severity":1,"message":"357","line":27,"column":29,"nodeType":"349","messageId":"350","endLine":27,"endColumn":35},{"ruleId":"375","severity":1,"message":"376","line":38,"column":35,"nodeType":"386","messageId":"387","endLine":38,"endColumn":37},{"ruleId":"375","severity":1,"message":"376","line":39,"column":35,"nodeType":"386","messageId":"387","endLine":39,"endColumn":37},{"ruleId":"388","severity":1,"message":"389","line":22,"column":72,"nodeType":"390","messageId":"391","endLine":22,"endColumn":74},{"ruleId":"388","severity":1,"message":"389","line":22,"column":103,"nodeType":"390","messageId":"391","endLine":22,"endColumn":105},{"ruleId":"388","severity":1,"message":"389","line":23,"column":77,"nodeType":"390","messageId":"391","endLine":23,"endColumn":79},{"ruleId":"388","severity":1,"message":"389","line":23,"column":108,"nodeType":"390","messageId":"391","endLine":23,"endColumn":110},{"ruleId":"375","severity":1,"message":"376","line":52,"column":35,"nodeType":"386","messageId":"387","endLine":52,"endColumn":37},{"ruleId":"375","severity":1,"message":"376","line":38,"column":35,"nodeType":"386","messageId":"387","endLine":38,"endColumn":37},{"ruleId":"347","severity":1,"message":"392","line":20,"column":8,"nodeType":"349","messageId":"350","endLine":20,"endColumn":11},"no-unused-vars","'TwitterIcon' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'layoutState.message'. Either include it or remove the dependency array.","ArrayExpression",["393"],["394"],"'Typography' is defined but never used.","'Button' is defined but never used.","'withStyles' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["395"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",["396"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'driverId' is assigned a value but never used.","'assitanceId' is assigned a value but never used.",["397"],"React Hook useEffect has missing dependencies: 'selectedDriver' and 'selectedassitDriver'. Either include them or remove the dependency array.",["398"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue",["399"],["400"],"'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'Dot' is defined but never used.","'Link' is defined but never used.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Bus' is defined but never used.",{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"405","fix":"407"},{"desc":"405","fix":"408"},{"desc":"409","fix":"410"},{"desc":"409","fix":"411"},{"desc":"405","fix":"412"},"Update the dependencies array to be: [layoutState.message, layoutState.showToastSuccess]",{"range":"413","text":"414"},"Update the dependencies array to be: [layoutState.message, layoutState.showToastFail]",{"range":"415","text":"416"},"Update the dependencies array to be: [id]",{"range":"417","text":"418"},{"range":"419","text":"418"},{"range":"420","text":"418"},"Update the dependencies array to be: [selectedDriver, selectedassitDriver]",{"range":"421","text":"422"},{"range":"423","text":"422"},{"range":"424","text":"418"},[1909,1939],"[layoutState.message, layoutState.showToastSuccess]",[2051,2078],"[layoutState.message, layoutState.showToastFail]",[1716,1718],"[id]",[1588,1590],[2151,2153],[2807,2809],"[selectedDriver, selectedassitDriver]",[1883,1885],[1415,1417]]